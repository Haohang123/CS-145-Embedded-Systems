
Project 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000ac6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00000ac6  00000b5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000060  00800072  00800072  00000b6c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000b9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e22  00000000  00000000  00000cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008bb  00000000  00000000  00001ad2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006fe  00000000  00000000  0000238d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001ec  00000000  00000000  00002a8c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000426  00000000  00000000  00002c78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000069f  00000000  00000000  0000309e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c0  00000000  00000000  0000373d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <__ctors_end>
   4:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   8:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
   c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  10:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  14:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  18:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  1c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  20:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  24:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  28:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  2c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  30:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  34:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  38:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  3c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  40:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  44:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  48:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  4c:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  50:	0c 94 88 00 	jmp	0x110	; 0x110 <__bad_interrupt>
  54:	07 63       	ori	r16, 0x37	; 55
  56:	42 36       	cpi	r20, 0x62	; 98
  58:	b7 9b       	sbis	0x16, 7	; 22
  5a:	d8 a7       	std	Y+40, r29	; 0x28
  5c:	1a 39       	cpi	r17, 0x9A	; 154
  5e:	68 56       	subi	r22, 0x68	; 104
  60:	18 ae       	std	Y+56, r1	; 0x38
  62:	ba ab       	std	Y+50, r27	; 0x32
  64:	55 8c       	ldd	r5, Z+29	; 0x1d
  66:	1d 3c       	cpi	r17, 0xCD	; 205
  68:	b7 cc       	rjmp	.-1682   	; 0xfffff9d8 <__eeprom_end+0xff7ef9d8>
  6a:	57 63       	ori	r21, 0x37	; 55
  6c:	bd 6d       	ori	r27, 0xDD	; 221
  6e:	ed fd       	.word	0xfded	; ????
  70:	75 3e       	cpi	r23, 0xE5	; 229
  72:	f6 17       	cp	r31, r22
  74:	72 31       	cpi	r23, 0x12	; 18
  76:	bf 00       	.word	0x00bf	; ????
  78:	00 00       	nop
  7a:	80 3f       	cpi	r24, 0xF0	; 240
  7c:	08 00       	.word	0x0008	; ????
  7e:	00 00       	nop
  80:	be 92       	st	-X, r11
  82:	24 49       	sbci	r18, 0x94	; 148
  84:	12 3e       	cpi	r17, 0xE2	; 226
  86:	ab aa       	std	Y+51, r10	; 0x33
  88:	aa 2a       	or	r10, r26
  8a:	be cd       	rjmp	.-1156   	; 0xfffffc08 <__eeprom_end+0xff7efc08>
  8c:	cc cc       	rjmp	.-1640   	; 0xfffffa26 <__eeprom_end+0xff7efa26>
  8e:	4c 3e       	cpi	r20, 0xEC	; 236
  90:	00 00       	nop
  92:	00 80       	ld	r0, Z
  94:	be ab       	std	Y+54, r27	; 0x36
  96:	aa aa       	std	Y+50, r10	; 0x32
  98:	aa 3e       	cpi	r26, 0xEA	; 234
  9a:	00 00       	nop
  9c:	00 00       	nop
  9e:	bf 00       	.word	0x00bf	; ????
  a0:	00 00       	nop
  a2:	80 3f       	cpi	r24, 0xF0	; 240
  a4:	00 00       	nop
  a6:	00 00       	nop
  a8:	00 08       	sbc	r0, r0
  aa:	41 78       	andi	r20, 0x81	; 129
  ac:	d3 bb       	out	0x13, r29	; 19
  ae:	43 87       	std	Z+11, r20	; 0x0b
  b0:	d1 13       	cpse	r29, r17
  b2:	3d 19       	sub	r19, r13
  b4:	0e 3c       	cpi	r16, 0xCE	; 206
  b6:	c3 bd       	out	0x23, r28	; 35
  b8:	42 82       	std	Z+2, r4	; 0x02
  ba:	ad 2b       	or	r26, r29
  bc:	3e 68       	ori	r19, 0x8E	; 142
  be:	ec 82       	std	Y+4, r14	; 0x04
  c0:	76 be       	out	0x36, r7	; 54
  c2:	d9 8f       	std	Y+25, r29	; 0x19
  c4:	e1 a9       	ldd	r30, Z+49	; 0x31
  c6:	3e 4c       	sbci	r19, 0xCE	; 206
  c8:	80 ef       	ldi	r24, 0xF0	; 240
  ca:	ff be       	out	0x3f, r15	; 63
  cc:	01 c4       	rjmp	.+2050   	; 0x8d0 <__stack+0x71>
  ce:	ff 7f       	andi	r31, 0xFF	; 255
  d0:	3f 00       	.word	0x003f	; ????
  d2:	00 00       	nop
	...

000000d6 <__ctors_end>:
  d6:	11 24       	eor	r1, r1
  d8:	1f be       	out	0x3f, r1	; 63
  da:	cf e5       	ldi	r28, 0x5F	; 95
  dc:	d8 e0       	ldi	r29, 0x08	; 8
  de:	de bf       	out	0x3e, r29	; 62
  e0:	cd bf       	out	0x3d, r28	; 61

000000e2 <__do_copy_data>:
  e2:	10 e0       	ldi	r17, 0x00	; 0
  e4:	a0 e6       	ldi	r26, 0x60	; 96
  e6:	b0 e0       	ldi	r27, 0x00	; 0
  e8:	e6 ec       	ldi	r30, 0xC6	; 198
  ea:	fa e0       	ldi	r31, 0x0A	; 10
  ec:	02 c0       	rjmp	.+4      	; 0xf2 <__do_copy_data+0x10>
  ee:	05 90       	lpm	r0, Z+
  f0:	0d 92       	st	X+, r0
  f2:	a2 37       	cpi	r26, 0x72	; 114
  f4:	b1 07       	cpc	r27, r17
  f6:	d9 f7       	brne	.-10     	; 0xee <__do_copy_data+0xc>

000000f8 <__do_clear_bss>:
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	a2 e7       	ldi	r26, 0x72	; 114
  fc:	b0 e0       	ldi	r27, 0x00	; 0
  fe:	01 c0       	rjmp	.+2      	; 0x102 <.do_clear_bss_start>

00000100 <.do_clear_bss_loop>:
 100:	1d 92       	st	X+, r1

00000102 <.do_clear_bss_start>:
 102:	a2 3d       	cpi	r26, 0xD2	; 210
 104:	b2 07       	cpc	r27, r18
 106:	e1 f7       	brne	.-8      	; 0x100 <.do_clear_bss_loop>
 108:	0e 94 a0 01 	call	0x340	; 0x340 <main>
 10c:	0c 94 61 05 	jmp	0xac2	; 0xac2 <_exit>

00000110 <__bad_interrupt>:
 110:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000114 <avr_init>:
#include "avr.h"

void
avr_init(void)
{
	WDTCR = 15;
 114:	8f e0       	ldi	r24, 0x0F	; 15
 116:	81 bd       	out	0x21, r24	; 33
 118:	08 95       	ret

0000011a <avr_wait>:
}

void
avr_wait(unsigned short msec)
{
 11a:	9c 01       	movw	r18, r24
	TCCR0 = 3;
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
 120:	83 e8       	ldi	r24, 0x83	; 131

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
 122:	08 c0       	rjmp	.+16     	; 0x134 <avr_wait+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
 124:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
 126:	98 b7       	in	r25, 0x38	; 56
 128:	91 60       	ori	r25, 0x01	; 1
 12a:	98 bf       	out	0x38, r25	; 56
		WDR();
 12c:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
 12e:	08 b6       	in	r0, 0x38	; 56
 130:	00 fe       	sbrs	r0, 0
 132:	fd cf       	rjmp	.-6      	; 0x12e <avr_wait+0x14>

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
 134:	21 50       	subi	r18, 0x01	; 1
 136:	31 09       	sbc	r19, r1
 138:	a8 f7       	brcc	.-22     	; 0x124 <avr_wait+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
 13a:	13 be       	out	0x33, r1	; 51
 13c:	08 95       	ret

0000013e <output>:
}

static void
output(unsigned char d, unsigned char rs)
{
	if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
 13e:	66 23       	and	r22, r22
 140:	11 f0       	breq	.+4      	; 0x146 <output+0x8>
 142:	c0 9a       	sbi	0x18, 0	; 24
 144:	01 c0       	rjmp	.+2      	; 0x148 <output+0xa>
 146:	c0 98       	cbi	0x18, 0	; 24
	CLR_BIT(PORT, RW_PIN);
 148:	c1 98       	cbi	0x18, 1	; 24
#define EN_PIN 2

static inline void
set_data(unsigned char x)
{
	PORTD = x;
 14a:	82 bb       	out	0x12, r24	; 18
	DDRD = 0xff;
 14c:	8f ef       	ldi	r24, 0xFF	; 255
 14e:	81 bb       	out	0x11, r24	; 17
output(unsigned char d, unsigned char rs)
{
	if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
	CLR_BIT(PORT, RW_PIN);
	set_data(d);
	SET_BIT(PORT, EN_PIN);
 150:	c2 9a       	sbi	0x18, 2	; 24
}

static inline void
sleep_700ns(void)
{
	NOP();
 152:	00 00       	nop
	NOP();
 154:	00 00       	nop
	NOP();
 156:	00 00       	nop
	if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
	CLR_BIT(PORT, RW_PIN);
	set_data(d);
	SET_BIT(PORT, EN_PIN);
	sleep_700ns();
	CLR_BIT(PORT, EN_PIN);
 158:	c2 98       	cbi	0x18, 2	; 24
 15a:	08 95       	ret

0000015c <write>:

static unsigned char
input(unsigned char rs)
{
	unsigned char d;
	if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
 15c:	c0 98       	cbi	0x18, 0	; 24
	SET_BIT(PORT, RW_PIN);
 15e:	c1 9a       	sbi	0x18, 1	; 24
}

static inline unsigned char
get_data(void)
{
	DDRD = 0x00;
 160:	11 ba       	out	0x11, r1	; 17
	return PIND;
 162:	90 b3       	in	r25, 0x10	; 16
{
	unsigned char d;
	if (rs) SET_BIT(PORT, RS_PIN); else CLR_BIT(PORT, RS_PIN);
	SET_BIT(PORT, RW_PIN);
	get_data();
	SET_BIT(PORT, EN_PIN);
 164:	c2 9a       	sbi	0x18, 2	; 24
}

static inline void
sleep_700ns(void)
{
	NOP();
 166:	00 00       	nop
	NOP();
 168:	00 00       	nop
	NOP();
 16a:	00 00       	nop
}

static inline unsigned char
get_data(void)
{
	DDRD = 0x00;
 16c:	11 ba       	out	0x11, r1	; 17
	return PIND;
 16e:	90 b3       	in	r25, 0x10	; 16
	SET_BIT(PORT, RW_PIN);
	get_data();
	SET_BIT(PORT, EN_PIN);
	sleep_700ns();
	d = get_data();
	CLR_BIT(PORT, EN_PIN);
 170:	c2 98       	cbi	0x18, 2	; 24
}

static void
write(unsigned char c, unsigned char rs)
{
	while (input(0) & 0x80);
 172:	99 23       	and	r25, r25
 174:	9c f3       	brlt	.-26     	; 0x15c <write>
	output(c, rs);
 176:	0e 94 9f 00 	call	0x13e	; 0x13e <output>
 17a:	08 95       	ret

0000017c <lcd_init>:
}

void
lcd_init(void)
{
	SET_BIT(DDR, RS_PIN);
 17c:	b8 9a       	sbi	0x17, 0	; 23
	SET_BIT(DDR, RW_PIN);
 17e:	b9 9a       	sbi	0x17, 1	; 23
	SET_BIT(DDR, EN_PIN);
 180:	ba 9a       	sbi	0x17, 2	; 23
	avr_wait(16);
 182:	80 e1       	ldi	r24, 0x10	; 16
 184:	90 e0       	ldi	r25, 0x00	; 0
 186:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
	output(0x30, 0);
 18a:	60 e0       	ldi	r22, 0x00	; 0
 18c:	80 e3       	ldi	r24, 0x30	; 48
 18e:	0e 94 9f 00 	call	0x13e	; 0x13e <output>
	avr_wait(5);
 192:	85 e0       	ldi	r24, 0x05	; 5
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
	output(0x30, 0);
 19a:	60 e0       	ldi	r22, 0x00	; 0
 19c:	80 e3       	ldi	r24, 0x30	; 48
 19e:	0e 94 9f 00 	call	0x13e	; 0x13e <output>
	avr_wait(1);
 1a2:	81 e0       	ldi	r24, 0x01	; 1
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
	write(0x3c, 0);
 1aa:	60 e0       	ldi	r22, 0x00	; 0
 1ac:	8c e3       	ldi	r24, 0x3C	; 60
 1ae:	0e 94 ae 00 	call	0x15c	; 0x15c <write>
	write(0x0c, 0);
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	8c e0       	ldi	r24, 0x0C	; 12
 1b6:	0e 94 ae 00 	call	0x15c	; 0x15c <write>
	write(0x06, 0);
 1ba:	60 e0       	ldi	r22, 0x00	; 0
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 ae 00 	call	0x15c	; 0x15c <write>
	write(0x01, 0);
 1c2:	60 e0       	ldi	r22, 0x00	; 0
 1c4:	81 e0       	ldi	r24, 0x01	; 1
 1c6:	0e 94 ae 00 	call	0x15c	; 0x15c <write>
 1ca:	08 95       	ret

000001cc <is_pressed>:
	avr_wait(500);
	CLR_BIT(PORTB,0);
	avr_wait(500);
}

void play_song() {
 1cc:	cf 93       	push	r28
 1ce:	df 93       	push	r29
 1d0:	14 ba       	out	0x14, r1	; 20
 1d2:	15 ba       	out	0x15, r1	; 21
 1d4:	44 b3       	in	r20, 0x14	; 20
 1d6:	21 e0       	ldi	r18, 0x01	; 1
 1d8:	30 e0       	ldi	r19, 0x00	; 0
 1da:	f9 01       	movw	r30, r18
 1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <is_pressed+0x16>
 1de:	ee 0f       	add	r30, r30
 1e0:	ff 1f       	adc	r31, r31
 1e2:	8a 95       	dec	r24
 1e4:	e2 f7       	brpl	.-8      	; 0x1de <is_pressed+0x12>
 1e6:	cf 01       	movw	r24, r30
 1e8:	84 2b       	or	r24, r20
 1ea:	84 bb       	out	0x14, r24	; 20
 1ec:	85 b3       	in	r24, 0x15	; 21
 1ee:	eb 01       	movw	r28, r22
 1f0:	24 96       	adiw	r28, 0x04	; 4
 1f2:	0c 2e       	mov	r0, r28
 1f4:	02 c0       	rjmp	.+4      	; 0x1fa <is_pressed+0x2e>
 1f6:	22 0f       	add	r18, r18
 1f8:	33 1f       	adc	r19, r19
 1fa:	0a 94       	dec	r0
 1fc:	e2 f7       	brpl	.-8      	; 0x1f6 <is_pressed+0x2a>
 1fe:	28 2b       	or	r18, r24
 200:	25 bb       	out	0x15, r18	; 21
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
 20a:	23 b3       	in	r18, 0x13	; 19
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	02 c0       	rjmp	.+4      	; 0x214 <is_pressed+0x48>
 210:	35 95       	asr	r19
 212:	27 95       	ror	r18
 214:	ca 95       	dec	r28
 216:	e2 f7       	brpl	.-8      	; 0x210 <is_pressed+0x44>
 218:	81 e0       	ldi	r24, 0x01	; 1
 21a:	90 e0       	ldi	r25, 0x00	; 0
 21c:	20 ff       	sbrs	r18, 0
 21e:	02 c0       	rjmp	.+4      	; 0x224 <is_pressed+0x58>
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	90 e0       	ldi	r25, 0x00	; 0
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	08 95       	ret

0000022a <get_key>:
 22a:	0f 93       	push	r16
 22c:	1f 93       	push	r17
 22e:	cf 93       	push	r28
 230:	df 93       	push	r29
 232:	00 e0       	ldi	r16, 0x00	; 0
 234:	10 e0       	ldi	r17, 0x00	; 0
 236:	18 c0       	rjmp	.+48     	; 0x268 <get_key+0x3e>
 238:	be 01       	movw	r22, r28
 23a:	c8 01       	movw	r24, r16
 23c:	0e 94 e6 00 	call	0x1cc	; 0x1cc <is_pressed>
 240:	00 97       	sbiw	r24, 0x00	; 0
 242:	49 f0       	breq	.+18     	; 0x256 <get_key+0x2c>
 244:	00 0f       	add	r16, r16
 246:	11 1f       	adc	r17, r17
 248:	00 0f       	add	r16, r16
 24a:	11 1f       	adc	r17, r17
 24c:	c0 0f       	add	r28, r16
 24e:	d1 1f       	adc	r29, r17
 250:	ce 01       	movw	r24, r28
 252:	01 96       	adiw	r24, 0x01	; 1
 254:	0c c0       	rjmp	.+24     	; 0x26e <get_key+0x44>
 256:	21 96       	adiw	r28, 0x01	; 1
 258:	c4 30       	cpi	r28, 0x04	; 4
 25a:	d1 05       	cpc	r29, r1
 25c:	69 f7       	brne	.-38     	; 0x238 <get_key+0xe>
 25e:	0f 5f       	subi	r16, 0xFF	; 255
 260:	1f 4f       	sbci	r17, 0xFF	; 255
 262:	04 30       	cpi	r16, 0x04	; 4
 264:	11 05       	cpc	r17, r1
 266:	19 f0       	breq	.+6      	; 0x26e <get_key+0x44>
 268:	c0 e0       	ldi	r28, 0x00	; 0
 26a:	d0 e0       	ldi	r29, 0x00	; 0
 26c:	e5 cf       	rjmp	.-54     	; 0x238 <get_key+0xe>
 26e:	df 91       	pop	r29
 270:	cf 91       	pop	r28
 272:	1f 91       	pop	r17
 274:	0f 91       	pop	r16
 276:	08 95       	ret

00000278 <play_note>:
	
}

void play_note(int frequency,int duration) {
 278:	0f 93       	push	r16
 27a:	1f 93       	push	r17
 27c:	cf 93       	push	r28
 27e:	df 93       	push	r29
	int TH = (1 / frequency) / 2;
	int TL;
	for (int i = 0; i < duration; ++i) {
 280:	16 16       	cp	r1, r22
 282:	17 06       	cpc	r1, r23
 284:	8c f4       	brge	.+34     	; 0x2a8 <play_note+0x30>
 286:	8b 01       	movw	r16, r22
 288:	c0 e0       	ldi	r28, 0x00	; 0
 28a:	d0 e0       	ldi	r29, 0x00	; 0
		SET_BIT(PORTA,0);
 28c:	d8 9a       	sbi	0x1b, 0	; 27
		avr_wait(1);
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
		CLR_BIT(PORTA,0);
 296:	d8 98       	cbi	0x1b, 0	; 27
		avr_wait(1);
 298:	81 e0       	ldi	r24, 0x01	; 1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
}

void play_note(int frequency,int duration) {
	int TH = (1 / frequency) / 2;
	int TL;
	for (int i = 0; i < duration; ++i) {
 2a0:	21 96       	adiw	r28, 0x01	; 1
 2a2:	0c 17       	cp	r16, r28
 2a4:	1d 07       	cpc	r17, r29
 2a6:	91 f7       	brne	.-28     	; 0x28c <play_note+0x14>
		SET_BIT(PORTA,0);
		avr_wait(1);
		CLR_BIT(PORTA,0);
		avr_wait(1);
	}
}
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	1f 91       	pop	r17
 2ae:	0f 91       	pop	r16
 2b0:	08 95       	ret

000002b2 <notes_init>:

void notes_init() {
 2b2:	cf 92       	push	r12
 2b4:	df 92       	push	r13
 2b6:	ef 92       	push	r14
 2b8:	ff 92       	push	r15
 2ba:	0f 93       	push	r16
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	02 e7       	ldi	r16, 0x72	; 114
 2c4:	10 e0       	ldi	r17, 0x00	; 0
	int frequency = 220;
	for (int i = 0; i < TOTAL_NOTES; ++i){
 2c6:	c0 e0       	ldi	r28, 0x00	; 0
 2c8:	d0 e0       	ldi	r29, 0x00	; 0
		NOTES[i].frequency = pow(2.0, (double)i / TOTAL_NOTES ) * frequency;
		NOTES[i].duration = 5; //(1/NOTES[i].frequency) / 2
 2ca:	0f 2e       	mov	r0, r31
 2cc:	c1 2c       	mov	r12, r1
 2ce:	d1 2c       	mov	r13, r1
 2d0:	f0 ea       	ldi	r31, 0xA0	; 160
 2d2:	ef 2e       	mov	r14, r31
 2d4:	f0 e4       	ldi	r31, 0x40	; 64
 2d6:	ff 2e       	mov	r15, r31
 2d8:	f0 2d       	mov	r31, r0
}

void notes_init() {
	int frequency = 220;
	for (int i = 0; i < TOTAL_NOTES; ++i){
		NOTES[i].frequency = pow(2.0, (double)i / TOTAL_NOTES ) * frequency;
 2da:	be 01       	movw	r22, r28
 2dc:	0d 2e       	mov	r0, r29
 2de:	00 0c       	add	r0, r0
 2e0:	88 0b       	sbc	r24, r24
 2e2:	99 0b       	sbc	r25, r25
 2e4:	0e 94 76 02 	call	0x4ec	; 0x4ec <__floatsisf>
 2e8:	20 e0       	ldi	r18, 0x00	; 0
 2ea:	30 e0       	ldi	r19, 0x00	; 0
 2ec:	40 e4       	ldi	r20, 0x40	; 64
 2ee:	51 e4       	ldi	r21, 0x41	; 65
 2f0:	0e 94 cc 01 	call	0x398	; 0x398 <__divsf3>
 2f4:	9b 01       	movw	r18, r22
 2f6:	ac 01       	movw	r20, r24
 2f8:	60 e0       	ldi	r22, 0x00	; 0
 2fa:	70 e0       	ldi	r23, 0x00	; 0
 2fc:	80 e0       	ldi	r24, 0x00	; 0
 2fe:	90 e4       	ldi	r25, 0x40	; 64
 300:	0e 94 6f 03 	call	0x6de	; 0x6de <pow>
 304:	20 e0       	ldi	r18, 0x00	; 0
 306:	30 e0       	ldi	r19, 0x00	; 0
 308:	4c e5       	ldi	r20, 0x5C	; 92
 30a:	53 e4       	ldi	r21, 0x43	; 67
 30c:	0e 94 02 03 	call	0x604	; 0x604 <__mulsf3>
 310:	f8 01       	movw	r30, r16
 312:	60 83       	st	Z, r22
 314:	71 83       	std	Z+1, r23	; 0x01
 316:	82 83       	std	Z+2, r24	; 0x02
 318:	93 83       	std	Z+3, r25	; 0x03
		NOTES[i].duration = 5; //(1/NOTES[i].frequency) / 2
 31a:	c4 82       	std	Z+4, r12	; 0x04
 31c:	d5 82       	std	Z+5, r13	; 0x05
 31e:	e6 82       	std	Z+6, r14	; 0x06
 320:	f7 82       	std	Z+7, r15	; 0x07
	}
}

void notes_init() {
	int frequency = 220;
	for (int i = 0; i < TOTAL_NOTES; ++i){
 322:	21 96       	adiw	r28, 0x01	; 1
 324:	08 5f       	subi	r16, 0xF8	; 248
 326:	1f 4f       	sbci	r17, 0xFF	; 255
 328:	cc 30       	cpi	r28, 0x0C	; 12
 32a:	d1 05       	cpc	r29, r1
 32c:	b1 f6       	brne	.-84     	; 0x2da <notes_init+0x28>
		NOTES[i].frequency = pow(2.0, (double)i / TOTAL_NOTES ) * frequency;
		NOTES[i].duration = 5; //(1/NOTES[i].frequency) / 2
	}
}
 32e:	df 91       	pop	r29
 330:	cf 91       	pop	r28
 332:	1f 91       	pop	r17
 334:	0f 91       	pop	r16
 336:	ff 90       	pop	r15
 338:	ef 90       	pop	r14
 33a:	df 90       	pop	r13
 33c:	cf 90       	pop	r12
 33e:	08 95       	ret

00000340 <main>:

int main(void)
{
	avr_init();
 340:	0e 94 8a 00 	call	0x114	; 0x114 <avr_init>
	lcd_init();
 344:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_init>
	notes_init();
 348:	0e 94 59 01 	call	0x2b2	; 0x2b2 <notes_init>
	DDRA = 0x01;
 34c:	81 e0       	ldi	r24, 0x01	; 1
 34e:	8a bb       	out	0x1a, r24	; 26
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1')
		{
			play_note(NOTES[0].frequency, NOTES[0].duration);
 350:	c2 e7       	ldi	r28, 0x72	; 114
 352:	d0 e0       	ldi	r29, 0x00	; 0
	lcd_init();
	notes_init();
	DDRA = 0x01;
    while (1) 
    {
		int key = get_key() - 1;
 354:	0e 94 15 01 	call	0x22a	; 0x22a <get_key>
 358:	01 97       	sbiw	r24, 0x01	; 1
 35a:	c8 f0       	brcs	.+50     	; 0x38e <main+0x4e>
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1')
 35c:	fc 01       	movw	r30, r24
 35e:	e0 5a       	subi	r30, 0xA0	; 160
 360:	ff 4f       	sbci	r31, 0xFF	; 255
 362:	80 81       	ld	r24, Z
 364:	81 33       	cpi	r24, 0x31	; 49
 366:	99 f4       	brne	.+38     	; 0x38e <main+0x4e>
		{
			play_note(NOTES[0].frequency, NOTES[0].duration);
 368:	6c 81       	ldd	r22, Y+4	; 0x04
 36a:	7d 81       	ldd	r23, Y+5	; 0x05
 36c:	8e 81       	ldd	r24, Y+6	; 0x06
 36e:	9f 81       	ldd	r25, Y+7	; 0x07
 370:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixsfsi>
 374:	6b 01       	movw	r12, r22
 376:	7c 01       	movw	r14, r24
 378:	68 81       	ld	r22, Y
 37a:	79 81       	ldd	r23, Y+1	; 0x01
 37c:	8a 81       	ldd	r24, Y+2	; 0x02
 37e:	9b 81       	ldd	r25, Y+3	; 0x03
 380:	0e 94 3e 02 	call	0x47c	; 0x47c <__fixsfsi>
 384:	dc 01       	movw	r26, r24
 386:	cb 01       	movw	r24, r22
 388:	b6 01       	movw	r22, r12
 38a:	0e 94 3c 01 	call	0x278	; 0x278 <play_note>
		}
		avr_wait(1);
 38e:	81 e0       	ldi	r24, 0x01	; 1
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	0e 94 8d 00 	call	0x11a	; 0x11a <avr_wait>
    }
 396:	de cf       	rjmp	.-68     	; 0x354 <main+0x14>

00000398 <__divsf3>:
 398:	0e 94 e0 01 	call	0x3c0	; 0x3c0 <__divsf3x>
 39c:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_round>
 3a0:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_pscB>
 3a4:	58 f0       	brcs	.+22     	; 0x3bc <__divsf3+0x24>
 3a6:	0e 94 ba 02 	call	0x574	; 0x574 <__fp_pscA>
 3aa:	40 f0       	brcs	.+16     	; 0x3bc <__divsf3+0x24>
 3ac:	29 f4       	brne	.+10     	; 0x3b8 <__divsf3+0x20>
 3ae:	5f 3f       	cpi	r21, 0xFF	; 255
 3b0:	29 f0       	breq	.+10     	; 0x3bc <__divsf3+0x24>
 3b2:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 3b6:	51 11       	cpse	r21, r1
 3b8:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 3bc:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>

000003c0 <__divsf3x>:
 3c0:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_split3>
 3c4:	68 f3       	brcs	.-38     	; 0x3a0 <__divsf3+0x8>

000003c6 <__divsf3_pse>:
 3c6:	99 23       	and	r25, r25
 3c8:	b1 f3       	breq	.-20     	; 0x3b6 <__divsf3+0x1e>
 3ca:	55 23       	and	r21, r21
 3cc:	91 f3       	breq	.-28     	; 0x3b2 <__divsf3+0x1a>
 3ce:	95 1b       	sub	r25, r21
 3d0:	55 0b       	sbc	r21, r21
 3d2:	bb 27       	eor	r27, r27
 3d4:	aa 27       	eor	r26, r26
 3d6:	62 17       	cp	r22, r18
 3d8:	73 07       	cpc	r23, r19
 3da:	84 07       	cpc	r24, r20
 3dc:	38 f0       	brcs	.+14     	; 0x3ec <__divsf3_pse+0x26>
 3de:	9f 5f       	subi	r25, 0xFF	; 255
 3e0:	5f 4f       	sbci	r21, 0xFF	; 255
 3e2:	22 0f       	add	r18, r18
 3e4:	33 1f       	adc	r19, r19
 3e6:	44 1f       	adc	r20, r20
 3e8:	aa 1f       	adc	r26, r26
 3ea:	a9 f3       	breq	.-22     	; 0x3d6 <__divsf3_pse+0x10>
 3ec:	35 d0       	rcall	.+106    	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 3ee:	0e 2e       	mov	r0, r30
 3f0:	3a f0       	brmi	.+14     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f2:	e0 e8       	ldi	r30, 0x80	; 128
 3f4:	32 d0       	rcall	.+100    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 3f6:	91 50       	subi	r25, 0x01	; 1
 3f8:	50 40       	sbci	r21, 0x00	; 0
 3fa:	e6 95       	lsr	r30
 3fc:	00 1c       	adc	r0, r0
 3fe:	ca f7       	brpl	.-14     	; 0x3f2 <__divsf3_pse+0x2c>
 400:	2b d0       	rcall	.+86     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 402:	fe 2f       	mov	r31, r30
 404:	29 d0       	rcall	.+82     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 406:	66 0f       	add	r22, r22
 408:	77 1f       	adc	r23, r23
 40a:	88 1f       	adc	r24, r24
 40c:	bb 1f       	adc	r27, r27
 40e:	26 17       	cp	r18, r22
 410:	37 07       	cpc	r19, r23
 412:	48 07       	cpc	r20, r24
 414:	ab 07       	cpc	r26, r27
 416:	b0 e8       	ldi	r27, 0x80	; 128
 418:	09 f0       	breq	.+2      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 41a:	bb 0b       	sbc	r27, r27
 41c:	80 2d       	mov	r24, r0
 41e:	bf 01       	movw	r22, r30
 420:	ff 27       	eor	r31, r31
 422:	93 58       	subi	r25, 0x83	; 131
 424:	5f 4f       	sbci	r21, 0xFF	; 255
 426:	3a f0       	brmi	.+14     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 428:	9e 3f       	cpi	r25, 0xFE	; 254
 42a:	51 05       	cpc	r21, r1
 42c:	78 f0       	brcs	.+30     	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 42e:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 432:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	e4 f3       	brlt	.-8      	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43a:	98 3e       	cpi	r25, 0xE8	; 232
 43c:	d4 f3       	brlt	.-12     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 43e:	86 95       	lsr	r24
 440:	77 95       	ror	r23
 442:	67 95       	ror	r22
 444:	b7 95       	ror	r27
 446:	f7 95       	ror	r31
 448:	9f 5f       	subi	r25, 0xFF	; 255
 44a:	c9 f7       	brne	.-14     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 44c:	88 0f       	add	r24, r24
 44e:	91 1d       	adc	r25, r1
 450:	96 95       	lsr	r25
 452:	87 95       	ror	r24
 454:	97 f9       	bld	r25, 7
 456:	08 95       	ret
 458:	e1 e0       	ldi	r30, 0x01	; 1
 45a:	66 0f       	add	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	bb 1f       	adc	r27, r27
 462:	62 17       	cp	r22, r18
 464:	73 07       	cpc	r23, r19
 466:	84 07       	cpc	r24, r20
 468:	ba 07       	cpc	r27, r26
 46a:	20 f0       	brcs	.+8      	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 46c:	62 1b       	sub	r22, r18
 46e:	73 0b       	sbc	r23, r19
 470:	84 0b       	sbc	r24, r20
 472:	ba 0b       	sbc	r27, r26
 474:	ee 1f       	adc	r30, r30
 476:	88 f7       	brcc	.-30     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 478:	e0 95       	com	r30
 47a:	08 95       	ret

0000047c <__fixsfsi>:
 47c:	0e 94 45 02 	call	0x48a	; 0x48a <__fixunssfsi>
 480:	68 94       	set
 482:	b1 11       	cpse	r27, r1
 484:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 488:	08 95       	ret

0000048a <__fixunssfsi>:
 48a:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_splitA>
 48e:	88 f0       	brcs	.+34     	; 0x4b2 <__fixunssfsi+0x28>
 490:	9f 57       	subi	r25, 0x7F	; 127
 492:	98 f0       	brcs	.+38     	; 0x4ba <__fixunssfsi+0x30>
 494:	b9 2f       	mov	r27, r25
 496:	99 27       	eor	r25, r25
 498:	b7 51       	subi	r27, 0x17	; 23
 49a:	b0 f0       	brcs	.+44     	; 0x4c8 <__fixunssfsi+0x3e>
 49c:	e1 f0       	breq	.+56     	; 0x4d6 <__fixunssfsi+0x4c>
 49e:	66 0f       	add	r22, r22
 4a0:	77 1f       	adc	r23, r23
 4a2:	88 1f       	adc	r24, r24
 4a4:	99 1f       	adc	r25, r25
 4a6:	1a f0       	brmi	.+6      	; 0x4ae <__fixunssfsi+0x24>
 4a8:	ba 95       	dec	r27
 4aa:	c9 f7       	brne	.-14     	; 0x49e <__fixunssfsi+0x14>
 4ac:	14 c0       	rjmp	.+40     	; 0x4d6 <__fixunssfsi+0x4c>
 4ae:	b1 30       	cpi	r27, 0x01	; 1
 4b0:	91 f0       	breq	.+36     	; 0x4d6 <__fixunssfsi+0x4c>
 4b2:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <__fp_zero>
 4b6:	b1 e0       	ldi	r27, 0x01	; 1
 4b8:	08 95       	ret
 4ba:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_zero>
 4be:	67 2f       	mov	r22, r23
 4c0:	78 2f       	mov	r23, r24
 4c2:	88 27       	eor	r24, r24
 4c4:	b8 5f       	subi	r27, 0xF8	; 248
 4c6:	39 f0       	breq	.+14     	; 0x4d6 <__fixunssfsi+0x4c>
 4c8:	b9 3f       	cpi	r27, 0xF9	; 249
 4ca:	cc f3       	brlt	.-14     	; 0x4be <__fixunssfsi+0x34>
 4cc:	86 95       	lsr	r24
 4ce:	77 95       	ror	r23
 4d0:	67 95       	ror	r22
 4d2:	b3 95       	inc	r27
 4d4:	d9 f7       	brne	.-10     	; 0x4cc <__fixunssfsi+0x42>
 4d6:	3e f4       	brtc	.+14     	; 0x4e6 <__fixunssfsi+0x5c>
 4d8:	90 95       	com	r25
 4da:	80 95       	com	r24
 4dc:	70 95       	com	r23
 4de:	61 95       	neg	r22
 4e0:	7f 4f       	sbci	r23, 0xFF	; 255
 4e2:	8f 4f       	sbci	r24, 0xFF	; 255
 4e4:	9f 4f       	sbci	r25, 0xFF	; 255
 4e6:	08 95       	ret

000004e8 <__floatunsisf>:
 4e8:	e8 94       	clt
 4ea:	09 c0       	rjmp	.+18     	; 0x4fe <__floatsisf+0x12>

000004ec <__floatsisf>:
 4ec:	97 fb       	bst	r25, 7
 4ee:	3e f4       	brtc	.+14     	; 0x4fe <__floatsisf+0x12>
 4f0:	90 95       	com	r25
 4f2:	80 95       	com	r24
 4f4:	70 95       	com	r23
 4f6:	61 95       	neg	r22
 4f8:	7f 4f       	sbci	r23, 0xFF	; 255
 4fa:	8f 4f       	sbci	r24, 0xFF	; 255
 4fc:	9f 4f       	sbci	r25, 0xFF	; 255
 4fe:	99 23       	and	r25, r25
 500:	a9 f0       	breq	.+42     	; 0x52c <__floatsisf+0x40>
 502:	f9 2f       	mov	r31, r25
 504:	96 e9       	ldi	r25, 0x96	; 150
 506:	bb 27       	eor	r27, r27
 508:	93 95       	inc	r25
 50a:	f6 95       	lsr	r31
 50c:	87 95       	ror	r24
 50e:	77 95       	ror	r23
 510:	67 95       	ror	r22
 512:	b7 95       	ror	r27
 514:	f1 11       	cpse	r31, r1
 516:	f8 cf       	rjmp	.-16     	; 0x508 <__floatsisf+0x1c>
 518:	fa f4       	brpl	.+62     	; 0x558 <__floatsisf+0x6c>
 51a:	bb 0f       	add	r27, r27
 51c:	11 f4       	brne	.+4      	; 0x522 <__floatsisf+0x36>
 51e:	60 ff       	sbrs	r22, 0
 520:	1b c0       	rjmp	.+54     	; 0x558 <__floatsisf+0x6c>
 522:	6f 5f       	subi	r22, 0xFF	; 255
 524:	7f 4f       	sbci	r23, 0xFF	; 255
 526:	8f 4f       	sbci	r24, 0xFF	; 255
 528:	9f 4f       	sbci	r25, 0xFF	; 255
 52a:	16 c0       	rjmp	.+44     	; 0x558 <__floatsisf+0x6c>
 52c:	88 23       	and	r24, r24
 52e:	11 f0       	breq	.+4      	; 0x534 <__floatsisf+0x48>
 530:	96 e9       	ldi	r25, 0x96	; 150
 532:	11 c0       	rjmp	.+34     	; 0x556 <__floatsisf+0x6a>
 534:	77 23       	and	r23, r23
 536:	21 f0       	breq	.+8      	; 0x540 <__floatsisf+0x54>
 538:	9e e8       	ldi	r25, 0x8E	; 142
 53a:	87 2f       	mov	r24, r23
 53c:	76 2f       	mov	r23, r22
 53e:	05 c0       	rjmp	.+10     	; 0x54a <__floatsisf+0x5e>
 540:	66 23       	and	r22, r22
 542:	71 f0       	breq	.+28     	; 0x560 <__floatsisf+0x74>
 544:	96 e8       	ldi	r25, 0x86	; 134
 546:	86 2f       	mov	r24, r22
 548:	70 e0       	ldi	r23, 0x00	; 0
 54a:	60 e0       	ldi	r22, 0x00	; 0
 54c:	2a f0       	brmi	.+10     	; 0x558 <__floatsisf+0x6c>
 54e:	9a 95       	dec	r25
 550:	66 0f       	add	r22, r22
 552:	77 1f       	adc	r23, r23
 554:	88 1f       	adc	r24, r24
 556:	da f7       	brpl	.-10     	; 0x54e <__floatsisf+0x62>
 558:	88 0f       	add	r24, r24
 55a:	96 95       	lsr	r25
 55c:	87 95       	ror	r24
 55e:	97 f9       	bld	r25, 7
 560:	08 95       	ret

00000562 <__fp_inf>:
 562:	97 f9       	bld	r25, 7
 564:	9f 67       	ori	r25, 0x7F	; 127
 566:	80 e8       	ldi	r24, 0x80	; 128
 568:	70 e0       	ldi	r23, 0x00	; 0
 56a:	60 e0       	ldi	r22, 0x00	; 0
 56c:	08 95       	ret

0000056e <__fp_nan>:
 56e:	9f ef       	ldi	r25, 0xFF	; 255
 570:	80 ec       	ldi	r24, 0xC0	; 192
 572:	08 95       	ret

00000574 <__fp_pscA>:
 574:	00 24       	eor	r0, r0
 576:	0a 94       	dec	r0
 578:	16 16       	cp	r1, r22
 57a:	17 06       	cpc	r1, r23
 57c:	18 06       	cpc	r1, r24
 57e:	09 06       	cpc	r0, r25
 580:	08 95       	ret

00000582 <__fp_pscB>:
 582:	00 24       	eor	r0, r0
 584:	0a 94       	dec	r0
 586:	12 16       	cp	r1, r18
 588:	13 06       	cpc	r1, r19
 58a:	14 06       	cpc	r1, r20
 58c:	05 06       	cpc	r0, r21
 58e:	08 95       	ret

00000590 <__fp_round>:
 590:	09 2e       	mov	r0, r25
 592:	03 94       	inc	r0
 594:	00 0c       	add	r0, r0
 596:	11 f4       	brne	.+4      	; 0x59c <__fp_round+0xc>
 598:	88 23       	and	r24, r24
 59a:	52 f0       	brmi	.+20     	; 0x5b0 <__fp_round+0x20>
 59c:	bb 0f       	add	r27, r27
 59e:	40 f4       	brcc	.+16     	; 0x5b0 <__fp_round+0x20>
 5a0:	bf 2b       	or	r27, r31
 5a2:	11 f4       	brne	.+4      	; 0x5a8 <__fp_round+0x18>
 5a4:	60 ff       	sbrs	r22, 0
 5a6:	04 c0       	rjmp	.+8      	; 0x5b0 <__fp_round+0x20>
 5a8:	6f 5f       	subi	r22, 0xFF	; 255
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8f 4f       	sbci	r24, 0xFF	; 255
 5ae:	9f 4f       	sbci	r25, 0xFF	; 255
 5b0:	08 95       	ret

000005b2 <__fp_split3>:
 5b2:	57 fd       	sbrc	r21, 7
 5b4:	90 58       	subi	r25, 0x80	; 128
 5b6:	44 0f       	add	r20, r20
 5b8:	55 1f       	adc	r21, r21
 5ba:	59 f0       	breq	.+22     	; 0x5d2 <__fp_splitA+0x10>
 5bc:	5f 3f       	cpi	r21, 0xFF	; 255
 5be:	71 f0       	breq	.+28     	; 0x5dc <__fp_splitA+0x1a>
 5c0:	47 95       	ror	r20

000005c2 <__fp_splitA>:
 5c2:	88 0f       	add	r24, r24
 5c4:	97 fb       	bst	r25, 7
 5c6:	99 1f       	adc	r25, r25
 5c8:	61 f0       	breq	.+24     	; 0x5e2 <__fp_splitA+0x20>
 5ca:	9f 3f       	cpi	r25, 0xFF	; 255
 5cc:	79 f0       	breq	.+30     	; 0x5ec <__fp_splitA+0x2a>
 5ce:	87 95       	ror	r24
 5d0:	08 95       	ret
 5d2:	12 16       	cp	r1, r18
 5d4:	13 06       	cpc	r1, r19
 5d6:	14 06       	cpc	r1, r20
 5d8:	55 1f       	adc	r21, r21
 5da:	f2 cf       	rjmp	.-28     	; 0x5c0 <__fp_split3+0xe>
 5dc:	46 95       	lsr	r20
 5de:	f1 df       	rcall	.-30     	; 0x5c2 <__fp_splitA>
 5e0:	08 c0       	rjmp	.+16     	; 0x5f2 <__fp_splitA+0x30>
 5e2:	16 16       	cp	r1, r22
 5e4:	17 06       	cpc	r1, r23
 5e6:	18 06       	cpc	r1, r24
 5e8:	99 1f       	adc	r25, r25
 5ea:	f1 cf       	rjmp	.-30     	; 0x5ce <__fp_splitA+0xc>
 5ec:	86 95       	lsr	r24
 5ee:	71 05       	cpc	r23, r1
 5f0:	61 05       	cpc	r22, r1
 5f2:	08 94       	sec
 5f4:	08 95       	ret

000005f6 <__fp_zero>:
 5f6:	e8 94       	clt

000005f8 <__fp_szero>:
 5f8:	bb 27       	eor	r27, r27
 5fa:	66 27       	eor	r22, r22
 5fc:	77 27       	eor	r23, r23
 5fe:	cb 01       	movw	r24, r22
 600:	97 f9       	bld	r25, 7
 602:	08 95       	ret

00000604 <__mulsf3>:
 604:	0e 94 15 03 	call	0x62a	; 0x62a <__mulsf3x>
 608:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_round>
 60c:	0e 94 ba 02 	call	0x574	; 0x574 <__fp_pscA>
 610:	38 f0       	brcs	.+14     	; 0x620 <__mulsf3+0x1c>
 612:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_pscB>
 616:	20 f0       	brcs	.+8      	; 0x620 <__mulsf3+0x1c>
 618:	95 23       	and	r25, r21
 61a:	11 f0       	breq	.+4      	; 0x620 <__mulsf3+0x1c>
 61c:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 620:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>
 624:	11 24       	eor	r1, r1
 626:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>

0000062a <__mulsf3x>:
 62a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_split3>
 62e:	70 f3       	brcs	.-36     	; 0x60c <__mulsf3+0x8>

00000630 <__mulsf3_pse>:
 630:	95 9f       	mul	r25, r21
 632:	c1 f3       	breq	.-16     	; 0x624 <__mulsf3+0x20>
 634:	95 0f       	add	r25, r21
 636:	50 e0       	ldi	r21, 0x00	; 0
 638:	55 1f       	adc	r21, r21
 63a:	62 9f       	mul	r22, r18
 63c:	f0 01       	movw	r30, r0
 63e:	72 9f       	mul	r23, r18
 640:	bb 27       	eor	r27, r27
 642:	f0 0d       	add	r31, r0
 644:	b1 1d       	adc	r27, r1
 646:	63 9f       	mul	r22, r19
 648:	aa 27       	eor	r26, r26
 64a:	f0 0d       	add	r31, r0
 64c:	b1 1d       	adc	r27, r1
 64e:	aa 1f       	adc	r26, r26
 650:	64 9f       	mul	r22, r20
 652:	66 27       	eor	r22, r22
 654:	b0 0d       	add	r27, r0
 656:	a1 1d       	adc	r26, r1
 658:	66 1f       	adc	r22, r22
 65a:	82 9f       	mul	r24, r18
 65c:	22 27       	eor	r18, r18
 65e:	b0 0d       	add	r27, r0
 660:	a1 1d       	adc	r26, r1
 662:	62 1f       	adc	r22, r18
 664:	73 9f       	mul	r23, r19
 666:	b0 0d       	add	r27, r0
 668:	a1 1d       	adc	r26, r1
 66a:	62 1f       	adc	r22, r18
 66c:	83 9f       	mul	r24, r19
 66e:	a0 0d       	add	r26, r0
 670:	61 1d       	adc	r22, r1
 672:	22 1f       	adc	r18, r18
 674:	74 9f       	mul	r23, r20
 676:	33 27       	eor	r19, r19
 678:	a0 0d       	add	r26, r0
 67a:	61 1d       	adc	r22, r1
 67c:	23 1f       	adc	r18, r19
 67e:	84 9f       	mul	r24, r20
 680:	60 0d       	add	r22, r0
 682:	21 1d       	adc	r18, r1
 684:	82 2f       	mov	r24, r18
 686:	76 2f       	mov	r23, r22
 688:	6a 2f       	mov	r22, r26
 68a:	11 24       	eor	r1, r1
 68c:	9f 57       	subi	r25, 0x7F	; 127
 68e:	50 40       	sbci	r21, 0x00	; 0
 690:	9a f0       	brmi	.+38     	; 0x6b8 <__mulsf3_pse+0x88>
 692:	f1 f0       	breq	.+60     	; 0x6d0 <__mulsf3_pse+0xa0>
 694:	88 23       	and	r24, r24
 696:	4a f0       	brmi	.+18     	; 0x6aa <__mulsf3_pse+0x7a>
 698:	ee 0f       	add	r30, r30
 69a:	ff 1f       	adc	r31, r31
 69c:	bb 1f       	adc	r27, r27
 69e:	66 1f       	adc	r22, r22
 6a0:	77 1f       	adc	r23, r23
 6a2:	88 1f       	adc	r24, r24
 6a4:	91 50       	subi	r25, 0x01	; 1
 6a6:	50 40       	sbci	r21, 0x00	; 0
 6a8:	a9 f7       	brne	.-22     	; 0x694 <__mulsf3_pse+0x64>
 6aa:	9e 3f       	cpi	r25, 0xFE	; 254
 6ac:	51 05       	cpc	r21, r1
 6ae:	80 f0       	brcs	.+32     	; 0x6d0 <__mulsf3_pse+0xa0>
 6b0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 6b4:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 6b8:	5f 3f       	cpi	r21, 0xFF	; 255
 6ba:	e4 f3       	brlt	.-8      	; 0x6b4 <__mulsf3_pse+0x84>
 6bc:	98 3e       	cpi	r25, 0xE8	; 232
 6be:	d4 f3       	brlt	.-12     	; 0x6b4 <__mulsf3_pse+0x84>
 6c0:	86 95       	lsr	r24
 6c2:	77 95       	ror	r23
 6c4:	67 95       	ror	r22
 6c6:	b7 95       	ror	r27
 6c8:	f7 95       	ror	r31
 6ca:	e7 95       	ror	r30
 6cc:	9f 5f       	subi	r25, 0xFF	; 255
 6ce:	c1 f7       	brne	.-16     	; 0x6c0 <__mulsf3_pse+0x90>
 6d0:	fe 2b       	or	r31, r30
 6d2:	88 0f       	add	r24, r24
 6d4:	91 1d       	adc	r25, r1
 6d6:	96 95       	lsr	r25
 6d8:	87 95       	ror	r24
 6da:	97 f9       	bld	r25, 7
 6dc:	08 95       	ret

000006de <pow>:
 6de:	fa 01       	movw	r30, r20
 6e0:	ee 0f       	add	r30, r30
 6e2:	ff 1f       	adc	r31, r31
 6e4:	30 96       	adiw	r30, 0x00	; 0
 6e6:	21 05       	cpc	r18, r1
 6e8:	31 05       	cpc	r19, r1
 6ea:	a1 f1       	breq	.+104    	; 0x754 <pow+0x76>
 6ec:	61 15       	cp	r22, r1
 6ee:	71 05       	cpc	r23, r1
 6f0:	61 f4       	brne	.+24     	; 0x70a <pow+0x2c>
 6f2:	80 38       	cpi	r24, 0x80	; 128
 6f4:	bf e3       	ldi	r27, 0x3F	; 63
 6f6:	9b 07       	cpc	r25, r27
 6f8:	49 f1       	breq	.+82     	; 0x74c <pow+0x6e>
 6fa:	68 94       	set
 6fc:	90 38       	cpi	r25, 0x80	; 128
 6fe:	81 05       	cpc	r24, r1
 700:	61 f0       	breq	.+24     	; 0x71a <pow+0x3c>
 702:	80 38       	cpi	r24, 0x80	; 128
 704:	bf ef       	ldi	r27, 0xFF	; 255
 706:	9b 07       	cpc	r25, r27
 708:	41 f0       	breq	.+16     	; 0x71a <pow+0x3c>
 70a:	99 23       	and	r25, r25
 70c:	4a f5       	brpl	.+82     	; 0x760 <pow+0x82>
 70e:	ff 3f       	cpi	r31, 0xFF	; 255
 710:	e1 05       	cpc	r30, r1
 712:	31 05       	cpc	r19, r1
 714:	21 05       	cpc	r18, r1
 716:	19 f1       	breq	.+70     	; 0x75e <pow+0x80>
 718:	e8 94       	clt
 71a:	08 94       	sec
 71c:	e7 95       	ror	r30
 71e:	d9 01       	movw	r26, r18
 720:	aa 23       	and	r26, r26
 722:	29 f4       	brne	.+10     	; 0x72e <pow+0x50>
 724:	ab 2f       	mov	r26, r27
 726:	be 2f       	mov	r27, r30
 728:	f8 5f       	subi	r31, 0xF8	; 248
 72a:	d0 f3       	brcs	.-12     	; 0x720 <pow+0x42>
 72c:	10 c0       	rjmp	.+32     	; 0x74e <pow+0x70>
 72e:	ff 5f       	subi	r31, 0xFF	; 255
 730:	70 f4       	brcc	.+28     	; 0x74e <pow+0x70>
 732:	a6 95       	lsr	r26
 734:	e0 f7       	brcc	.-8      	; 0x72e <pow+0x50>
 736:	f7 39       	cpi	r31, 0x97	; 151
 738:	50 f0       	brcs	.+20     	; 0x74e <pow+0x70>
 73a:	19 f0       	breq	.+6      	; 0x742 <pow+0x64>
 73c:	ff 3a       	cpi	r31, 0xAF	; 175
 73e:	38 f4       	brcc	.+14     	; 0x74e <pow+0x70>
 740:	9f 77       	andi	r25, 0x7F	; 127
 742:	9f 93       	push	r25
 744:	0d d0       	rcall	.+26     	; 0x760 <pow+0x82>
 746:	0f 90       	pop	r0
 748:	07 fc       	sbrc	r0, 7
 74a:	90 58       	subi	r25, 0x80	; 128
 74c:	08 95       	ret
 74e:	46 f0       	brts	.+16     	; 0x760 <pow+0x82>
 750:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>
 754:	60 e0       	ldi	r22, 0x00	; 0
 756:	70 e0       	ldi	r23, 0x00	; 0
 758:	80 e8       	ldi	r24, 0x80	; 128
 75a:	9f e3       	ldi	r25, 0x3F	; 63
 75c:	08 95       	ret
 75e:	4f e7       	ldi	r20, 0x7F	; 127
 760:	9f 77       	andi	r25, 0x7F	; 127
 762:	5f 93       	push	r21
 764:	4f 93       	push	r20
 766:	3f 93       	push	r19
 768:	2f 93       	push	r18
 76a:	0e 94 6a 04 	call	0x8d4	; 0x8d4 <log>
 76e:	2f 91       	pop	r18
 770:	3f 91       	pop	r19
 772:	4f 91       	pop	r20
 774:	5f 91       	pop	r21
 776:	0e 94 02 03 	call	0x604	; 0x604 <__mulsf3>
 77a:	0c 94 c7 03 	jmp	0x78e	; 0x78e <exp>
 77e:	29 f4       	brne	.+10     	; 0x78a <pow+0xac>
 780:	16 f0       	brts	.+4      	; 0x786 <pow+0xa8>
 782:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 786:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_zero>
 78a:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>

0000078e <exp>:
 78e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_splitA>
 792:	a8 f3       	brcs	.-22     	; 0x77e <pow+0xa0>
 794:	96 38       	cpi	r25, 0x86	; 134
 796:	a0 f7       	brcc	.-24     	; 0x780 <pow+0xa2>
 798:	07 f8       	bld	r0, 7
 79a:	0f 92       	push	r0
 79c:	e8 94       	clt
 79e:	2b e3       	ldi	r18, 0x3B	; 59
 7a0:	3a ea       	ldi	r19, 0xAA	; 170
 7a2:	48 eb       	ldi	r20, 0xB8	; 184
 7a4:	5f e7       	ldi	r21, 0x7F	; 127
 7a6:	0e 94 18 03 	call	0x630	; 0x630 <__mulsf3_pse>
 7aa:	0f 92       	push	r0
 7ac:	0f 92       	push	r0
 7ae:	0f 92       	push	r0
 7b0:	4d b7       	in	r20, 0x3d	; 61
 7b2:	5e b7       	in	r21, 0x3e	; 62
 7b4:	0f 92       	push	r0
 7b6:	0e 94 b2 04 	call	0x964	; 0x964 <modf>
 7ba:	e4 e5       	ldi	r30, 0x54	; 84
 7bc:	f0 e0       	ldi	r31, 0x00	; 0
 7be:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_powser>
 7c2:	4f 91       	pop	r20
 7c4:	5f 91       	pop	r21
 7c6:	ef 91       	pop	r30
 7c8:	ff 91       	pop	r31
 7ca:	e5 95       	asr	r30
 7cc:	ee 1f       	adc	r30, r30
 7ce:	ff 1f       	adc	r31, r31
 7d0:	49 f0       	breq	.+18     	; 0x7e4 <exp+0x56>
 7d2:	fe 57       	subi	r31, 0x7E	; 126
 7d4:	e0 68       	ori	r30, 0x80	; 128
 7d6:	44 27       	eor	r20, r20
 7d8:	ee 0f       	add	r30, r30
 7da:	44 1f       	adc	r20, r20
 7dc:	fa 95       	dec	r31
 7de:	e1 f7       	brne	.-8      	; 0x7d8 <exp+0x4a>
 7e0:	41 95       	neg	r20
 7e2:	55 0b       	sbc	r21, r21
 7e4:	0e 94 2c 04 	call	0x858	; 0x858 <ldexp>
 7e8:	0f 90       	pop	r0
 7ea:	07 fe       	sbrs	r0, 7
 7ec:	0c 94 20 04 	jmp	0x840	; 0x840 <inverse>
 7f0:	08 95       	ret

000007f2 <__fp_powser>:
 7f2:	df 93       	push	r29
 7f4:	cf 93       	push	r28
 7f6:	1f 93       	push	r17
 7f8:	0f 93       	push	r16
 7fa:	ff 92       	push	r15
 7fc:	ef 92       	push	r14
 7fe:	df 92       	push	r13
 800:	7b 01       	movw	r14, r22
 802:	8c 01       	movw	r16, r24
 804:	68 94       	set
 806:	06 c0       	rjmp	.+12     	; 0x814 <__fp_powser+0x22>
 808:	da 2e       	mov	r13, r26
 80a:	ef 01       	movw	r28, r30
 80c:	0e 94 15 03 	call	0x62a	; 0x62a <__mulsf3x>
 810:	fe 01       	movw	r30, r28
 812:	e8 94       	clt
 814:	a5 91       	lpm	r26, Z+
 816:	25 91       	lpm	r18, Z+
 818:	35 91       	lpm	r19, Z+
 81a:	45 91       	lpm	r20, Z+
 81c:	55 91       	lpm	r21, Z+
 81e:	a6 f3       	brts	.-24     	; 0x808 <__fp_powser+0x16>
 820:	ef 01       	movw	r28, r30
 822:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__addsf3x>
 826:	fe 01       	movw	r30, r28
 828:	97 01       	movw	r18, r14
 82a:	a8 01       	movw	r20, r16
 82c:	da 94       	dec	r13
 82e:	69 f7       	brne	.-38     	; 0x80a <__fp_powser+0x18>
 830:	df 90       	pop	r13
 832:	ef 90       	pop	r14
 834:	ff 90       	pop	r15
 836:	0f 91       	pop	r16
 838:	1f 91       	pop	r17
 83a:	cf 91       	pop	r28
 83c:	df 91       	pop	r29
 83e:	08 95       	ret

00000840 <inverse>:
 840:	9b 01       	movw	r18, r22
 842:	ac 01       	movw	r20, r24
 844:	60 e0       	ldi	r22, 0x00	; 0
 846:	70 e0       	ldi	r23, 0x00	; 0
 848:	80 e8       	ldi	r24, 0x80	; 128
 84a:	9f e3       	ldi	r25, 0x3F	; 63
 84c:	0c 94 cc 01 	jmp	0x398	; 0x398 <__divsf3>
 850:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>
 854:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <__fp_mpack>

00000858 <ldexp>:
 858:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_splitA>
 85c:	d8 f3       	brcs	.-10     	; 0x854 <inverse+0x14>
 85e:	99 23       	and	r25, r25
 860:	c9 f3       	breq	.-14     	; 0x854 <inverse+0x14>
 862:	94 0f       	add	r25, r20
 864:	51 1d       	adc	r21, r1
 866:	a3 f3       	brvs	.-24     	; 0x850 <inverse+0x10>
 868:	91 50       	subi	r25, 0x01	; 1
 86a:	50 40       	sbci	r21, 0x00	; 0
 86c:	94 f0       	brlt	.+36     	; 0x892 <__stack+0x33>
 86e:	59 f0       	breq	.+22     	; 0x886 <__stack+0x27>
 870:	88 23       	and	r24, r24
 872:	32 f0       	brmi	.+12     	; 0x880 <__stack+0x21>
 874:	66 0f       	add	r22, r22
 876:	77 1f       	adc	r23, r23
 878:	88 1f       	adc	r24, r24
 87a:	91 50       	subi	r25, 0x01	; 1
 87c:	50 40       	sbci	r21, 0x00	; 0
 87e:	c1 f7       	brne	.-16     	; 0x870 <__stack+0x11>
 880:	9e 3f       	cpi	r25, 0xFE	; 254
 882:	51 05       	cpc	r21, r1
 884:	2c f7       	brge	.-54     	; 0x850 <inverse+0x10>
 886:	88 0f       	add	r24, r24
 888:	91 1d       	adc	r25, r1
 88a:	96 95       	lsr	r25
 88c:	87 95       	ror	r24
 88e:	97 f9       	bld	r25, 7
 890:	08 95       	ret
 892:	5f 3f       	cpi	r21, 0xFF	; 255
 894:	ac f0       	brlt	.+42     	; 0x8c0 <__stack+0x61>
 896:	98 3e       	cpi	r25, 0xE8	; 232
 898:	9c f0       	brlt	.+38     	; 0x8c0 <__stack+0x61>
 89a:	bb 27       	eor	r27, r27
 89c:	86 95       	lsr	r24
 89e:	77 95       	ror	r23
 8a0:	67 95       	ror	r22
 8a2:	b7 95       	ror	r27
 8a4:	08 f4       	brcc	.+2      	; 0x8a8 <__stack+0x49>
 8a6:	b1 60       	ori	r27, 0x01	; 1
 8a8:	93 95       	inc	r25
 8aa:	c1 f7       	brne	.-16     	; 0x89c <__stack+0x3d>
 8ac:	bb 0f       	add	r27, r27
 8ae:	58 f7       	brcc	.-42     	; 0x886 <__stack+0x27>
 8b0:	11 f4       	brne	.+4      	; 0x8b6 <__stack+0x57>
 8b2:	60 ff       	sbrs	r22, 0
 8b4:	e8 cf       	rjmp	.-48     	; 0x886 <__stack+0x27>
 8b6:	6f 5f       	subi	r22, 0xFF	; 255
 8b8:	7f 4f       	sbci	r23, 0xFF	; 255
 8ba:	8f 4f       	sbci	r24, 0xFF	; 255
 8bc:	9f 4f       	sbci	r25, 0xFF	; 255
 8be:	e3 cf       	rjmp	.-58     	; 0x886 <__stack+0x27>
 8c0:	0c 94 fc 02 	jmp	0x5f8	; 0x5f8 <__fp_szero>
 8c4:	16 f0       	brts	.+4      	; 0x8ca <__stack+0x6b>
 8c6:	0c 94 53 05 	jmp	0xaa6	; 0xaa6 <__fp_mpack>
 8ca:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>
 8ce:	68 94       	set
 8d0:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>

000008d4 <log>:
 8d4:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <__fp_splitA>
 8d8:	a8 f3       	brcs	.-22     	; 0x8c4 <__stack+0x65>
 8da:	99 23       	and	r25, r25
 8dc:	c1 f3       	breq	.-16     	; 0x8ce <__stack+0x6f>
 8de:	ae f3       	brts	.-22     	; 0x8ca <__stack+0x6b>
 8e0:	df 93       	push	r29
 8e2:	cf 93       	push	r28
 8e4:	1f 93       	push	r17
 8e6:	0f 93       	push	r16
 8e8:	ff 92       	push	r15
 8ea:	c9 2f       	mov	r28, r25
 8ec:	dd 27       	eor	r29, r29
 8ee:	88 23       	and	r24, r24
 8f0:	2a f0       	brmi	.+10     	; 0x8fc <log+0x28>
 8f2:	21 97       	sbiw	r28, 0x01	; 1
 8f4:	66 0f       	add	r22, r22
 8f6:	77 1f       	adc	r23, r23
 8f8:	88 1f       	adc	r24, r24
 8fa:	da f7       	brpl	.-10     	; 0x8f2 <log+0x1e>
 8fc:	20 e0       	ldi	r18, 0x00	; 0
 8fe:	30 e0       	ldi	r19, 0x00	; 0
 900:	40 e8       	ldi	r20, 0x80	; 128
 902:	5f eb       	ldi	r21, 0xBF	; 191
 904:	9f e3       	ldi	r25, 0x3F	; 63
 906:	88 39       	cpi	r24, 0x98	; 152
 908:	20 f0       	brcs	.+8      	; 0x912 <log+0x3e>
 90a:	80 3e       	cpi	r24, 0xE0	; 224
 90c:	38 f0       	brcs	.+14     	; 0x91c <log+0x48>
 90e:	21 96       	adiw	r28, 0x01	; 1
 910:	8f 77       	andi	r24, 0x7F	; 127
 912:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__addsf3>
 916:	ec e7       	ldi	r30, 0x7C	; 124
 918:	f0 e0       	ldi	r31, 0x00	; 0
 91a:	04 c0       	rjmp	.+8      	; 0x924 <log+0x50>
 91c:	0e 94 e7 04 	call	0x9ce	; 0x9ce <__addsf3>
 920:	e9 ea       	ldi	r30, 0xA9	; 169
 922:	f0 e0       	ldi	r31, 0x00	; 0
 924:	0e 94 f9 03 	call	0x7f2	; 0x7f2 <__fp_powser>
 928:	8b 01       	movw	r16, r22
 92a:	be 01       	movw	r22, r28
 92c:	ec 01       	movw	r28, r24
 92e:	fb 2e       	mov	r15, r27
 930:	6f 57       	subi	r22, 0x7F	; 127
 932:	71 09       	sbc	r23, r1
 934:	75 95       	asr	r23
 936:	77 1f       	adc	r23, r23
 938:	88 0b       	sbc	r24, r24
 93a:	99 0b       	sbc	r25, r25
 93c:	0e 94 76 02 	call	0x4ec	; 0x4ec <__floatsisf>
 940:	28 e1       	ldi	r18, 0x18	; 24
 942:	32 e7       	ldi	r19, 0x72	; 114
 944:	41 e3       	ldi	r20, 0x31	; 49
 946:	5f e3       	ldi	r21, 0x3F	; 63
 948:	0e 94 15 03 	call	0x62a	; 0x62a <__mulsf3x>
 94c:	af 2d       	mov	r26, r15
 94e:	98 01       	movw	r18, r16
 950:	ae 01       	movw	r20, r28
 952:	ff 90       	pop	r15
 954:	0f 91       	pop	r16
 956:	1f 91       	pop	r17
 958:	cf 91       	pop	r28
 95a:	df 91       	pop	r29
 95c:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__addsf3x>
 960:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_round>

00000964 <modf>:
 964:	fa 01       	movw	r30, r20
 966:	dc 01       	movw	r26, r24
 968:	aa 0f       	add	r26, r26
 96a:	bb 1f       	adc	r27, r27
 96c:	9b 01       	movw	r18, r22
 96e:	ac 01       	movw	r20, r24
 970:	bf 57       	subi	r27, 0x7F	; 127
 972:	28 f4       	brcc	.+10     	; 0x97e <modf+0x1a>
 974:	22 27       	eor	r18, r18
 976:	33 27       	eor	r19, r19
 978:	44 27       	eor	r20, r20
 97a:	50 78       	andi	r21, 0x80	; 128
 97c:	20 c0       	rjmp	.+64     	; 0x9be <modf+0x5a>
 97e:	b7 51       	subi	r27, 0x17	; 23
 980:	90 f4       	brcc	.+36     	; 0x9a6 <modf+0x42>
 982:	ab 2f       	mov	r26, r27
 984:	00 24       	eor	r0, r0
 986:	46 95       	lsr	r20
 988:	37 95       	ror	r19
 98a:	27 95       	ror	r18
 98c:	01 1c       	adc	r0, r1
 98e:	a3 95       	inc	r26
 990:	d2 f3       	brmi	.-12     	; 0x986 <modf+0x22>
 992:	00 20       	and	r0, r0
 994:	71 f0       	breq	.+28     	; 0x9b2 <modf+0x4e>
 996:	22 0f       	add	r18, r18
 998:	33 1f       	adc	r19, r19
 99a:	44 1f       	adc	r20, r20
 99c:	b3 95       	inc	r27
 99e:	da f3       	brmi	.-10     	; 0x996 <modf+0x32>
 9a0:	0e d0       	rcall	.+28     	; 0x9be <modf+0x5a>
 9a2:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__subsf3>
 9a6:	61 30       	cpi	r22, 0x01	; 1
 9a8:	71 05       	cpc	r23, r1
 9aa:	a0 e8       	ldi	r26, 0x80	; 128
 9ac:	8a 07       	cpc	r24, r26
 9ae:	b9 46       	sbci	r27, 0x69	; 105
 9b0:	30 f4       	brcc	.+12     	; 0x9be <modf+0x5a>
 9b2:	9b 01       	movw	r18, r22
 9b4:	ac 01       	movw	r20, r24
 9b6:	66 27       	eor	r22, r22
 9b8:	77 27       	eor	r23, r23
 9ba:	88 27       	eor	r24, r24
 9bc:	90 78       	andi	r25, 0x80	; 128
 9be:	30 96       	adiw	r30, 0x00	; 0
 9c0:	21 f0       	breq	.+8      	; 0x9ca <modf+0x66>
 9c2:	20 83       	st	Z, r18
 9c4:	31 83       	std	Z+1, r19	; 0x01
 9c6:	42 83       	std	Z+2, r20	; 0x02
 9c8:	53 83       	std	Z+3, r21	; 0x03
 9ca:	08 95       	ret

000009cc <__subsf3>:
 9cc:	50 58       	subi	r21, 0x80	; 128

000009ce <__addsf3>:
 9ce:	bb 27       	eor	r27, r27
 9d0:	aa 27       	eor	r26, r26
 9d2:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__addsf3x>
 9d6:	0c 94 c8 02 	jmp	0x590	; 0x590 <__fp_round>
 9da:	0e 94 ba 02 	call	0x574	; 0x574 <__fp_pscA>
 9de:	38 f0       	brcs	.+14     	; 0x9ee <__addsf3+0x20>
 9e0:	0e 94 c1 02 	call	0x582	; 0x582 <__fp_pscB>
 9e4:	20 f0       	brcs	.+8      	; 0x9ee <__addsf3+0x20>
 9e6:	39 f4       	brne	.+14     	; 0x9f6 <__addsf3+0x28>
 9e8:	9f 3f       	cpi	r25, 0xFF	; 255
 9ea:	19 f4       	brne	.+6      	; 0x9f2 <__addsf3+0x24>
 9ec:	26 f4       	brtc	.+8      	; 0x9f6 <__addsf3+0x28>
 9ee:	0c 94 b7 02 	jmp	0x56e	; 0x56e <__fp_nan>
 9f2:	0e f4       	brtc	.+2      	; 0x9f6 <__addsf3+0x28>
 9f4:	e0 95       	com	r30
 9f6:	e7 fb       	bst	r30, 7
 9f8:	0c 94 b1 02 	jmp	0x562	; 0x562 <__fp_inf>

000009fc <__addsf3x>:
 9fc:	e9 2f       	mov	r30, r25
 9fe:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <__fp_split3>
 a02:	58 f3       	brcs	.-42     	; 0x9da <__addsf3+0xc>
 a04:	ba 17       	cp	r27, r26
 a06:	62 07       	cpc	r22, r18
 a08:	73 07       	cpc	r23, r19
 a0a:	84 07       	cpc	r24, r20
 a0c:	95 07       	cpc	r25, r21
 a0e:	20 f0       	brcs	.+8      	; 0xa18 <__addsf3x+0x1c>
 a10:	79 f4       	brne	.+30     	; 0xa30 <__addsf3x+0x34>
 a12:	a6 f5       	brtc	.+104    	; 0xa7c <__addsf3x+0x80>
 a14:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <__fp_zero>
 a18:	0e f4       	brtc	.+2      	; 0xa1c <__addsf3x+0x20>
 a1a:	e0 95       	com	r30
 a1c:	0b 2e       	mov	r0, r27
 a1e:	ba 2f       	mov	r27, r26
 a20:	a0 2d       	mov	r26, r0
 a22:	0b 01       	movw	r0, r22
 a24:	b9 01       	movw	r22, r18
 a26:	90 01       	movw	r18, r0
 a28:	0c 01       	movw	r0, r24
 a2a:	ca 01       	movw	r24, r20
 a2c:	a0 01       	movw	r20, r0
 a2e:	11 24       	eor	r1, r1
 a30:	ff 27       	eor	r31, r31
 a32:	59 1b       	sub	r21, r25
 a34:	99 f0       	breq	.+38     	; 0xa5c <__addsf3x+0x60>
 a36:	59 3f       	cpi	r21, 0xF9	; 249
 a38:	50 f4       	brcc	.+20     	; 0xa4e <__addsf3x+0x52>
 a3a:	50 3e       	cpi	r21, 0xE0	; 224
 a3c:	68 f1       	brcs	.+90     	; 0xa98 <__addsf3x+0x9c>
 a3e:	1a 16       	cp	r1, r26
 a40:	f0 40       	sbci	r31, 0x00	; 0
 a42:	a2 2f       	mov	r26, r18
 a44:	23 2f       	mov	r18, r19
 a46:	34 2f       	mov	r19, r20
 a48:	44 27       	eor	r20, r20
 a4a:	58 5f       	subi	r21, 0xF8	; 248
 a4c:	f3 cf       	rjmp	.-26     	; 0xa34 <__addsf3x+0x38>
 a4e:	46 95       	lsr	r20
 a50:	37 95       	ror	r19
 a52:	27 95       	ror	r18
 a54:	a7 95       	ror	r26
 a56:	f0 40       	sbci	r31, 0x00	; 0
 a58:	53 95       	inc	r21
 a5a:	c9 f7       	brne	.-14     	; 0xa4e <__addsf3x+0x52>
 a5c:	7e f4       	brtc	.+30     	; 0xa7c <__addsf3x+0x80>
 a5e:	1f 16       	cp	r1, r31
 a60:	ba 0b       	sbc	r27, r26
 a62:	62 0b       	sbc	r22, r18
 a64:	73 0b       	sbc	r23, r19
 a66:	84 0b       	sbc	r24, r20
 a68:	ba f0       	brmi	.+46     	; 0xa98 <__addsf3x+0x9c>
 a6a:	91 50       	subi	r25, 0x01	; 1
 a6c:	a1 f0       	breq	.+40     	; 0xa96 <__addsf3x+0x9a>
 a6e:	ff 0f       	add	r31, r31
 a70:	bb 1f       	adc	r27, r27
 a72:	66 1f       	adc	r22, r22
 a74:	77 1f       	adc	r23, r23
 a76:	88 1f       	adc	r24, r24
 a78:	c2 f7       	brpl	.-16     	; 0xa6a <__addsf3x+0x6e>
 a7a:	0e c0       	rjmp	.+28     	; 0xa98 <__addsf3x+0x9c>
 a7c:	ba 0f       	add	r27, r26
 a7e:	62 1f       	adc	r22, r18
 a80:	73 1f       	adc	r23, r19
 a82:	84 1f       	adc	r24, r20
 a84:	48 f4       	brcc	.+18     	; 0xa98 <__addsf3x+0x9c>
 a86:	87 95       	ror	r24
 a88:	77 95       	ror	r23
 a8a:	67 95       	ror	r22
 a8c:	b7 95       	ror	r27
 a8e:	f7 95       	ror	r31
 a90:	9e 3f       	cpi	r25, 0xFE	; 254
 a92:	08 f0       	brcs	.+2      	; 0xa96 <__addsf3x+0x9a>
 a94:	b0 cf       	rjmp	.-160    	; 0x9f6 <__addsf3+0x28>
 a96:	93 95       	inc	r25
 a98:	88 0f       	add	r24, r24
 a9a:	08 f0       	brcs	.+2      	; 0xa9e <__addsf3x+0xa2>
 a9c:	99 27       	eor	r25, r25
 a9e:	ee 0f       	add	r30, r30
 aa0:	97 95       	ror	r25
 aa2:	87 95       	ror	r24
 aa4:	08 95       	ret

00000aa6 <__fp_mpack>:
 aa6:	9f 3f       	cpi	r25, 0xFF	; 255
 aa8:	31 f0       	breq	.+12     	; 0xab6 <__fp_mpack_finite+0xc>

00000aaa <__fp_mpack_finite>:
 aaa:	91 50       	subi	r25, 0x01	; 1
 aac:	20 f4       	brcc	.+8      	; 0xab6 <__fp_mpack_finite+0xc>
 aae:	87 95       	ror	r24
 ab0:	77 95       	ror	r23
 ab2:	67 95       	ror	r22
 ab4:	b7 95       	ror	r27
 ab6:	88 0f       	add	r24, r24
 ab8:	91 1d       	adc	r25, r1
 aba:	96 95       	lsr	r25
 abc:	87 95       	ror	r24
 abe:	97 f9       	bld	r25, 7
 ac0:	08 95       	ret

00000ac2 <_exit>:
 ac2:	f8 94       	cli

00000ac4 <__stop_program>:
 ac4:	ff cf       	rjmp	.-2      	; 0xac4 <__stop_program>
