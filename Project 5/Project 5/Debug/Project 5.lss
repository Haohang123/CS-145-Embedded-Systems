
Project 5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000de6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000064  00800060  00000de6  00000e7a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000001a  008000c4  008000c4  00000ede  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ede  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000f3c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00000f78  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f99  00000000  00000000  00001060  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000905  00000000  00000000  00001ff9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000944  00000000  00000000  000028fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  00003244  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004cf  00000000  00000000  00003444  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000830  00000000  00000000  00003913  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e8  00000000  00000000  00004143  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ee       	ldi	r30, 0xE6	; 230
  68:	fd e0       	ldi	r31, 0x0D	; 13
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 3c       	cpi	r26, 0xC4	; 196
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 ec       	ldi	r26, 0xC4	; 196
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ae 3d       	cpi	r26, 0xDE	; 222
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 24 03 	call	0x648	; 0x648 <main>
  8a:	0c 94 f1 06 	jmp	0xde2	; 0xde2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <avr_init>:
#include "avr.h"

void
avr_init(void)
{
	WDTCR = 15;
  92:	8f e0       	ldi	r24, 0x0F	; 15
  94:	81 bd       	out	0x21, r24	; 33
  96:	08 95       	ret

00000098 <avr_wait>:
}

void
avr_wait(unsigned short msec)
{
  98:	9c 01       	movw	r18, r24
	TCCR0 = 3;
  9a:	83 e0       	ldi	r24, 0x03	; 3
  9c:	83 bf       	out	0x33, r24	; 51
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  9e:	83 e8       	ldi	r24, 0x83	; 131

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  a0:	08 c0       	rjmp	.+16     	; 0xb2 <avr_wait+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
  a2:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
  a4:	98 b7       	in	r25, 0x38	; 56
  a6:	91 60       	ori	r25, 0x01	; 1
  a8:	98 bf       	out	0x38, r25	; 56
		WDR();
  aa:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
  ac:	08 b6       	in	r0, 0x38	; 56
  ae:	00 fe       	sbrs	r0, 0
  b0:	fd cf       	rjmp	.-6      	; 0xac <avr_wait+0x14>

void
avr_wait(unsigned short msec)
{
	TCCR0 = 3;
	while (msec--) {
  b2:	21 50       	subi	r18, 0x01	; 1
  b4:	31 09       	sbc	r19, r1
  b6:	a8 f7       	brcc	.-22     	; 0xa2 <avr_wait+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
  b8:	13 be       	out	0x33, r1	; 51
  ba:	08 95       	ret

000000bc <output>:
{
	char c;
	while ((c = pgm_read_byte(s++)) != 0) {
		write(c, 1);
	}
}
  bc:	66 23       	and	r22, r22
  be:	11 f0       	breq	.+4      	; 0xc4 <output+0x8>
  c0:	c0 9a       	sbi	0x18, 0	; 24
  c2:	01 c0       	rjmp	.+2      	; 0xc6 <output+0xa>
  c4:	c0 98       	cbi	0x18, 0	; 24
  c6:	c1 98       	cbi	0x18, 1	; 24
  c8:	82 bb       	out	0x12, r24	; 18
  ca:	8f ef       	ldi	r24, 0xFF	; 255
  cc:	81 bb       	out	0x11, r24	; 17
  ce:	c2 9a       	sbi	0x18, 2	; 24
  d0:	00 00       	nop
  d2:	00 00       	nop
  d4:	00 00       	nop
  d6:	c2 98       	cbi	0x18, 2	; 24
  d8:	08 95       	ret

000000da <write>:
  da:	c0 98       	cbi	0x18, 0	; 24
  dc:	c1 9a       	sbi	0x18, 1	; 24
  de:	11 ba       	out	0x11, r1	; 17
  e0:	90 b3       	in	r25, 0x10	; 16
  e2:	c2 9a       	sbi	0x18, 2	; 24
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	00 00       	nop
  ea:	11 ba       	out	0x11, r1	; 17
  ec:	90 b3       	in	r25, 0x10	; 16
  ee:	c2 98       	cbi	0x18, 2	; 24
  f0:	99 23       	and	r25, r25
  f2:	9c f3       	brlt	.-26     	; 0xda <write>
  f4:	0e 94 5e 00 	call	0xbc	; 0xbc <output>
  f8:	08 95       	ret

000000fa <lcd_init>:
  fa:	b8 9a       	sbi	0x17, 0	; 23
  fc:	b9 9a       	sbi	0x17, 1	; 23
  fe:	ba 9a       	sbi	0x17, 2	; 23
 100:	80 e1       	ldi	r24, 0x10	; 16
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
 108:	60 e0       	ldi	r22, 0x00	; 0
 10a:	80 e3       	ldi	r24, 0x30	; 48
 10c:	0e 94 5e 00 	call	0xbc	; 0xbc <output>
 110:	85 e0       	ldi	r24, 0x05	; 5
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
 118:	60 e0       	ldi	r22, 0x00	; 0
 11a:	80 e3       	ldi	r24, 0x30	; 48
 11c:	0e 94 5e 00 	call	0xbc	; 0xbc <output>
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	90 e0       	ldi	r25, 0x00	; 0
 124:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
 128:	60 e0       	ldi	r22, 0x00	; 0
 12a:	8c e3       	ldi	r24, 0x3C	; 60
 12c:	0e 94 6d 00 	call	0xda	; 0xda <write>
 130:	60 e0       	ldi	r22, 0x00	; 0
 132:	8c e0       	ldi	r24, 0x0C	; 12
 134:	0e 94 6d 00 	call	0xda	; 0xda <write>
 138:	60 e0       	ldi	r22, 0x00	; 0
 13a:	86 e0       	ldi	r24, 0x06	; 6
 13c:	0e 94 6d 00 	call	0xda	; 0xda <write>
 140:	60 e0       	ldi	r22, 0x00	; 0
 142:	81 e0       	ldi	r24, 0x01	; 1
 144:	0e 94 6d 00 	call	0xda	; 0xda <write>
 148:	08 95       	ret

0000014a <lcd_clr>:
 14a:	60 e0       	ldi	r22, 0x00	; 0
 14c:	81 e0       	ldi	r24, 0x01	; 1
 14e:	0e 94 6d 00 	call	0xda	; 0xda <write>
 152:	08 95       	ret

00000154 <lcd_pos>:
 154:	cf 93       	push	r28
 156:	c6 2f       	mov	r28, r22
 158:	98 e2       	ldi	r25, 0x28	; 40
 15a:	89 9f       	mul	r24, r25
 15c:	c0 0d       	add	r28, r0
 15e:	11 24       	eor	r1, r1
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	0e 94 6d 00 	call	0xda	; 0xda <write>
 168:	cc 23       	and	r28, r28
 16a:	31 f0       	breq	.+12     	; 0x178 <lcd_pos+0x24>
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	84 e1       	ldi	r24, 0x14	; 20
 170:	0e 94 6d 00 	call	0xda	; 0xda <write>
 174:	c1 50       	subi	r28, 0x01	; 1
 176:	d1 f7       	brne	.-12     	; 0x16c <lcd_pos+0x18>
 178:	cf 91       	pop	r28
 17a:	08 95       	ret

0000017c <lcd_puts2>:

void
lcd_puts2(const char *s)
{
 17c:	cf 93       	push	r28
 17e:	df 93       	push	r29
	char c;
	while ((c = *(s++)) != 0) {
 180:	ec 01       	movw	r28, r24
 182:	21 96       	adiw	r28, 0x01	; 1
 184:	fc 01       	movw	r30, r24
 186:	80 81       	ld	r24, Z
 188:	88 23       	and	r24, r24
 18a:	31 f0       	breq	.+12     	; 0x198 <lcd_puts2+0x1c>
		write(c, 1);
 18c:	61 e0       	ldi	r22, 0x01	; 1
 18e:	0e 94 6d 00 	call	0xda	; 0xda <write>

void
lcd_puts2(const char *s)
{
	char c;
	while ((c = *(s++)) != 0) {
 192:	89 91       	ld	r24, Y+
 194:	81 11       	cpse	r24, r1
 196:	fa cf       	rjmp	.-12     	; 0x18c <lcd_puts2+0x10>
		write(c, 1);
	}
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	08 95       	ret

0000019e <increment_time>:

void blinkNtimes(int times) {
	for(int i = 0; i < times; ++i) {
		blink();
	}
}
 19e:	cf 93       	push	r28
 1a0:	df 93       	push	r29
 1a2:	80 91 dc 00 	lds	r24, 0x00DC	; 0x8000dc <time+0xc>
 1a6:	90 91 dd 00 	lds	r25, 0x00DD	; 0x8000dd <time+0xd>
 1aa:	01 96       	adiw	r24, 0x01	; 1
 1ac:	8a 30       	cpi	r24, 0x0A	; 10
 1ae:	91 05       	cpc	r25, r1
 1b0:	2c f4       	brge	.+10     	; 0x1bc <increment_time+0x1e>
 1b2:	90 93 dd 00 	sts	0x00DD, r25	; 0x8000dd <time+0xd>
 1b6:	80 93 dc 00 	sts	0x00DC, r24	; 0x8000dc <time+0xc>
 1ba:	09 c0       	rjmp	.+18     	; 0x1ce <increment_time+0x30>
 1bc:	e0 ed       	ldi	r30, 0xD0	; 208
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	15 86       	std	Z+13, r1	; 0x0d
 1c2:	14 86       	std	Z+12, r1	; 0x0c
 1c4:	82 85       	ldd	r24, Z+10	; 0x0a
 1c6:	93 85       	ldd	r25, Z+11	; 0x0b
 1c8:	01 96       	adiw	r24, 0x01	; 1
 1ca:	93 87       	std	Z+11, r25	; 0x0b
 1cc:	82 87       	std	Z+10, r24	; 0x0a
 1ce:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <time+0xa>
 1d2:	90 91 db 00 	lds	r25, 0x00DB	; 0x8000db <time+0xb>
 1d6:	cc 97       	sbiw	r24, 0x3c	; 60
 1d8:	4c f0       	brlt	.+18     	; 0x1ec <increment_time+0x4e>
 1da:	e0 ed       	ldi	r30, 0xD0	; 208
 1dc:	f0 e0       	ldi	r31, 0x00	; 0
 1de:	13 86       	std	Z+11, r1	; 0x0b
 1e0:	12 86       	std	Z+10, r1	; 0x0a
 1e2:	80 85       	ldd	r24, Z+8	; 0x08
 1e4:	91 85       	ldd	r25, Z+9	; 0x09
 1e6:	01 96       	adiw	r24, 0x01	; 1
 1e8:	91 87       	std	Z+9, r25	; 0x09
 1ea:	80 87       	std	Z+8, r24	; 0x08
 1ec:	80 91 d8 00 	lds	r24, 0x00D8	; 0x8000d8 <time+0x8>
 1f0:	90 91 d9 00 	lds	r25, 0x00D9	; 0x8000d9 <time+0x9>
 1f4:	cc 97       	sbiw	r24, 0x3c	; 60
 1f6:	4c f0       	brlt	.+18     	; 0x20a <increment_time+0x6c>
 1f8:	e0 ed       	ldi	r30, 0xD0	; 208
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	11 86       	std	Z+9, r1	; 0x09
 1fe:	10 86       	std	Z+8, r1	; 0x08
 200:	86 81       	ldd	r24, Z+6	; 0x06
 202:	97 81       	ldd	r25, Z+7	; 0x07
 204:	01 96       	adiw	r24, 0x01	; 1
 206:	97 83       	std	Z+7, r25	; 0x07
 208:	86 83       	std	Z+6, r24	; 0x06
 20a:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <time+0x6>
 20e:	90 91 d7 00 	lds	r25, 0x00D7	; 0x8000d7 <time+0x7>
 212:	48 97       	sbiw	r24, 0x18	; 24
 214:	4c f0       	brlt	.+18     	; 0x228 <increment_time+0x8a>
 216:	e0 ed       	ldi	r30, 0xD0	; 208
 218:	f0 e0       	ldi	r31, 0x00	; 0
 21a:	17 82       	std	Z+7, r1	; 0x07
 21c:	16 82       	std	Z+6, r1	; 0x06
 21e:	84 81       	ldd	r24, Z+4	; 0x04
 220:	95 81       	ldd	r25, Z+5	; 0x05
 222:	01 96       	adiw	r24, 0x01	; 1
 224:	95 83       	std	Z+5, r25	; 0x05
 226:	84 83       	std	Z+4, r24	; 0x04
 228:	e0 ed       	ldi	r30, 0xD0	; 208
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	c4 81       	ldd	r28, Z+4	; 0x04
 22e:	d5 81       	ldd	r29, Z+5	; 0x05
 230:	22 81       	ldd	r18, Z+2	; 0x02
 232:	33 81       	ldd	r19, Z+3	; 0x03
 234:	f9 01       	movw	r30, r18
 236:	ee 0f       	add	r30, r30
 238:	ff 1f       	adc	r31, r31
 23a:	e0 5a       	subi	r30, 0xA0	; 160
 23c:	ff 4f       	sbci	r31, 0xFF	; 255
 23e:	80 81       	ld	r24, Z
 240:	91 81       	ldd	r25, Z+1	; 0x01
 242:	c8 17       	cp	r28, r24
 244:	d9 07       	cpc	r29, r25
 246:	84 f1       	brlt	.+96     	; 0x2a8 <increment_time+0x10a>
 248:	e0 91 d0 00 	lds	r30, 0x00D0	; 0x8000d0 <time>
 24c:	f0 91 d1 00 	lds	r31, 0x00D1	; 0x8000d1 <time+0x1>
 250:	cf 01       	movw	r24, r30
 252:	83 70       	andi	r24, 0x03	; 3
 254:	99 27       	eor	r25, r25
 256:	89 2b       	or	r24, r25
 258:	f9 f4       	brne	.+62     	; 0x298 <increment_time+0xfa>
 25a:	21 30       	cpi	r18, 0x01	; 1
 25c:	31 05       	cpc	r19, r1
 25e:	e1 f4       	brne	.+56     	; 0x298 <increment_time+0xfa>
 260:	cf 01       	movw	r24, r30
 262:	64 e6       	ldi	r22, 0x64	; 100
 264:	70 e0       	ldi	r23, 0x00	; 0
 266:	0e 94 df 03 	call	0x7be	; 0x7be <__divmodhi4>
 26a:	89 2b       	or	r24, r25
 26c:	39 f4       	brne	.+14     	; 0x27c <increment_time+0xde>
 26e:	cf 01       	movw	r24, r30
 270:	60 e9       	ldi	r22, 0x90	; 144
 272:	71 e0       	ldi	r23, 0x01	; 1
 274:	0e 94 df 03 	call	0x7be	; 0x7be <__divmodhi4>
 278:	89 2b       	or	r24, r25
 27a:	71 f4       	brne	.+28     	; 0x298 <increment_time+0xfa>
 27c:	cb 31       	cpi	r28, 0x1B	; 27
 27e:	d1 05       	cpc	r29, r1
 280:	11 f1       	breq	.+68     	; 0x2c6 <increment_time+0x128>
 282:	6d 97       	sbiw	r28, 0x1d	; 29
 284:	04 f1       	brlt	.+64     	; 0x2c6 <increment_time+0x128>
 286:	e0 ed       	ldi	r30, 0xD0	; 208
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	15 82       	std	Z+5, r1	; 0x05
 28c:	14 82       	std	Z+4, r1	; 0x04
 28e:	82 e0       	ldi	r24, 0x02	; 2
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	93 83       	std	Z+3, r25	; 0x03
 294:	82 83       	std	Z+2, r24	; 0x02
 296:	17 c0       	rjmp	.+46     	; 0x2c6 <increment_time+0x128>
 298:	e0 ed       	ldi	r30, 0xD0	; 208
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	15 82       	std	Z+5, r1	; 0x05
 29e:	14 82       	std	Z+4, r1	; 0x04
 2a0:	2f 5f       	subi	r18, 0xFF	; 255
 2a2:	3f 4f       	sbci	r19, 0xFF	; 255
 2a4:	33 83       	std	Z+3, r19	; 0x03
 2a6:	22 83       	std	Z+2, r18	; 0x02
 2a8:	80 91 d2 00 	lds	r24, 0x00D2	; 0x8000d2 <time+0x2>
 2ac:	90 91 d3 00 	lds	r25, 0x00D3	; 0x8000d3 <time+0x3>
 2b0:	0c 97       	sbiw	r24, 0x0c	; 12
 2b2:	4c f0       	brlt	.+18     	; 0x2c6 <increment_time+0x128>
 2b4:	e0 ed       	ldi	r30, 0xD0	; 208
 2b6:	f0 e0       	ldi	r31, 0x00	; 0
 2b8:	13 82       	std	Z+3, r1	; 0x03
 2ba:	12 82       	std	Z+2, r1	; 0x02
 2bc:	80 81       	ld	r24, Z
 2be:	91 81       	ldd	r25, Z+1	; 0x01
 2c0:	01 96       	adiw	r24, 0x01	; 1
 2c2:	91 83       	std	Z+1, r25	; 0x01
 2c4:	80 83       	st	Z, r24
 2c6:	df 91       	pop	r29
 2c8:	cf 91       	pop	r28
 2ca:	08 95       	ret

000002cc <is_pressed>:
 2cc:	cf 93       	push	r28
 2ce:	df 93       	push	r29
 2d0:	14 ba       	out	0x14, r1	; 20
 2d2:	15 ba       	out	0x15, r1	; 21
 2d4:	44 b3       	in	r20, 0x14	; 20
 2d6:	21 e0       	ldi	r18, 0x01	; 1
 2d8:	30 e0       	ldi	r19, 0x00	; 0
 2da:	f9 01       	movw	r30, r18
 2dc:	02 c0       	rjmp	.+4      	; 0x2e2 <is_pressed+0x16>
 2de:	ee 0f       	add	r30, r30
 2e0:	ff 1f       	adc	r31, r31
 2e2:	8a 95       	dec	r24
 2e4:	e2 f7       	brpl	.-8      	; 0x2de <is_pressed+0x12>
 2e6:	cf 01       	movw	r24, r30
 2e8:	84 2b       	or	r24, r20
 2ea:	84 bb       	out	0x14, r24	; 20
 2ec:	85 b3       	in	r24, 0x15	; 21
 2ee:	eb 01       	movw	r28, r22
 2f0:	24 96       	adiw	r28, 0x04	; 4
 2f2:	0c 2e       	mov	r0, r28
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <is_pressed+0x2e>
 2f6:	22 0f       	add	r18, r18
 2f8:	33 1f       	adc	r19, r19
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <is_pressed+0x2a>
 2fe:	28 2b       	or	r18, r24
 300:	25 bb       	out	0x15, r18	; 21
 302:	81 e0       	ldi	r24, 0x01	; 1
 304:	90 e0       	ldi	r25, 0x00	; 0
 306:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
 30a:	23 b3       	in	r18, 0x13	; 19
 30c:	30 e0       	ldi	r19, 0x00	; 0
 30e:	02 c0       	rjmp	.+4      	; 0x314 <is_pressed+0x48>
 310:	35 95       	asr	r19
 312:	27 95       	ror	r18
 314:	ca 95       	dec	r28
 316:	e2 f7       	brpl	.-8      	; 0x310 <is_pressed+0x44>
 318:	81 e0       	ldi	r24, 0x01	; 1
 31a:	90 e0       	ldi	r25, 0x00	; 0
 31c:	20 ff       	sbrs	r18, 0
 31e:	02 c0       	rjmp	.+4      	; 0x324 <is_pressed+0x58>
 320:	80 e0       	ldi	r24, 0x00	; 0
 322:	90 e0       	ldi	r25, 0x00	; 0
 324:	df 91       	pop	r29
 326:	cf 91       	pop	r28
 328:	08 95       	ret

0000032a <get_key>:
 32a:	0f 93       	push	r16
 32c:	1f 93       	push	r17
 32e:	cf 93       	push	r28
 330:	df 93       	push	r29
 332:	00 e0       	ldi	r16, 0x00	; 0
 334:	10 e0       	ldi	r17, 0x00	; 0
 336:	18 c0       	rjmp	.+48     	; 0x368 <get_key+0x3e>
 338:	be 01       	movw	r22, r28
 33a:	c8 01       	movw	r24, r16
 33c:	0e 94 66 01 	call	0x2cc	; 0x2cc <is_pressed>
 340:	00 97       	sbiw	r24, 0x00	; 0
 342:	49 f0       	breq	.+18     	; 0x356 <get_key+0x2c>
 344:	00 0f       	add	r16, r16
 346:	11 1f       	adc	r17, r17
 348:	00 0f       	add	r16, r16
 34a:	11 1f       	adc	r17, r17
 34c:	c0 0f       	add	r28, r16
 34e:	d1 1f       	adc	r29, r17
 350:	ce 01       	movw	r24, r28
 352:	01 96       	adiw	r24, 0x01	; 1
 354:	0c c0       	rjmp	.+24     	; 0x36e <get_key+0x44>
 356:	21 96       	adiw	r28, 0x01	; 1
 358:	c4 30       	cpi	r28, 0x04	; 4
 35a:	d1 05       	cpc	r29, r1
 35c:	69 f7       	brne	.-38     	; 0x338 <get_key+0xe>
 35e:	0f 5f       	subi	r16, 0xFF	; 255
 360:	1f 4f       	sbci	r17, 0xFF	; 255
 362:	04 30       	cpi	r16, 0x04	; 4
 364:	11 05       	cpc	r17, r1
 366:	19 f0       	breq	.+6      	; 0x36e <get_key+0x44>
 368:	c0 e0       	ldi	r28, 0x00	; 0
 36a:	d0 e0       	ldi	r29, 0x00	; 0
 36c:	e5 cf       	rjmp	.-54     	; 0x338 <get_key+0xe>
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	1f 91       	pop	r17
 374:	0f 91       	pop	r16
 376:	08 95       	ret

00000378 <print_time>:
	avr_wait(500);
	CLR_BIT(PORTB,0);
	avr_wait(500);
}

void print_time() {
 378:	ef 92       	push	r14
 37a:	ff 92       	push	r15
 37c:	0f 93       	push	r16
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	cd b7       	in	r28, 0x3d	; 61
 386:	de b7       	in	r29, 0x3e	; 62
 388:	61 97       	sbiw	r28, 0x11	; 17
 38a:	0f b6       	in	r0, 0x3f	; 63
 38c:	f8 94       	cli
 38e:	de bf       	out	0x3e, r29	; 62
 390:	0f be       	out	0x3f, r0	; 63
 392:	cd bf       	out	0x3d, r28	; 61
	lcd_clr();
 394:	0e 94 a5 00 	call	0x14a	; 0x14a <lcd_clr>
	char buf[17];
	
	lcd_pos(0,0);
 398:	60 e0       	ldi	r22, 0x00	; 0
 39a:	80 e0       	ldi	r24, 0x00	; 0
 39c:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_pos>
	char edit_state = "";
	char edit_position_char = 0;
	if (edit_time) {
 3a0:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <edit_time>
 3a4:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <edit_time+0x1>
 3a8:	89 2b       	or	r24, r25
 3aa:	21 f4       	brne	.+8      	; 0x3b4 <print_time+0x3c>
void print_time() {
	lcd_clr();
	char buf[17];
	
	lcd_pos(0,0);
	char edit_state = "";
 3ac:	8a e8       	ldi	r24, 0x8A	; 138
 3ae:	90 e0       	ldi	r25, 0x00	; 0
	char edit_position_char = 0;
 3b0:	90 e0       	ldi	r25, 0x00	; 0
 3b2:	05 c0       	rjmp	.+10     	; 0x3be <print_time+0x46>
	if (edit_time) {
		edit_state = "E";
 3b4:	89 e8       	ldi	r24, 0x89	; 137
 3b6:	90 e0       	ldi	r25, 0x00	; 0
		edit_position_char = edit_position + 48 + 1;
 3b8:	90 91 cc 00 	lds	r25, 0x00CC	; 0x8000cc <edit_position>
 3bc:	9f 5c       	subi	r25, 0xCF	; 207
	}
	sprintf(buf, "%02d/%02d/%04d  %s %c", time.month + 1, time.day + 1, time.year, edit_state, edit_position_char);
 3be:	1f 92       	push	r1
 3c0:	9f 93       	push	r25
 3c2:	1f 92       	push	r1
 3c4:	8f 93       	push	r24
 3c6:	00 ed       	ldi	r16, 0xD0	; 208
 3c8:	10 e0       	ldi	r17, 0x00	; 0
 3ca:	f8 01       	movw	r30, r16
 3cc:	81 81       	ldd	r24, Z+1	; 0x01
 3ce:	8f 93       	push	r24
 3d0:	80 81       	ld	r24, Z
 3d2:	8f 93       	push	r24
 3d4:	84 81       	ldd	r24, Z+4	; 0x04
 3d6:	95 81       	ldd	r25, Z+5	; 0x05
 3d8:	01 96       	adiw	r24, 0x01	; 1
 3da:	9f 93       	push	r25
 3dc:	8f 93       	push	r24
 3de:	82 81       	ldd	r24, Z+2	; 0x02
 3e0:	93 81       	ldd	r25, Z+3	; 0x03
 3e2:	01 96       	adiw	r24, 0x01	; 1
 3e4:	9f 93       	push	r25
 3e6:	8f 93       	push	r24
 3e8:	8b e8       	ldi	r24, 0x8B	; 139
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	9f 93       	push	r25
 3ee:	8f 93       	push	r24
 3f0:	ce 01       	movw	r24, r28
 3f2:	01 96       	adiw	r24, 0x01	; 1
 3f4:	7c 01       	movw	r14, r24
 3f6:	9f 93       	push	r25
 3f8:	8f 93       	push	r24
 3fa:	0e 94 07 04 	call	0x80e	; 0x80e <sprintf>
	lcd_puts2(buf);
 3fe:	c7 01       	movw	r24, r14
 400:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts2>
	
	lcd_pos(1,0);
 404:	60 e0       	ldi	r22, 0x00	; 0
 406:	81 e0       	ldi	r24, 0x01	; 1
 408:	0e 94 aa 00 	call	0x154	; 0x154 <lcd_pos>
	int hour = time.hour;
 40c:	f8 01       	movw	r30, r16
 40e:	26 81       	ldd	r18, Z+6	; 0x06
 410:	37 81       	ldd	r19, Z+7	; 0x07
	if (edit_time == 1) {
 412:	0f b6       	in	r0, 0x3f	; 63
 414:	f8 94       	cli
 416:	de bf       	out	0x3e, r29	; 62
 418:	0f be       	out	0x3f, r0	; 63
 41a:	cd bf       	out	0x3d, r28	; 61
 41c:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <edit_time>
 420:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <edit_time+0x1>
 424:	01 97       	sbiw	r24, 0x01	; 1
 426:	f1 f4       	brne	.+60     	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
		sprintf(buf, "%02d:%02d:%02d %04d", hour, time.minute, time.second, time_being_set);
 428:	80 91 c7 00 	lds	r24, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 42c:	8f 93       	push	r24
 42e:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 432:	8f 93       	push	r24
 434:	83 85       	ldd	r24, Z+11	; 0x0b
 436:	8f 93       	push	r24
 438:	82 85       	ldd	r24, Z+10	; 0x0a
 43a:	8f 93       	push	r24
 43c:	81 85       	ldd	r24, Z+9	; 0x09
 43e:	8f 93       	push	r24
 440:	80 85       	ldd	r24, Z+8	; 0x08
 442:	8f 93       	push	r24
 444:	3f 93       	push	r19
 446:	2f 93       	push	r18
 448:	81 ea       	ldi	r24, 0xA1	; 161
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	9f 93       	push	r25
 44e:	8f 93       	push	r24
 450:	ff 92       	push	r15
 452:	ef 92       	push	r14
 454:	0e 94 07 04 	call	0x80e	; 0x80e <sprintf>
 458:	0f b6       	in	r0, 0x3f	; 63
 45a:	f8 94       	cli
 45c:	de bf       	out	0x3e, r29	; 62
 45e:	0f be       	out	0x3f, r0	; 63
 460:	cd bf       	out	0x3d, r28	; 61
 462:	1b c0       	rjmp	.+54     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
	}
	else {
		sprintf(buf, "%02d:%02d:%02d", hour, time.minute, time.second);
 464:	e0 ed       	ldi	r30, 0xD0	; 208
 466:	f0 e0       	ldi	r31, 0x00	; 0
 468:	83 85       	ldd	r24, Z+11	; 0x0b
 46a:	8f 93       	push	r24
 46c:	82 85       	ldd	r24, Z+10	; 0x0a
 46e:	8f 93       	push	r24
 470:	81 85       	ldd	r24, Z+9	; 0x09
 472:	8f 93       	push	r24
 474:	80 85       	ldd	r24, Z+8	; 0x08
 476:	8f 93       	push	r24
 478:	3f 93       	push	r19
 47a:	2f 93       	push	r18
 47c:	85 eb       	ldi	r24, 0xB5	; 181
 47e:	90 e0       	ldi	r25, 0x00	; 0
 480:	9f 93       	push	r25
 482:	8f 93       	push	r24
 484:	ce 01       	movw	r24, r28
 486:	01 96       	adiw	r24, 0x01	; 1
 488:	9f 93       	push	r25
 48a:	8f 93       	push	r24
 48c:	0e 94 07 04 	call	0x80e	; 0x80e <sprintf>
 490:	0f b6       	in	r0, 0x3f	; 63
 492:	f8 94       	cli
 494:	de bf       	out	0x3e, r29	; 62
 496:	0f be       	out	0x3f, r0	; 63
 498:	cd bf       	out	0x3d, r28	; 61
	}
	lcd_puts2(buf);
 49a:	ce 01       	movw	r24, r28
 49c:	01 96       	adiw	r24, 0x01	; 1
 49e:	0e 94 be 00 	call	0x17c	; 0x17c <lcd_puts2>
}
 4a2:	61 96       	adiw	r28, 0x11	; 17
 4a4:	0f b6       	in	r0, 0x3f	; 63
 4a6:	f8 94       	cli
 4a8:	de bf       	out	0x3e, r29	; 62
 4aa:	0f be       	out	0x3f, r0	; 63
 4ac:	cd bf       	out	0x3d, r28	; 61
 4ae:	df 91       	pop	r29
 4b0:	cf 91       	pop	r28
 4b2:	1f 91       	pop	r17
 4b4:	0f 91       	pop	r16
 4b6:	ff 90       	pop	r15
 4b8:	ef 90       	pop	r14
 4ba:	08 95       	ret

000004bc <add_or_sub_time>:

void add_or_sub_time(int mode) {
	if (edit_position == 0){
 4bc:	20 91 cc 00 	lds	r18, 0x00CC	; 0x8000cc <edit_position>
 4c0:	30 91 cd 00 	lds	r19, 0x00CD	; 0x8000cd <edit_position+0x1>
 4c4:	21 15       	cp	r18, r1
 4c6:	31 05       	cpc	r19, r1
 4c8:	71 f4       	brne	.+28     	; 0x4e6 <add_or_sub_time+0x2a>
		if (time.month + mode >= 0){
 4ca:	20 91 d2 00 	lds	r18, 0x00D2	; 0x8000d2 <time+0x2>
 4ce:	30 91 d3 00 	lds	r19, 0x00D3	; 0x8000d3 <time+0x3>
 4d2:	82 0f       	add	r24, r18
 4d4:	93 1f       	adc	r25, r19
 4d6:	99 23       	and	r25, r25
 4d8:	0c f4       	brge	.+2      	; 0x4dc <add_or_sub_time+0x20>
 4da:	55 c0       	rjmp	.+170    	; 0x586 <add_or_sub_time+0xca>
			time.month += mode;
 4dc:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <time+0x3>
 4e0:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <time+0x2>
 4e4:	08 95       	ret
		}
	}
	else if (edit_position == 1) {
 4e6:	21 30       	cpi	r18, 0x01	; 1
 4e8:	31 05       	cpc	r19, r1
 4ea:	71 f4       	brne	.+28     	; 0x508 <add_or_sub_time+0x4c>
		if (time.day + mode >= 0){
 4ec:	20 91 d4 00 	lds	r18, 0x00D4	; 0x8000d4 <time+0x4>
 4f0:	30 91 d5 00 	lds	r19, 0x00D5	; 0x8000d5 <time+0x5>
 4f4:	82 0f       	add	r24, r18
 4f6:	93 1f       	adc	r25, r19
 4f8:	99 23       	and	r25, r25
 4fa:	0c f4       	brge	.+2      	; 0x4fe <add_or_sub_time+0x42>
 4fc:	44 c0       	rjmp	.+136    	; 0x586 <add_or_sub_time+0xca>
			time.day += mode;
 4fe:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <time+0x5>
 502:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <time+0x4>
 506:	08 95       	ret
		}
	}
	else if (edit_position == 2) {
 508:	22 30       	cpi	r18, 0x02	; 2
 50a:	31 05       	cpc	r19, r1
 50c:	69 f4       	brne	.+26     	; 0x528 <add_or_sub_time+0x6c>
		if (time.year + mode >= 0){
 50e:	20 91 d0 00 	lds	r18, 0x00D0	; 0x8000d0 <time>
 512:	30 91 d1 00 	lds	r19, 0x00D1	; 0x8000d1 <time+0x1>
 516:	82 0f       	add	r24, r18
 518:	93 1f       	adc	r25, r19
 51a:	99 23       	and	r25, r25
 51c:	a4 f1       	brlt	.+104    	; 0x586 <add_or_sub_time+0xca>
			time.year += mode;
 51e:	90 93 d1 00 	sts	0x00D1, r25	; 0x8000d1 <time+0x1>
 522:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <time>
 526:	08 95       	ret
		}
	}
	else if (edit_position == 3) {
 528:	23 30       	cpi	r18, 0x03	; 3
 52a:	31 05       	cpc	r19, r1
 52c:	69 f4       	brne	.+26     	; 0x548 <add_or_sub_time+0x8c>
		if (time.hour + mode >= 0){
 52e:	20 91 d6 00 	lds	r18, 0x00D6	; 0x8000d6 <time+0x6>
 532:	30 91 d7 00 	lds	r19, 0x00D7	; 0x8000d7 <time+0x7>
 536:	82 0f       	add	r24, r18
 538:	93 1f       	adc	r25, r19
 53a:	99 23       	and	r25, r25
 53c:	24 f1       	brlt	.+72     	; 0x586 <add_or_sub_time+0xca>
			time.hour += mode;
 53e:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <time+0x7>
 542:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <time+0x6>
 546:	08 95       	ret
		}
	}
	else if (edit_position == 4) {
 548:	24 30       	cpi	r18, 0x04	; 4
 54a:	31 05       	cpc	r19, r1
 54c:	69 f4       	brne	.+26     	; 0x568 <add_or_sub_time+0xac>
		if (time.minute + mode >= 0){
 54e:	20 91 d8 00 	lds	r18, 0x00D8	; 0x8000d8 <time+0x8>
 552:	30 91 d9 00 	lds	r19, 0x00D9	; 0x8000d9 <time+0x9>
 556:	82 0f       	add	r24, r18
 558:	93 1f       	adc	r25, r19
 55a:	99 23       	and	r25, r25
 55c:	a4 f0       	brlt	.+40     	; 0x586 <add_or_sub_time+0xca>
			time.minute += mode;
 55e:	90 93 d9 00 	sts	0x00D9, r25	; 0x8000d9 <time+0x9>
 562:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <time+0x8>
 566:	08 95       	ret
		}
	}
	else if (edit_position == 5) {
 568:	25 30       	cpi	r18, 0x05	; 5
 56a:	31 05       	cpc	r19, r1
 56c:	61 f4       	brne	.+24     	; 0x586 <add_or_sub_time+0xca>
		if (time.second + mode >= 0){
 56e:	20 91 da 00 	lds	r18, 0x00DA	; 0x8000da <time+0xa>
 572:	30 91 db 00 	lds	r19, 0x00DB	; 0x8000db <time+0xb>
 576:	82 0f       	add	r24, r18
 578:	93 1f       	adc	r25, r19
 57a:	99 23       	and	r25, r25
 57c:	24 f0       	brlt	.+8      	; 0x586 <add_or_sub_time+0xca>
			time.second += mode;
 57e:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <time+0xb>
 582:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <time+0xa>
 586:	08 95       	ret

00000588 <set_time>:
	}
					
}

void set_time() {
	if (edit_position == 0){
 588:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <edit_position>
 58c:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <edit_position+0x1>
 590:	00 97       	sbiw	r24, 0x00	; 0
 592:	71 f4       	brne	.+28     	; 0x5b0 <set_time+0x28>
		if (time_being_set > 0) {
 594:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 598:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 59c:	18 16       	cp	r1, r24
 59e:	19 06       	cpc	r1, r25
 5a0:	0c f0       	brlt	.+2      	; 0x5a4 <set_time+0x1c>
 5a2:	44 c0       	rjmp	.+136    	; 0x62c <set_time+0xa4>
			time.month = time_being_set - 1;
 5a4:	01 97       	sbiw	r24, 0x01	; 1
 5a6:	90 93 d3 00 	sts	0x00D3, r25	; 0x8000d3 <time+0x3>
 5aa:	80 93 d2 00 	sts	0x00D2, r24	; 0x8000d2 <time+0x2>
 5ae:	08 95       	ret
		}
	}
	else if (edit_position == 1) {
 5b0:	81 30       	cpi	r24, 0x01	; 1
 5b2:	91 05       	cpc	r25, r1
 5b4:	69 f4       	brne	.+26     	; 0x5d0 <set_time+0x48>
		if (time_being_set > 0) {
 5b6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 5ba:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 5be:	18 16       	cp	r1, r24
 5c0:	19 06       	cpc	r1, r25
 5c2:	a4 f5       	brge	.+104    	; 0x62c <set_time+0xa4>
			time.day = time_being_set - 1;
 5c4:	01 97       	sbiw	r24, 0x01	; 1
 5c6:	90 93 d5 00 	sts	0x00D5, r25	; 0x8000d5 <time+0x5>
 5ca:	80 93 d4 00 	sts	0x00D4, r24	; 0x8000d4 <time+0x4>
 5ce:	08 95       	ret
		}
	}
	else if (edit_position == 2) {
 5d0:	82 30       	cpi	r24, 0x02	; 2
 5d2:	91 05       	cpc	r25, r1
 5d4:	49 f4       	brne	.+18     	; 0x5e8 <set_time+0x60>
		time.year = time_being_set;
 5d6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 5da:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 5de:	90 93 d1 00 	sts	0x00D1, r25	; 0x8000d1 <time+0x1>
 5e2:	80 93 d0 00 	sts	0x00D0, r24	; 0x8000d0 <time>
 5e6:	08 95       	ret
	}
	else if (edit_position == 3) {
 5e8:	83 30       	cpi	r24, 0x03	; 3
 5ea:	91 05       	cpc	r25, r1
 5ec:	49 f4       	brne	.+18     	; 0x600 <set_time+0x78>
		time.hour = time_being_set;
 5ee:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 5f2:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 5f6:	90 93 d7 00 	sts	0x00D7, r25	; 0x8000d7 <time+0x7>
 5fa:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <time+0x6>
 5fe:	08 95       	ret
	}
	else if (edit_position == 4) {
 600:	84 30       	cpi	r24, 0x04	; 4
 602:	91 05       	cpc	r25, r1
 604:	49 f4       	brne	.+18     	; 0x618 <set_time+0x90>
		time.minute = time_being_set;
 606:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 60a:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 60e:	90 93 d9 00 	sts	0x00D9, r25	; 0x8000d9 <time+0x9>
 612:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <time+0x8>
 616:	08 95       	ret
	}
	else if (edit_position == 5) {
 618:	05 97       	sbiw	r24, 0x05	; 5
 61a:	41 f4       	brne	.+16     	; 0x62c <set_time+0xa4>
		time.second = time_being_set;
 61c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <time_being_set>
 620:	90 91 c7 00 	lds	r25, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 624:	90 93 db 00 	sts	0x00DB, r25	; 0x8000db <time+0xb>
 628:	80 93 da 00 	sts	0x00DA, r24	; 0x8000da <time+0xa>
 62c:	08 95       	ret

0000062e <clear_set_time>:
	}	
}

void clear_set_time() {
	time_being_set = 0;
 62e:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <time_being_set+0x1>
 632:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <time_being_set>
	time_being_set_position = 0;
 636:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__data_end+0x1>
 63a:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
	is_setting_time = 0;
 63e:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <is_setting_time+0x1>
 642:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <is_setting_time>
 646:	08 95       	ret

00000648 <main>:
}

int main(void)
{
	avr_init();
 648:	0e 94 49 00 	call	0x92	; 0x92 <avr_init>
	lcd_init();
 64c:	0e 94 7d 00 	call	0xfa	; 0xfa <lcd_init>
			}
			else if (keypad[key] == 'B') {
				add_or_sub_time(-1);
			}
			else {
				is_setting_time = 1;
 650:	c1 e0       	ldi	r28, 0x01	; 1
 652:	d0 e0       	ldi	r29, 0x00	; 0
{
	avr_init();
	lcd_init();
    while (1) 
    {
		int key = get_key() - 1;
 654:	0e 94 95 01 	call	0x32a	; 0x32a <get_key>
 658:	01 97       	sbiw	r24, 0x01	; 1
 65a:	08 f4       	brcc	.+2      	; 0x65e <main+0x16>
 65c:	a7 c0       	rjmp	.+334    	; 0x7ac <main+0x164>
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == 'C'){
 65e:	fc 01       	movw	r30, r24
 660:	e8 58       	subi	r30, 0x88	; 136
 662:	ff 4f       	sbci	r31, 0xFF	; 255
 664:	20 81       	ld	r18, Z
 666:	23 34       	cpi	r18, 0x43	; 67
 668:	91 f4       	brne	.+36     	; 0x68e <main+0x46>
			military_time = (military_time + 1) % 2;
 66a:	80 91 ca 00 	lds	r24, 0x00CA	; 0x8000ca <military_time>
 66e:	90 91 cb 00 	lds	r25, 0x00CB	; 0x8000cb <military_time+0x1>
 672:	01 96       	adiw	r24, 0x01	; 1
 674:	81 70       	andi	r24, 0x01	; 1
 676:	90 78       	andi	r25, 0x80	; 128
 678:	99 23       	and	r25, r25
 67a:	24 f4       	brge	.+8      	; 0x684 <main+0x3c>
 67c:	01 97       	sbiw	r24, 0x01	; 1
 67e:	8e 6f       	ori	r24, 0xFE	; 254
 680:	9f 6f       	ori	r25, 0xFF	; 255
 682:	01 96       	adiw	r24, 0x01	; 1
 684:	90 93 cb 00 	sts	0x00CB, r25	; 0x8000cb <military_time+0x1>
 688:	80 93 ca 00 	sts	0x00CA, r24	; 0x8000ca <military_time>
 68c:	8f c0       	rjmp	.+286    	; 0x7ac <main+0x164>
		}
		else if (keypad[key] == 'D') {
 68e:	24 34       	cpi	r18, 0x44	; 68
 690:	f1 f4       	brne	.+60     	; 0x6ce <main+0x86>
			edit_time = (edit_time + 1) % 2;
 692:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <edit_time>
 696:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <edit_time+0x1>
 69a:	01 96       	adiw	r24, 0x01	; 1
 69c:	81 70       	andi	r24, 0x01	; 1
 69e:	90 78       	andi	r25, 0x80	; 128
 6a0:	99 23       	and	r25, r25
 6a2:	24 f4       	brge	.+8      	; 0x6ac <main+0x64>
 6a4:	01 97       	sbiw	r24, 0x01	; 1
 6a6:	8e 6f       	ori	r24, 0xFE	; 254
 6a8:	9f 6f       	ori	r25, 0xFF	; 255
 6aa:	01 96       	adiw	r24, 0x01	; 1
 6ac:	90 93 cf 00 	sts	0x00CF, r25	; 0x8000cf <edit_time+0x1>
 6b0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <edit_time>
			is_setting_time = 0;
 6b4:	10 92 c9 00 	sts	0x00C9, r1	; 0x8000c9 <is_setting_time+0x1>
 6b8:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <is_setting_time>
			time_being_set = 0;
 6bc:	10 92 c7 00 	sts	0x00C7, r1	; 0x8000c7 <time_being_set+0x1>
 6c0:	10 92 c6 00 	sts	0x00C6, r1	; 0x8000c6 <time_being_set>
			time_being_set_position = 0;
 6c4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__data_end+0x1>
 6c8:	10 92 c4 00 	sts	0x00C4, r1	; 0x8000c4 <__data_end>
 6cc:	6f c0       	rjmp	.+222    	; 0x7ac <main+0x164>
		}
		else if (edit_time) {
 6ce:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <edit_time>
 6d2:	90 91 cf 00 	lds	r25, 0x00CF	; 0x8000cf <edit_time+0x1>
 6d6:	89 2b       	or	r24, r25
 6d8:	09 f4       	brne	.+2      	; 0x6dc <main+0x94>
 6da:	68 c0       	rjmp	.+208    	; 0x7ac <main+0x164>
			if (keypad[key] == '#') {
 6dc:	23 32       	cpi	r18, 0x23	; 35
 6de:	71 f4       	brne	.+28     	; 0x6fc <main+0xb4>
				if (edit_position < 5) {
 6e0:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <edit_position>
 6e4:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <edit_position+0x1>
 6e8:	85 30       	cpi	r24, 0x05	; 5
 6ea:	91 05       	cpc	r25, r1
 6ec:	0c f0       	brlt	.+2      	; 0x6f0 <main+0xa8>
 6ee:	5e c0       	rjmp	.+188    	; 0x7ac <main+0x164>
					edit_position ++;
 6f0:	01 96       	adiw	r24, 0x01	; 1
 6f2:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <edit_position+0x1>
 6f6:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <edit_position>
 6fa:	58 c0       	rjmp	.+176    	; 0x7ac <main+0x164>
				}
			}
			else if (keypad[key] == '*') {
 6fc:	2a 32       	cpi	r18, 0x2A	; 42
 6fe:	71 f4       	brne	.+28     	; 0x71c <main+0xd4>
				if (edit_position > 0) {
 700:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <edit_position>
 704:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <edit_position+0x1>
 708:	18 16       	cp	r1, r24
 70a:	19 06       	cpc	r1, r25
 70c:	0c f0       	brlt	.+2      	; 0x710 <main+0xc8>
 70e:	4e c0       	rjmp	.+156    	; 0x7ac <main+0x164>
					edit_position --;
 710:	01 97       	sbiw	r24, 0x01	; 1
 712:	90 93 cd 00 	sts	0x00CD, r25	; 0x8000cd <edit_position+0x1>
 716:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <edit_position>
 71a:	48 c0       	rjmp	.+144    	; 0x7ac <main+0x164>
				}
			}
			else if (keypad[key] == 'A') {
 71c:	21 34       	cpi	r18, 0x41	; 65
 71e:	21 f4       	brne	.+8      	; 0x728 <main+0xe0>
				add_or_sub_time(1);
 720:	ce 01       	movw	r24, r28
 722:	0e 94 5e 02 	call	0x4bc	; 0x4bc <add_or_sub_time>
 726:	42 c0       	rjmp	.+132    	; 0x7ac <main+0x164>
			}
			else if (keypad[key] == 'B') {
 728:	22 34       	cpi	r18, 0x42	; 66
 72a:	29 f4       	brne	.+10     	; 0x736 <main+0xee>
				add_or_sub_time(-1);
 72c:	8f ef       	ldi	r24, 0xFF	; 255
 72e:	9f ef       	ldi	r25, 0xFF	; 255
 730:	0e 94 5e 02 	call	0x4bc	; 0x4bc <add_or_sub_time>
 734:	3b c0       	rjmp	.+118    	; 0x7ac <main+0x164>
			}
			else {
				is_setting_time = 1;
 736:	d0 93 c9 00 	sts	0x00C9, r29	; 0x8000c9 <is_setting_time+0x1>
 73a:	c0 93 c8 00 	sts	0x00C8, r28	; 0x8000c8 <is_setting_time>
				time_being_set_position ++;
 73e:	60 91 c4 00 	lds	r22, 0x00C4	; 0x8000c4 <__data_end>
 742:	70 91 c5 00 	lds	r23, 0x00C5	; 0x8000c5 <__data_end+0x1>
 746:	6f 5f       	subi	r22, 0xFF	; 255
 748:	7f 4f       	sbci	r23, 0xFF	; 255
 74a:	70 93 c5 00 	sts	0x00C5, r23	; 0x8000c5 <__data_end+0x1>
 74e:	60 93 c4 00 	sts	0x00C4, r22	; 0x8000c4 <__data_end>
				int num = keypad[key] - 48;
				time_being_set = time_being_set * 10 + num;
 752:	40 91 c6 00 	lds	r20, 0x00C6	; 0x8000c6 <time_being_set>
 756:	50 91 c7 00 	lds	r21, 0x00C7	; 0x8000c7 <time_being_set+0x1>
 75a:	ca 01       	movw	r24, r20
 75c:	88 0f       	add	r24, r24
 75e:	99 1f       	adc	r25, r25
 760:	44 0f       	add	r20, r20
 762:	55 1f       	adc	r21, r21
 764:	44 0f       	add	r20, r20
 766:	55 1f       	adc	r21, r21
 768:	44 0f       	add	r20, r20
 76a:	55 1f       	adc	r21, r21
 76c:	84 0f       	add	r24, r20
 76e:	95 1f       	adc	r25, r21
 770:	30 e0       	ldi	r19, 0x00	; 0
 772:	20 53       	subi	r18, 0x30	; 48
 774:	31 09       	sbc	r19, r1
 776:	82 0f       	add	r24, r18
 778:	93 1f       	adc	r25, r19
 77a:	90 93 c7 00 	sts	0x00C7, r25	; 0x8000c7 <time_being_set+0x1>
 77e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <time_being_set>
				if (edit_position == 2 && time_being_set_position == 4) { // edit position is on year
 782:	80 91 cc 00 	lds	r24, 0x00CC	; 0x8000cc <edit_position>
 786:	90 91 cd 00 	lds	r25, 0x00CD	; 0x8000cd <edit_position+0x1>
 78a:	02 97       	sbiw	r24, 0x02	; 2
 78c:	41 f4       	brne	.+16     	; 0x79e <main+0x156>
 78e:	64 30       	cpi	r22, 0x04	; 4
 790:	71 05       	cpc	r23, r1
 792:	61 f4       	brne	.+24     	; 0x7ac <main+0x164>
					set_time();
 794:	0e 94 c4 02 	call	0x588	; 0x588 <set_time>
					clear_set_time();
 798:	0e 94 17 03 	call	0x62e	; 0x62e <clear_set_time>
 79c:	07 c0       	rjmp	.+14     	; 0x7ac <main+0x164>
				}
				else if (edit_position != 2 && time_being_set_position == 2) { // edit position is on everything else other than year
 79e:	62 30       	cpi	r22, 0x02	; 2
 7a0:	71 05       	cpc	r23, r1
 7a2:	21 f4       	brne	.+8      	; 0x7ac <main+0x164>
					set_time();
 7a4:	0e 94 c4 02 	call	0x588	; 0x588 <set_time>
					clear_set_time();
 7a8:	0e 94 17 03 	call	0x62e	; 0x62e <clear_set_time>
				}
			}
		}
		print_time();
 7ac:	0e 94 bc 01 	call	0x378	; 0x378 <print_time>
		increment_time();
 7b0:	0e 94 cf 00 	call	0x19e	; 0x19e <increment_time>
		avr_wait(100);
 7b4:	84 e6       	ldi	r24, 0x64	; 100
 7b6:	90 e0       	ldi	r25, 0x00	; 0
 7b8:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
    }
 7bc:	4b cf       	rjmp	.-362    	; 0x654 <main+0xc>

000007be <__divmodhi4>:
 7be:	97 fb       	bst	r25, 7
 7c0:	07 2e       	mov	r0, r23
 7c2:	16 f4       	brtc	.+4      	; 0x7c8 <__divmodhi4+0xa>
 7c4:	00 94       	com	r0
 7c6:	07 d0       	rcall	.+14     	; 0x7d6 <__divmodhi4_neg1>
 7c8:	77 fd       	sbrc	r23, 7
 7ca:	09 d0       	rcall	.+18     	; 0x7de <__divmodhi4_neg2>
 7cc:	0e 94 f3 03 	call	0x7e6	; 0x7e6 <__udivmodhi4>
 7d0:	07 fc       	sbrc	r0, 7
 7d2:	05 d0       	rcall	.+10     	; 0x7de <__divmodhi4_neg2>
 7d4:	3e f4       	brtc	.+14     	; 0x7e4 <__divmodhi4_exit>

000007d6 <__divmodhi4_neg1>:
 7d6:	90 95       	com	r25
 7d8:	81 95       	neg	r24
 7da:	9f 4f       	sbci	r25, 0xFF	; 255
 7dc:	08 95       	ret

000007de <__divmodhi4_neg2>:
 7de:	70 95       	com	r23
 7e0:	61 95       	neg	r22
 7e2:	7f 4f       	sbci	r23, 0xFF	; 255

000007e4 <__divmodhi4_exit>:
 7e4:	08 95       	ret

000007e6 <__udivmodhi4>:
 7e6:	aa 1b       	sub	r26, r26
 7e8:	bb 1b       	sub	r27, r27
 7ea:	51 e1       	ldi	r21, 0x11	; 17
 7ec:	07 c0       	rjmp	.+14     	; 0x7fc <__udivmodhi4_ep>

000007ee <__udivmodhi4_loop>:
 7ee:	aa 1f       	adc	r26, r26
 7f0:	bb 1f       	adc	r27, r27
 7f2:	a6 17       	cp	r26, r22
 7f4:	b7 07       	cpc	r27, r23
 7f6:	10 f0       	brcs	.+4      	; 0x7fc <__udivmodhi4_ep>
 7f8:	a6 1b       	sub	r26, r22
 7fa:	b7 0b       	sbc	r27, r23

000007fc <__udivmodhi4_ep>:
 7fc:	88 1f       	adc	r24, r24
 7fe:	99 1f       	adc	r25, r25
 800:	5a 95       	dec	r21
 802:	a9 f7       	brne	.-22     	; 0x7ee <__udivmodhi4_loop>
 804:	80 95       	com	r24
 806:	90 95       	com	r25
 808:	bc 01       	movw	r22, r24
 80a:	cd 01       	movw	r24, r26
 80c:	08 95       	ret

0000080e <sprintf>:
 80e:	ae e0       	ldi	r26, 0x0E	; 14
 810:	b0 e0       	ldi	r27, 0x00	; 0
 812:	ed e0       	ldi	r30, 0x0D	; 13
 814:	f4 e0       	ldi	r31, 0x04	; 4
 816:	0c 94 c8 06 	jmp	0xd90	; 0xd90 <__prologue_saves__+0x1c>
 81a:	0d 89       	ldd	r16, Y+21	; 0x15
 81c:	1e 89       	ldd	r17, Y+22	; 0x16
 81e:	86 e0       	ldi	r24, 0x06	; 6
 820:	8c 83       	std	Y+4, r24	; 0x04
 822:	1a 83       	std	Y+2, r17	; 0x02
 824:	09 83       	std	Y+1, r16	; 0x01
 826:	8f ef       	ldi	r24, 0xFF	; 255
 828:	9f e7       	ldi	r25, 0x7F	; 127
 82a:	9e 83       	std	Y+6, r25	; 0x06
 82c:	8d 83       	std	Y+5, r24	; 0x05
 82e:	ae 01       	movw	r20, r28
 830:	47 5e       	subi	r20, 0xE7	; 231
 832:	5f 4f       	sbci	r21, 0xFF	; 255
 834:	6f 89       	ldd	r22, Y+23	; 0x17
 836:	78 8d       	ldd	r23, Y+24	; 0x18
 838:	ce 01       	movw	r24, r28
 83a:	01 96       	adiw	r24, 0x01	; 1
 83c:	0e 94 29 04 	call	0x852	; 0x852 <vfprintf>
 840:	ef 81       	ldd	r30, Y+7	; 0x07
 842:	f8 85       	ldd	r31, Y+8	; 0x08
 844:	e0 0f       	add	r30, r16
 846:	f1 1f       	adc	r31, r17
 848:	10 82       	st	Z, r1
 84a:	2e 96       	adiw	r28, 0x0e	; 14
 84c:	e4 e0       	ldi	r30, 0x04	; 4
 84e:	0c 94 e4 06 	jmp	0xdc8	; 0xdc8 <__epilogue_restores__+0x1c>

00000852 <vfprintf>:
 852:	ab e0       	ldi	r26, 0x0B	; 11
 854:	b0 e0       	ldi	r27, 0x00	; 0
 856:	ef e2       	ldi	r30, 0x2F	; 47
 858:	f4 e0       	ldi	r31, 0x04	; 4
 85a:	0c 94 ba 06 	jmp	0xd74	; 0xd74 <__prologue_saves__>
 85e:	6c 01       	movw	r12, r24
 860:	7b 01       	movw	r14, r22
 862:	8a 01       	movw	r16, r20
 864:	fc 01       	movw	r30, r24
 866:	17 82       	std	Z+7, r1	; 0x07
 868:	16 82       	std	Z+6, r1	; 0x06
 86a:	83 81       	ldd	r24, Z+3	; 0x03
 86c:	81 ff       	sbrs	r24, 1
 86e:	cc c1       	rjmp	.+920    	; 0xc08 <__stack+0x3a9>
 870:	ce 01       	movw	r24, r28
 872:	01 96       	adiw	r24, 0x01	; 1
 874:	3c 01       	movw	r6, r24
 876:	f6 01       	movw	r30, r12
 878:	93 81       	ldd	r25, Z+3	; 0x03
 87a:	f7 01       	movw	r30, r14
 87c:	93 fd       	sbrc	r25, 3
 87e:	85 91       	lpm	r24, Z+
 880:	93 ff       	sbrs	r25, 3
 882:	81 91       	ld	r24, Z+
 884:	7f 01       	movw	r14, r30
 886:	88 23       	and	r24, r24
 888:	09 f4       	brne	.+2      	; 0x88c <__stack+0x2d>
 88a:	ba c1       	rjmp	.+884    	; 0xc00 <__stack+0x3a1>
 88c:	85 32       	cpi	r24, 0x25	; 37
 88e:	39 f4       	brne	.+14     	; 0x89e <__stack+0x3f>
 890:	93 fd       	sbrc	r25, 3
 892:	85 91       	lpm	r24, Z+
 894:	93 ff       	sbrs	r25, 3
 896:	81 91       	ld	r24, Z+
 898:	7f 01       	movw	r14, r30
 89a:	85 32       	cpi	r24, 0x25	; 37
 89c:	29 f4       	brne	.+10     	; 0x8a8 <__stack+0x49>
 89e:	b6 01       	movw	r22, r12
 8a0:	90 e0       	ldi	r25, 0x00	; 0
 8a2:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 8a6:	e7 cf       	rjmp	.-50     	; 0x876 <__stack+0x17>
 8a8:	91 2c       	mov	r9, r1
 8aa:	21 2c       	mov	r2, r1
 8ac:	31 2c       	mov	r3, r1
 8ae:	ff e1       	ldi	r31, 0x1F	; 31
 8b0:	f3 15       	cp	r31, r3
 8b2:	d8 f0       	brcs	.+54     	; 0x8ea <__stack+0x8b>
 8b4:	8b 32       	cpi	r24, 0x2B	; 43
 8b6:	79 f0       	breq	.+30     	; 0x8d6 <__stack+0x77>
 8b8:	38 f4       	brcc	.+14     	; 0x8c8 <__stack+0x69>
 8ba:	80 32       	cpi	r24, 0x20	; 32
 8bc:	79 f0       	breq	.+30     	; 0x8dc <__stack+0x7d>
 8be:	83 32       	cpi	r24, 0x23	; 35
 8c0:	a1 f4       	brne	.+40     	; 0x8ea <__stack+0x8b>
 8c2:	23 2d       	mov	r18, r3
 8c4:	20 61       	ori	r18, 0x10	; 16
 8c6:	1d c0       	rjmp	.+58     	; 0x902 <__stack+0xa3>
 8c8:	8d 32       	cpi	r24, 0x2D	; 45
 8ca:	61 f0       	breq	.+24     	; 0x8e4 <__stack+0x85>
 8cc:	80 33       	cpi	r24, 0x30	; 48
 8ce:	69 f4       	brne	.+26     	; 0x8ea <__stack+0x8b>
 8d0:	23 2d       	mov	r18, r3
 8d2:	21 60       	ori	r18, 0x01	; 1
 8d4:	16 c0       	rjmp	.+44     	; 0x902 <__stack+0xa3>
 8d6:	83 2d       	mov	r24, r3
 8d8:	82 60       	ori	r24, 0x02	; 2
 8da:	38 2e       	mov	r3, r24
 8dc:	e3 2d       	mov	r30, r3
 8de:	e4 60       	ori	r30, 0x04	; 4
 8e0:	3e 2e       	mov	r3, r30
 8e2:	2a c0       	rjmp	.+84     	; 0x938 <__stack+0xd9>
 8e4:	f3 2d       	mov	r31, r3
 8e6:	f8 60       	ori	r31, 0x08	; 8
 8e8:	1d c0       	rjmp	.+58     	; 0x924 <__stack+0xc5>
 8ea:	37 fc       	sbrc	r3, 7
 8ec:	2d c0       	rjmp	.+90     	; 0x948 <__stack+0xe9>
 8ee:	20 ed       	ldi	r18, 0xD0	; 208
 8f0:	28 0f       	add	r18, r24
 8f2:	2a 30       	cpi	r18, 0x0A	; 10
 8f4:	40 f0       	brcs	.+16     	; 0x906 <__stack+0xa7>
 8f6:	8e 32       	cpi	r24, 0x2E	; 46
 8f8:	b9 f4       	brne	.+46     	; 0x928 <__stack+0xc9>
 8fa:	36 fc       	sbrc	r3, 6
 8fc:	81 c1       	rjmp	.+770    	; 0xc00 <__stack+0x3a1>
 8fe:	23 2d       	mov	r18, r3
 900:	20 64       	ori	r18, 0x40	; 64
 902:	32 2e       	mov	r3, r18
 904:	19 c0       	rjmp	.+50     	; 0x938 <__stack+0xd9>
 906:	36 fe       	sbrs	r3, 6
 908:	06 c0       	rjmp	.+12     	; 0x916 <__stack+0xb7>
 90a:	8a e0       	ldi	r24, 0x0A	; 10
 90c:	98 9e       	mul	r9, r24
 90e:	20 0d       	add	r18, r0
 910:	11 24       	eor	r1, r1
 912:	92 2e       	mov	r9, r18
 914:	11 c0       	rjmp	.+34     	; 0x938 <__stack+0xd9>
 916:	ea e0       	ldi	r30, 0x0A	; 10
 918:	2e 9e       	mul	r2, r30
 91a:	20 0d       	add	r18, r0
 91c:	11 24       	eor	r1, r1
 91e:	22 2e       	mov	r2, r18
 920:	f3 2d       	mov	r31, r3
 922:	f0 62       	ori	r31, 0x20	; 32
 924:	3f 2e       	mov	r3, r31
 926:	08 c0       	rjmp	.+16     	; 0x938 <__stack+0xd9>
 928:	8c 36       	cpi	r24, 0x6C	; 108
 92a:	21 f4       	brne	.+8      	; 0x934 <__stack+0xd5>
 92c:	83 2d       	mov	r24, r3
 92e:	80 68       	ori	r24, 0x80	; 128
 930:	38 2e       	mov	r3, r24
 932:	02 c0       	rjmp	.+4      	; 0x938 <__stack+0xd9>
 934:	88 36       	cpi	r24, 0x68	; 104
 936:	41 f4       	brne	.+16     	; 0x948 <__stack+0xe9>
 938:	f7 01       	movw	r30, r14
 93a:	93 fd       	sbrc	r25, 3
 93c:	85 91       	lpm	r24, Z+
 93e:	93 ff       	sbrs	r25, 3
 940:	81 91       	ld	r24, Z+
 942:	7f 01       	movw	r14, r30
 944:	81 11       	cpse	r24, r1
 946:	b3 cf       	rjmp	.-154    	; 0x8ae <__stack+0x4f>
 948:	98 2f       	mov	r25, r24
 94a:	9f 7d       	andi	r25, 0xDF	; 223
 94c:	95 54       	subi	r25, 0x45	; 69
 94e:	93 30       	cpi	r25, 0x03	; 3
 950:	28 f4       	brcc	.+10     	; 0x95c <__stack+0xfd>
 952:	0c 5f       	subi	r16, 0xFC	; 252
 954:	1f 4f       	sbci	r17, 0xFF	; 255
 956:	9f e3       	ldi	r25, 0x3F	; 63
 958:	99 83       	std	Y+1, r25	; 0x01
 95a:	0d c0       	rjmp	.+26     	; 0x976 <__stack+0x117>
 95c:	83 36       	cpi	r24, 0x63	; 99
 95e:	31 f0       	breq	.+12     	; 0x96c <__stack+0x10d>
 960:	83 37       	cpi	r24, 0x73	; 115
 962:	71 f0       	breq	.+28     	; 0x980 <__stack+0x121>
 964:	83 35       	cpi	r24, 0x53	; 83
 966:	09 f0       	breq	.+2      	; 0x96a <__stack+0x10b>
 968:	59 c0       	rjmp	.+178    	; 0xa1c <__stack+0x1bd>
 96a:	21 c0       	rjmp	.+66     	; 0x9ae <__stack+0x14f>
 96c:	f8 01       	movw	r30, r16
 96e:	80 81       	ld	r24, Z
 970:	89 83       	std	Y+1, r24	; 0x01
 972:	0e 5f       	subi	r16, 0xFE	; 254
 974:	1f 4f       	sbci	r17, 0xFF	; 255
 976:	88 24       	eor	r8, r8
 978:	83 94       	inc	r8
 97a:	91 2c       	mov	r9, r1
 97c:	53 01       	movw	r10, r6
 97e:	13 c0       	rjmp	.+38     	; 0x9a6 <__stack+0x147>
 980:	28 01       	movw	r4, r16
 982:	f2 e0       	ldi	r31, 0x02	; 2
 984:	4f 0e       	add	r4, r31
 986:	51 1c       	adc	r5, r1
 988:	f8 01       	movw	r30, r16
 98a:	a0 80       	ld	r10, Z
 98c:	b1 80       	ldd	r11, Z+1	; 0x01
 98e:	36 fe       	sbrs	r3, 6
 990:	03 c0       	rjmp	.+6      	; 0x998 <__stack+0x139>
 992:	69 2d       	mov	r22, r9
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	02 c0       	rjmp	.+4      	; 0x99c <__stack+0x13d>
 998:	6f ef       	ldi	r22, 0xFF	; 255
 99a:	7f ef       	ldi	r23, 0xFF	; 255
 99c:	c5 01       	movw	r24, r10
 99e:	0e 94 15 06 	call	0xc2a	; 0xc2a <strnlen>
 9a2:	4c 01       	movw	r8, r24
 9a4:	82 01       	movw	r16, r4
 9a6:	f3 2d       	mov	r31, r3
 9a8:	ff 77       	andi	r31, 0x7F	; 127
 9aa:	3f 2e       	mov	r3, r31
 9ac:	16 c0       	rjmp	.+44     	; 0x9da <__stack+0x17b>
 9ae:	28 01       	movw	r4, r16
 9b0:	22 e0       	ldi	r18, 0x02	; 2
 9b2:	42 0e       	add	r4, r18
 9b4:	51 1c       	adc	r5, r1
 9b6:	f8 01       	movw	r30, r16
 9b8:	a0 80       	ld	r10, Z
 9ba:	b1 80       	ldd	r11, Z+1	; 0x01
 9bc:	36 fe       	sbrs	r3, 6
 9be:	03 c0       	rjmp	.+6      	; 0x9c6 <__stack+0x167>
 9c0:	69 2d       	mov	r22, r9
 9c2:	70 e0       	ldi	r23, 0x00	; 0
 9c4:	02 c0       	rjmp	.+4      	; 0x9ca <__stack+0x16b>
 9c6:	6f ef       	ldi	r22, 0xFF	; 255
 9c8:	7f ef       	ldi	r23, 0xFF	; 255
 9ca:	c5 01       	movw	r24, r10
 9cc:	0e 94 0a 06 	call	0xc14	; 0xc14 <strnlen_P>
 9d0:	4c 01       	movw	r8, r24
 9d2:	f3 2d       	mov	r31, r3
 9d4:	f0 68       	ori	r31, 0x80	; 128
 9d6:	3f 2e       	mov	r3, r31
 9d8:	82 01       	movw	r16, r4
 9da:	33 fc       	sbrc	r3, 3
 9dc:	1b c0       	rjmp	.+54     	; 0xa14 <__stack+0x1b5>
 9de:	82 2d       	mov	r24, r2
 9e0:	90 e0       	ldi	r25, 0x00	; 0
 9e2:	88 16       	cp	r8, r24
 9e4:	99 06       	cpc	r9, r25
 9e6:	b0 f4       	brcc	.+44     	; 0xa14 <__stack+0x1b5>
 9e8:	b6 01       	movw	r22, r12
 9ea:	80 e2       	ldi	r24, 0x20	; 32
 9ec:	90 e0       	ldi	r25, 0x00	; 0
 9ee:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 9f2:	2a 94       	dec	r2
 9f4:	f4 cf       	rjmp	.-24     	; 0x9de <__stack+0x17f>
 9f6:	f5 01       	movw	r30, r10
 9f8:	37 fc       	sbrc	r3, 7
 9fa:	85 91       	lpm	r24, Z+
 9fc:	37 fe       	sbrs	r3, 7
 9fe:	81 91       	ld	r24, Z+
 a00:	5f 01       	movw	r10, r30
 a02:	b6 01       	movw	r22, r12
 a04:	90 e0       	ldi	r25, 0x00	; 0
 a06:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 a0a:	21 10       	cpse	r2, r1
 a0c:	2a 94       	dec	r2
 a0e:	21 e0       	ldi	r18, 0x01	; 1
 a10:	82 1a       	sub	r8, r18
 a12:	91 08       	sbc	r9, r1
 a14:	81 14       	cp	r8, r1
 a16:	91 04       	cpc	r9, r1
 a18:	71 f7       	brne	.-36     	; 0x9f6 <__stack+0x197>
 a1a:	e8 c0       	rjmp	.+464    	; 0xbec <__stack+0x38d>
 a1c:	84 36       	cpi	r24, 0x64	; 100
 a1e:	11 f0       	breq	.+4      	; 0xa24 <__stack+0x1c5>
 a20:	89 36       	cpi	r24, 0x69	; 105
 a22:	41 f5       	brne	.+80     	; 0xa74 <__stack+0x215>
 a24:	f8 01       	movw	r30, r16
 a26:	37 fe       	sbrs	r3, 7
 a28:	07 c0       	rjmp	.+14     	; 0xa38 <__stack+0x1d9>
 a2a:	60 81       	ld	r22, Z
 a2c:	71 81       	ldd	r23, Z+1	; 0x01
 a2e:	82 81       	ldd	r24, Z+2	; 0x02
 a30:	93 81       	ldd	r25, Z+3	; 0x03
 a32:	0c 5f       	subi	r16, 0xFC	; 252
 a34:	1f 4f       	sbci	r17, 0xFF	; 255
 a36:	08 c0       	rjmp	.+16     	; 0xa48 <__stack+0x1e9>
 a38:	60 81       	ld	r22, Z
 a3a:	71 81       	ldd	r23, Z+1	; 0x01
 a3c:	07 2e       	mov	r0, r23
 a3e:	00 0c       	add	r0, r0
 a40:	88 0b       	sbc	r24, r24
 a42:	99 0b       	sbc	r25, r25
 a44:	0e 5f       	subi	r16, 0xFE	; 254
 a46:	1f 4f       	sbci	r17, 0xFF	; 255
 a48:	f3 2d       	mov	r31, r3
 a4a:	ff 76       	andi	r31, 0x6F	; 111
 a4c:	3f 2e       	mov	r3, r31
 a4e:	97 ff       	sbrs	r25, 7
 a50:	09 c0       	rjmp	.+18     	; 0xa64 <__stack+0x205>
 a52:	90 95       	com	r25
 a54:	80 95       	com	r24
 a56:	70 95       	com	r23
 a58:	61 95       	neg	r22
 a5a:	7f 4f       	sbci	r23, 0xFF	; 255
 a5c:	8f 4f       	sbci	r24, 0xFF	; 255
 a5e:	9f 4f       	sbci	r25, 0xFF	; 255
 a60:	f0 68       	ori	r31, 0x80	; 128
 a62:	3f 2e       	mov	r3, r31
 a64:	2a e0       	ldi	r18, 0x0A	; 10
 a66:	30 e0       	ldi	r19, 0x00	; 0
 a68:	a3 01       	movw	r20, r6
 a6a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__ultoa_invert>
 a6e:	88 2e       	mov	r8, r24
 a70:	86 18       	sub	r8, r6
 a72:	45 c0       	rjmp	.+138    	; 0xafe <__stack+0x29f>
 a74:	85 37       	cpi	r24, 0x75	; 117
 a76:	31 f4       	brne	.+12     	; 0xa84 <__stack+0x225>
 a78:	23 2d       	mov	r18, r3
 a7a:	2f 7e       	andi	r18, 0xEF	; 239
 a7c:	b2 2e       	mov	r11, r18
 a7e:	2a e0       	ldi	r18, 0x0A	; 10
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	25 c0       	rjmp	.+74     	; 0xace <__stack+0x26f>
 a84:	93 2d       	mov	r25, r3
 a86:	99 7f       	andi	r25, 0xF9	; 249
 a88:	b9 2e       	mov	r11, r25
 a8a:	8f 36       	cpi	r24, 0x6F	; 111
 a8c:	c1 f0       	breq	.+48     	; 0xabe <__stack+0x25f>
 a8e:	18 f4       	brcc	.+6      	; 0xa96 <__stack+0x237>
 a90:	88 35       	cpi	r24, 0x58	; 88
 a92:	79 f0       	breq	.+30     	; 0xab2 <__stack+0x253>
 a94:	b5 c0       	rjmp	.+362    	; 0xc00 <__stack+0x3a1>
 a96:	80 37       	cpi	r24, 0x70	; 112
 a98:	19 f0       	breq	.+6      	; 0xaa0 <__stack+0x241>
 a9a:	88 37       	cpi	r24, 0x78	; 120
 a9c:	21 f0       	breq	.+8      	; 0xaa6 <__stack+0x247>
 a9e:	b0 c0       	rjmp	.+352    	; 0xc00 <__stack+0x3a1>
 aa0:	e9 2f       	mov	r30, r25
 aa2:	e0 61       	ori	r30, 0x10	; 16
 aa4:	be 2e       	mov	r11, r30
 aa6:	b4 fe       	sbrs	r11, 4
 aa8:	0d c0       	rjmp	.+26     	; 0xac4 <__stack+0x265>
 aaa:	fb 2d       	mov	r31, r11
 aac:	f4 60       	ori	r31, 0x04	; 4
 aae:	bf 2e       	mov	r11, r31
 ab0:	09 c0       	rjmp	.+18     	; 0xac4 <__stack+0x265>
 ab2:	34 fe       	sbrs	r3, 4
 ab4:	0a c0       	rjmp	.+20     	; 0xaca <__stack+0x26b>
 ab6:	29 2f       	mov	r18, r25
 ab8:	26 60       	ori	r18, 0x06	; 6
 aba:	b2 2e       	mov	r11, r18
 abc:	06 c0       	rjmp	.+12     	; 0xaca <__stack+0x26b>
 abe:	28 e0       	ldi	r18, 0x08	; 8
 ac0:	30 e0       	ldi	r19, 0x00	; 0
 ac2:	05 c0       	rjmp	.+10     	; 0xace <__stack+0x26f>
 ac4:	20 e1       	ldi	r18, 0x10	; 16
 ac6:	30 e0       	ldi	r19, 0x00	; 0
 ac8:	02 c0       	rjmp	.+4      	; 0xace <__stack+0x26f>
 aca:	20 e1       	ldi	r18, 0x10	; 16
 acc:	32 e0       	ldi	r19, 0x02	; 2
 ace:	f8 01       	movw	r30, r16
 ad0:	b7 fe       	sbrs	r11, 7
 ad2:	07 c0       	rjmp	.+14     	; 0xae2 <__stack+0x283>
 ad4:	60 81       	ld	r22, Z
 ad6:	71 81       	ldd	r23, Z+1	; 0x01
 ad8:	82 81       	ldd	r24, Z+2	; 0x02
 ada:	93 81       	ldd	r25, Z+3	; 0x03
 adc:	0c 5f       	subi	r16, 0xFC	; 252
 ade:	1f 4f       	sbci	r17, 0xFF	; 255
 ae0:	06 c0       	rjmp	.+12     	; 0xaee <__stack+0x28f>
 ae2:	60 81       	ld	r22, Z
 ae4:	71 81       	ldd	r23, Z+1	; 0x01
 ae6:	80 e0       	ldi	r24, 0x00	; 0
 ae8:	90 e0       	ldi	r25, 0x00	; 0
 aea:	0e 5f       	subi	r16, 0xFE	; 254
 aec:	1f 4f       	sbci	r17, 0xFF	; 255
 aee:	a3 01       	movw	r20, r6
 af0:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__ultoa_invert>
 af4:	88 2e       	mov	r8, r24
 af6:	86 18       	sub	r8, r6
 af8:	fb 2d       	mov	r31, r11
 afa:	ff 77       	andi	r31, 0x7F	; 127
 afc:	3f 2e       	mov	r3, r31
 afe:	36 fe       	sbrs	r3, 6
 b00:	0d c0       	rjmp	.+26     	; 0xb1c <__stack+0x2bd>
 b02:	23 2d       	mov	r18, r3
 b04:	2e 7f       	andi	r18, 0xFE	; 254
 b06:	a2 2e       	mov	r10, r18
 b08:	89 14       	cp	r8, r9
 b0a:	58 f4       	brcc	.+22     	; 0xb22 <__stack+0x2c3>
 b0c:	34 fe       	sbrs	r3, 4
 b0e:	0b c0       	rjmp	.+22     	; 0xb26 <__stack+0x2c7>
 b10:	32 fc       	sbrc	r3, 2
 b12:	09 c0       	rjmp	.+18     	; 0xb26 <__stack+0x2c7>
 b14:	83 2d       	mov	r24, r3
 b16:	8e 7e       	andi	r24, 0xEE	; 238
 b18:	a8 2e       	mov	r10, r24
 b1a:	05 c0       	rjmp	.+10     	; 0xb26 <__stack+0x2c7>
 b1c:	b8 2c       	mov	r11, r8
 b1e:	a3 2c       	mov	r10, r3
 b20:	03 c0       	rjmp	.+6      	; 0xb28 <__stack+0x2c9>
 b22:	b8 2c       	mov	r11, r8
 b24:	01 c0       	rjmp	.+2      	; 0xb28 <__stack+0x2c9>
 b26:	b9 2c       	mov	r11, r9
 b28:	a4 fe       	sbrs	r10, 4
 b2a:	0f c0       	rjmp	.+30     	; 0xb4a <__stack+0x2eb>
 b2c:	fe 01       	movw	r30, r28
 b2e:	e8 0d       	add	r30, r8
 b30:	f1 1d       	adc	r31, r1
 b32:	80 81       	ld	r24, Z
 b34:	80 33       	cpi	r24, 0x30	; 48
 b36:	21 f4       	brne	.+8      	; 0xb40 <__stack+0x2e1>
 b38:	9a 2d       	mov	r25, r10
 b3a:	99 7e       	andi	r25, 0xE9	; 233
 b3c:	a9 2e       	mov	r10, r25
 b3e:	09 c0       	rjmp	.+18     	; 0xb52 <__stack+0x2f3>
 b40:	a2 fe       	sbrs	r10, 2
 b42:	06 c0       	rjmp	.+12     	; 0xb50 <__stack+0x2f1>
 b44:	b3 94       	inc	r11
 b46:	b3 94       	inc	r11
 b48:	04 c0       	rjmp	.+8      	; 0xb52 <__stack+0x2f3>
 b4a:	8a 2d       	mov	r24, r10
 b4c:	86 78       	andi	r24, 0x86	; 134
 b4e:	09 f0       	breq	.+2      	; 0xb52 <__stack+0x2f3>
 b50:	b3 94       	inc	r11
 b52:	a3 fc       	sbrc	r10, 3
 b54:	11 c0       	rjmp	.+34     	; 0xb78 <__stack+0x319>
 b56:	a0 fe       	sbrs	r10, 0
 b58:	06 c0       	rjmp	.+12     	; 0xb66 <__stack+0x307>
 b5a:	b2 14       	cp	r11, r2
 b5c:	88 f4       	brcc	.+34     	; 0xb80 <__stack+0x321>
 b5e:	28 0c       	add	r2, r8
 b60:	92 2c       	mov	r9, r2
 b62:	9b 18       	sub	r9, r11
 b64:	0e c0       	rjmp	.+28     	; 0xb82 <__stack+0x323>
 b66:	b2 14       	cp	r11, r2
 b68:	60 f4       	brcc	.+24     	; 0xb82 <__stack+0x323>
 b6a:	b6 01       	movw	r22, r12
 b6c:	80 e2       	ldi	r24, 0x20	; 32
 b6e:	90 e0       	ldi	r25, 0x00	; 0
 b70:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 b74:	b3 94       	inc	r11
 b76:	f7 cf       	rjmp	.-18     	; 0xb66 <__stack+0x307>
 b78:	b2 14       	cp	r11, r2
 b7a:	18 f4       	brcc	.+6      	; 0xb82 <__stack+0x323>
 b7c:	2b 18       	sub	r2, r11
 b7e:	02 c0       	rjmp	.+4      	; 0xb84 <__stack+0x325>
 b80:	98 2c       	mov	r9, r8
 b82:	21 2c       	mov	r2, r1
 b84:	a4 fe       	sbrs	r10, 4
 b86:	10 c0       	rjmp	.+32     	; 0xba8 <__stack+0x349>
 b88:	b6 01       	movw	r22, r12
 b8a:	80 e3       	ldi	r24, 0x30	; 48
 b8c:	90 e0       	ldi	r25, 0x00	; 0
 b8e:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 b92:	a2 fe       	sbrs	r10, 2
 b94:	17 c0       	rjmp	.+46     	; 0xbc4 <__stack+0x365>
 b96:	a1 fc       	sbrc	r10, 1
 b98:	03 c0       	rjmp	.+6      	; 0xba0 <__stack+0x341>
 b9a:	88 e7       	ldi	r24, 0x78	; 120
 b9c:	90 e0       	ldi	r25, 0x00	; 0
 b9e:	02 c0       	rjmp	.+4      	; 0xba4 <__stack+0x345>
 ba0:	88 e5       	ldi	r24, 0x58	; 88
 ba2:	90 e0       	ldi	r25, 0x00	; 0
 ba4:	b6 01       	movw	r22, r12
 ba6:	0c c0       	rjmp	.+24     	; 0xbc0 <__stack+0x361>
 ba8:	8a 2d       	mov	r24, r10
 baa:	86 78       	andi	r24, 0x86	; 134
 bac:	59 f0       	breq	.+22     	; 0xbc4 <__stack+0x365>
 bae:	a1 fe       	sbrs	r10, 1
 bb0:	02 c0       	rjmp	.+4      	; 0xbb6 <__stack+0x357>
 bb2:	8b e2       	ldi	r24, 0x2B	; 43
 bb4:	01 c0       	rjmp	.+2      	; 0xbb8 <__stack+0x359>
 bb6:	80 e2       	ldi	r24, 0x20	; 32
 bb8:	a7 fc       	sbrc	r10, 7
 bba:	8d e2       	ldi	r24, 0x2D	; 45
 bbc:	b6 01       	movw	r22, r12
 bbe:	90 e0       	ldi	r25, 0x00	; 0
 bc0:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 bc4:	89 14       	cp	r8, r9
 bc6:	38 f4       	brcc	.+14     	; 0xbd6 <__stack+0x377>
 bc8:	b6 01       	movw	r22, r12
 bca:	80 e3       	ldi	r24, 0x30	; 48
 bcc:	90 e0       	ldi	r25, 0x00	; 0
 bce:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 bd2:	9a 94       	dec	r9
 bd4:	f7 cf       	rjmp	.-18     	; 0xbc4 <__stack+0x365>
 bd6:	8a 94       	dec	r8
 bd8:	f3 01       	movw	r30, r6
 bda:	e8 0d       	add	r30, r8
 bdc:	f1 1d       	adc	r31, r1
 bde:	80 81       	ld	r24, Z
 be0:	b6 01       	movw	r22, r12
 be2:	90 e0       	ldi	r25, 0x00	; 0
 be4:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 be8:	81 10       	cpse	r8, r1
 bea:	f5 cf       	rjmp	.-22     	; 0xbd6 <__stack+0x377>
 bec:	22 20       	and	r2, r2
 bee:	09 f4       	brne	.+2      	; 0xbf2 <__stack+0x393>
 bf0:	42 ce       	rjmp	.-892    	; 0x876 <__stack+0x17>
 bf2:	b6 01       	movw	r22, r12
 bf4:	80 e2       	ldi	r24, 0x20	; 32
 bf6:	90 e0       	ldi	r25, 0x00	; 0
 bf8:	0e 94 20 06 	call	0xc40	; 0xc40 <fputc>
 bfc:	2a 94       	dec	r2
 bfe:	f6 cf       	rjmp	.-20     	; 0xbec <__stack+0x38d>
 c00:	f6 01       	movw	r30, r12
 c02:	86 81       	ldd	r24, Z+6	; 0x06
 c04:	97 81       	ldd	r25, Z+7	; 0x07
 c06:	02 c0       	rjmp	.+4      	; 0xc0c <__stack+0x3ad>
 c08:	8f ef       	ldi	r24, 0xFF	; 255
 c0a:	9f ef       	ldi	r25, 0xFF	; 255
 c0c:	2b 96       	adiw	r28, 0x0b	; 11
 c0e:	e2 e1       	ldi	r30, 0x12	; 18
 c10:	0c 94 d6 06 	jmp	0xdac	; 0xdac <__epilogue_restores__>

00000c14 <strnlen_P>:
 c14:	fc 01       	movw	r30, r24
 c16:	05 90       	lpm	r0, Z+
 c18:	61 50       	subi	r22, 0x01	; 1
 c1a:	70 40       	sbci	r23, 0x00	; 0
 c1c:	01 10       	cpse	r0, r1
 c1e:	d8 f7       	brcc	.-10     	; 0xc16 <strnlen_P+0x2>
 c20:	80 95       	com	r24
 c22:	90 95       	com	r25
 c24:	8e 0f       	add	r24, r30
 c26:	9f 1f       	adc	r25, r31
 c28:	08 95       	ret

00000c2a <strnlen>:
 c2a:	fc 01       	movw	r30, r24
 c2c:	61 50       	subi	r22, 0x01	; 1
 c2e:	70 40       	sbci	r23, 0x00	; 0
 c30:	01 90       	ld	r0, Z+
 c32:	01 10       	cpse	r0, r1
 c34:	d8 f7       	brcc	.-10     	; 0xc2c <strnlen+0x2>
 c36:	80 95       	com	r24
 c38:	90 95       	com	r25
 c3a:	8e 0f       	add	r24, r30
 c3c:	9f 1f       	adc	r25, r31
 c3e:	08 95       	ret

00000c40 <fputc>:
 c40:	0f 93       	push	r16
 c42:	1f 93       	push	r17
 c44:	cf 93       	push	r28
 c46:	df 93       	push	r29
 c48:	fb 01       	movw	r30, r22
 c4a:	23 81       	ldd	r18, Z+3	; 0x03
 c4c:	21 fd       	sbrc	r18, 1
 c4e:	03 c0       	rjmp	.+6      	; 0xc56 <fputc+0x16>
 c50:	8f ef       	ldi	r24, 0xFF	; 255
 c52:	9f ef       	ldi	r25, 0xFF	; 255
 c54:	2c c0       	rjmp	.+88     	; 0xcae <fputc+0x6e>
 c56:	22 ff       	sbrs	r18, 2
 c58:	16 c0       	rjmp	.+44     	; 0xc86 <fputc+0x46>
 c5a:	46 81       	ldd	r20, Z+6	; 0x06
 c5c:	57 81       	ldd	r21, Z+7	; 0x07
 c5e:	24 81       	ldd	r18, Z+4	; 0x04
 c60:	35 81       	ldd	r19, Z+5	; 0x05
 c62:	42 17       	cp	r20, r18
 c64:	53 07       	cpc	r21, r19
 c66:	44 f4       	brge	.+16     	; 0xc78 <fputc+0x38>
 c68:	a0 81       	ld	r26, Z
 c6a:	b1 81       	ldd	r27, Z+1	; 0x01
 c6c:	9d 01       	movw	r18, r26
 c6e:	2f 5f       	subi	r18, 0xFF	; 255
 c70:	3f 4f       	sbci	r19, 0xFF	; 255
 c72:	31 83       	std	Z+1, r19	; 0x01
 c74:	20 83       	st	Z, r18
 c76:	8c 93       	st	X, r24
 c78:	26 81       	ldd	r18, Z+6	; 0x06
 c7a:	37 81       	ldd	r19, Z+7	; 0x07
 c7c:	2f 5f       	subi	r18, 0xFF	; 255
 c7e:	3f 4f       	sbci	r19, 0xFF	; 255
 c80:	37 83       	std	Z+7, r19	; 0x07
 c82:	26 83       	std	Z+6, r18	; 0x06
 c84:	14 c0       	rjmp	.+40     	; 0xcae <fputc+0x6e>
 c86:	8b 01       	movw	r16, r22
 c88:	ec 01       	movw	r28, r24
 c8a:	fb 01       	movw	r30, r22
 c8c:	00 84       	ldd	r0, Z+8	; 0x08
 c8e:	f1 85       	ldd	r31, Z+9	; 0x09
 c90:	e0 2d       	mov	r30, r0
 c92:	09 95       	icall
 c94:	89 2b       	or	r24, r25
 c96:	e1 f6       	brne	.-72     	; 0xc50 <fputc+0x10>
 c98:	d8 01       	movw	r26, r16
 c9a:	16 96       	adiw	r26, 0x06	; 6
 c9c:	8d 91       	ld	r24, X+
 c9e:	9c 91       	ld	r25, X
 ca0:	17 97       	sbiw	r26, 0x07	; 7
 ca2:	01 96       	adiw	r24, 0x01	; 1
 ca4:	17 96       	adiw	r26, 0x07	; 7
 ca6:	9c 93       	st	X, r25
 ca8:	8e 93       	st	-X, r24
 caa:	16 97       	sbiw	r26, 0x06	; 6
 cac:	ce 01       	movw	r24, r28
 cae:	df 91       	pop	r29
 cb0:	cf 91       	pop	r28
 cb2:	1f 91       	pop	r17
 cb4:	0f 91       	pop	r16
 cb6:	08 95       	ret

00000cb8 <__ultoa_invert>:
 cb8:	fa 01       	movw	r30, r20
 cba:	aa 27       	eor	r26, r26
 cbc:	28 30       	cpi	r18, 0x08	; 8
 cbe:	51 f1       	breq	.+84     	; 0xd14 <__ultoa_invert+0x5c>
 cc0:	20 31       	cpi	r18, 0x10	; 16
 cc2:	81 f1       	breq	.+96     	; 0xd24 <__ultoa_invert+0x6c>
 cc4:	e8 94       	clt
 cc6:	6f 93       	push	r22
 cc8:	6e 7f       	andi	r22, 0xFE	; 254
 cca:	6e 5f       	subi	r22, 0xFE	; 254
 ccc:	7f 4f       	sbci	r23, 0xFF	; 255
 cce:	8f 4f       	sbci	r24, 0xFF	; 255
 cd0:	9f 4f       	sbci	r25, 0xFF	; 255
 cd2:	af 4f       	sbci	r26, 0xFF	; 255
 cd4:	b1 e0       	ldi	r27, 0x01	; 1
 cd6:	3e d0       	rcall	.+124    	; 0xd54 <__ultoa_invert+0x9c>
 cd8:	b4 e0       	ldi	r27, 0x04	; 4
 cda:	3c d0       	rcall	.+120    	; 0xd54 <__ultoa_invert+0x9c>
 cdc:	67 0f       	add	r22, r23
 cde:	78 1f       	adc	r23, r24
 ce0:	89 1f       	adc	r24, r25
 ce2:	9a 1f       	adc	r25, r26
 ce4:	a1 1d       	adc	r26, r1
 ce6:	68 0f       	add	r22, r24
 ce8:	79 1f       	adc	r23, r25
 cea:	8a 1f       	adc	r24, r26
 cec:	91 1d       	adc	r25, r1
 cee:	a1 1d       	adc	r26, r1
 cf0:	6a 0f       	add	r22, r26
 cf2:	71 1d       	adc	r23, r1
 cf4:	81 1d       	adc	r24, r1
 cf6:	91 1d       	adc	r25, r1
 cf8:	a1 1d       	adc	r26, r1
 cfa:	20 d0       	rcall	.+64     	; 0xd3c <__ultoa_invert+0x84>
 cfc:	09 f4       	brne	.+2      	; 0xd00 <__ultoa_invert+0x48>
 cfe:	68 94       	set
 d00:	3f 91       	pop	r19
 d02:	2a e0       	ldi	r18, 0x0A	; 10
 d04:	26 9f       	mul	r18, r22
 d06:	11 24       	eor	r1, r1
 d08:	30 19       	sub	r19, r0
 d0a:	30 5d       	subi	r19, 0xD0	; 208
 d0c:	31 93       	st	Z+, r19
 d0e:	de f6       	brtc	.-74     	; 0xcc6 <__ultoa_invert+0xe>
 d10:	cf 01       	movw	r24, r30
 d12:	08 95       	ret
 d14:	46 2f       	mov	r20, r22
 d16:	47 70       	andi	r20, 0x07	; 7
 d18:	40 5d       	subi	r20, 0xD0	; 208
 d1a:	41 93       	st	Z+, r20
 d1c:	b3 e0       	ldi	r27, 0x03	; 3
 d1e:	0f d0       	rcall	.+30     	; 0xd3e <__ultoa_invert+0x86>
 d20:	c9 f7       	brne	.-14     	; 0xd14 <__ultoa_invert+0x5c>
 d22:	f6 cf       	rjmp	.-20     	; 0xd10 <__ultoa_invert+0x58>
 d24:	46 2f       	mov	r20, r22
 d26:	4f 70       	andi	r20, 0x0F	; 15
 d28:	40 5d       	subi	r20, 0xD0	; 208
 d2a:	4a 33       	cpi	r20, 0x3A	; 58
 d2c:	18 f0       	brcs	.+6      	; 0xd34 <__ultoa_invert+0x7c>
 d2e:	49 5d       	subi	r20, 0xD9	; 217
 d30:	31 fd       	sbrc	r19, 1
 d32:	40 52       	subi	r20, 0x20	; 32
 d34:	41 93       	st	Z+, r20
 d36:	02 d0       	rcall	.+4      	; 0xd3c <__ultoa_invert+0x84>
 d38:	a9 f7       	brne	.-22     	; 0xd24 <__ultoa_invert+0x6c>
 d3a:	ea cf       	rjmp	.-44     	; 0xd10 <__ultoa_invert+0x58>
 d3c:	b4 e0       	ldi	r27, 0x04	; 4
 d3e:	a6 95       	lsr	r26
 d40:	97 95       	ror	r25
 d42:	87 95       	ror	r24
 d44:	77 95       	ror	r23
 d46:	67 95       	ror	r22
 d48:	ba 95       	dec	r27
 d4a:	c9 f7       	brne	.-14     	; 0xd3e <__ultoa_invert+0x86>
 d4c:	00 97       	sbiw	r24, 0x00	; 0
 d4e:	61 05       	cpc	r22, r1
 d50:	71 05       	cpc	r23, r1
 d52:	08 95       	ret
 d54:	9b 01       	movw	r18, r22
 d56:	ac 01       	movw	r20, r24
 d58:	0a 2e       	mov	r0, r26
 d5a:	06 94       	lsr	r0
 d5c:	57 95       	ror	r21
 d5e:	47 95       	ror	r20
 d60:	37 95       	ror	r19
 d62:	27 95       	ror	r18
 d64:	ba 95       	dec	r27
 d66:	c9 f7       	brne	.-14     	; 0xd5a <__ultoa_invert+0xa2>
 d68:	62 0f       	add	r22, r18
 d6a:	73 1f       	adc	r23, r19
 d6c:	84 1f       	adc	r24, r20
 d6e:	95 1f       	adc	r25, r21
 d70:	a0 1d       	adc	r26, r0
 d72:	08 95       	ret

00000d74 <__prologue_saves__>:
 d74:	2f 92       	push	r2
 d76:	3f 92       	push	r3
 d78:	4f 92       	push	r4
 d7a:	5f 92       	push	r5
 d7c:	6f 92       	push	r6
 d7e:	7f 92       	push	r7
 d80:	8f 92       	push	r8
 d82:	9f 92       	push	r9
 d84:	af 92       	push	r10
 d86:	bf 92       	push	r11
 d88:	cf 92       	push	r12
 d8a:	df 92       	push	r13
 d8c:	ef 92       	push	r14
 d8e:	ff 92       	push	r15
 d90:	0f 93       	push	r16
 d92:	1f 93       	push	r17
 d94:	cf 93       	push	r28
 d96:	df 93       	push	r29
 d98:	cd b7       	in	r28, 0x3d	; 61
 d9a:	de b7       	in	r29, 0x3e	; 62
 d9c:	ca 1b       	sub	r28, r26
 d9e:	db 0b       	sbc	r29, r27
 da0:	0f b6       	in	r0, 0x3f	; 63
 da2:	f8 94       	cli
 da4:	de bf       	out	0x3e, r29	; 62
 da6:	0f be       	out	0x3f, r0	; 63
 da8:	cd bf       	out	0x3d, r28	; 61
 daa:	09 94       	ijmp

00000dac <__epilogue_restores__>:
 dac:	2a 88       	ldd	r2, Y+18	; 0x12
 dae:	39 88       	ldd	r3, Y+17	; 0x11
 db0:	48 88       	ldd	r4, Y+16	; 0x10
 db2:	5f 84       	ldd	r5, Y+15	; 0x0f
 db4:	6e 84       	ldd	r6, Y+14	; 0x0e
 db6:	7d 84       	ldd	r7, Y+13	; 0x0d
 db8:	8c 84       	ldd	r8, Y+12	; 0x0c
 dba:	9b 84       	ldd	r9, Y+11	; 0x0b
 dbc:	aa 84       	ldd	r10, Y+10	; 0x0a
 dbe:	b9 84       	ldd	r11, Y+9	; 0x09
 dc0:	c8 84       	ldd	r12, Y+8	; 0x08
 dc2:	df 80       	ldd	r13, Y+7	; 0x07
 dc4:	ee 80       	ldd	r14, Y+6	; 0x06
 dc6:	fd 80       	ldd	r15, Y+5	; 0x05
 dc8:	0c 81       	ldd	r16, Y+4	; 0x04
 dca:	1b 81       	ldd	r17, Y+3	; 0x03
 dcc:	aa 81       	ldd	r26, Y+2	; 0x02
 dce:	b9 81       	ldd	r27, Y+1	; 0x01
 dd0:	ce 0f       	add	r28, r30
 dd2:	d1 1d       	adc	r29, r1
 dd4:	0f b6       	in	r0, 0x3f	; 63
 dd6:	f8 94       	cli
 dd8:	de bf       	out	0x3e, r29	; 62
 dda:	0f be       	out	0x3f, r0	; 63
 ddc:	cd bf       	out	0x3d, r28	; 61
 dde:	ed 01       	movw	r28, r26
 de0:	08 95       	ret

00000de2 <_exit>:
 de2:	f8 94       	cli

00000de4 <__stop_program>:
 de4:	ff cf       	rjmp	.-2      	; 0xde4 <__stop_program>
