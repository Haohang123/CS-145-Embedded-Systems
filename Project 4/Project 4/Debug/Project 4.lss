
Project 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000013dc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00800060  000013dc  00001470  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008000ee  008000ee  000014fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000155c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001598  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000102e  00000000  00000000  00001678  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ec  00000000  00000000  000026a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000875  00000000  00000000  00002f92  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00003808  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000053d  00000000  00000000  00003a28  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000085b  00000000  00000000  00003f65  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000047c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec ed       	ldi	r30, 0xDC	; 220
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	ae 3e       	cpi	r26, 0xEE	; 238
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	ae ee       	ldi	r26, 0xEE	; 238
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	aa 3f       	cpi	r26, 0xFA	; 250
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 37 03 	call	0x66e	; 0x66e <main>
      8a:	0c 94 ec 09 	jmp	0x13d8	; 0x13d8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <avr_init>:
#include "avr.h"

void
avr_init(void)
{
	WDTCR = 15;
      92:	8f e0       	ldi	r24, 0x0F	; 15
      94:	81 bd       	out	0x21, r24	; 33
      96:	08 95       	ret

00000098 <avr_wait>:
}

void
avr_wait(unsigned short subsec)
{
      98:	9c 01       	movw	r18, r24
	TCCR0 = 3;
      9a:	83 e0       	ldi	r24, 0x03	; 3
      9c:	83 bf       	out	0x33, r24	; 51
	while (subsec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
      9e:	88 eb       	ldi	r24, 0xB8	; 184

void
avr_wait(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      a0:	08 c0       	rjmp	.+16     	; 0xb2 <avr_wait+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
      a2:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      a4:	98 b7       	in	r25, 0x38	; 56
      a6:	91 60       	ori	r25, 0x01	; 1
      a8:	98 bf       	out	0x38, r25	; 56
		WDR();
      aa:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
      ac:	08 b6       	in	r0, 0x38	; 56
      ae:	00 fe       	sbrs	r0, 0
      b0:	fd cf       	rjmp	.-6      	; 0xac <avr_wait+0x14>

void
avr_wait(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      b2:	21 50       	subi	r18, 0x01	; 1
      b4:	31 09       	sbc	r19, r1
      b6:	a8 f7       	brcc	.-22     	; 0xa2 <avr_wait+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      b8:	13 be       	out	0x33, r1	; 51
      ba:	08 95       	ret

000000bc <avr_wait2>:
}

void
avr_wait2(unsigned short subsec)
{
      bc:	9c 01       	movw	r18, r24
	TCCR0 = 3;
      be:	83 e0       	ldi	r24, 0x03	; 3
      c0:	83 bf       	out	0x33, r24	; 51
	while (subsec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
      c2:	89 ef       	ldi	r24, 0xF9	; 249

void
avr_wait2(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      c4:	08 c0       	rjmp	.+16     	; 0xd6 <avr_wait2+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
      c6:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      c8:	98 b7       	in	r25, 0x38	; 56
      ca:	91 60       	ori	r25, 0x01	; 1
      cc:	98 bf       	out	0x38, r25	; 56
		WDR();
      ce:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
      d0:	08 b6       	in	r0, 0x38	; 56
      d2:	00 fe       	sbrs	r0, 0
      d4:	fd cf       	rjmp	.-6      	; 0xd0 <avr_wait2+0x14>

void
avr_wait2(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      d6:	21 50       	subi	r18, 0x01	; 1
      d8:	31 09       	sbc	r19, r1
      da:	a8 f7       	brcc	.-22     	; 0xc6 <avr_wait2+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      dc:	13 be       	out	0x33, r1	; 51
      de:	08 95       	ret

000000e0 <output>:
{
	char c;
	while ((c = pgm_read_byte(s++)) != 0) {
		write(c, 1);
	}
}
      e0:	66 23       	and	r22, r22
      e2:	11 f0       	breq	.+4      	; 0xe8 <output+0x8>
      e4:	c0 9a       	sbi	0x18, 0	; 24
      e6:	01 c0       	rjmp	.+2      	; 0xea <output+0xa>
      e8:	c0 98       	cbi	0x18, 0	; 24
      ea:	c1 98       	cbi	0x18, 1	; 24
      ec:	82 bb       	out	0x12, r24	; 18
      ee:	8f ef       	ldi	r24, 0xFF	; 255
      f0:	81 bb       	out	0x11, r24	; 17
      f2:	c2 9a       	sbi	0x18, 2	; 24
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	00 00       	nop
      fa:	c2 98       	cbi	0x18, 2	; 24
      fc:	08 95       	ret

000000fe <write>:
      fe:	c0 98       	cbi	0x18, 0	; 24
     100:	c1 9a       	sbi	0x18, 1	; 24
     102:	11 ba       	out	0x11, r1	; 17
     104:	90 b3       	in	r25, 0x10	; 16
     106:	c2 9a       	sbi	0x18, 2	; 24
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	11 ba       	out	0x11, r1	; 17
     110:	90 b3       	in	r25, 0x10	; 16
     112:	c2 98       	cbi	0x18, 2	; 24
     114:	99 23       	and	r25, r25
     116:	9c f3       	brlt	.-26     	; 0xfe <write>
     118:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     11c:	08 95       	ret

0000011e <lcd_init>:
     11e:	b8 9a       	sbi	0x17, 0	; 23
     120:	b9 9a       	sbi	0x17, 1	; 23
     122:	ba 9a       	sbi	0x17, 2	; 23
     124:	80 e1       	ldi	r24, 0x10	; 16
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     12c:	60 e0       	ldi	r22, 0x00	; 0
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     134:	85 e0       	ldi	r24, 0x05	; 5
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     13c:	60 e0       	ldi	r22, 0x00	; 0
     13e:	80 e3       	ldi	r24, 0x30	; 48
     140:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     14c:	60 e0       	ldi	r22, 0x00	; 0
     14e:	8c e3       	ldi	r24, 0x3C	; 60
     150:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	8c e0       	ldi	r24, 0x0C	; 12
     158:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     15c:	60 e0       	ldi	r22, 0x00	; 0
     15e:	86 e0       	ldi	r24, 0x06	; 6
     160:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	81 e0       	ldi	r24, 0x01	; 1
     168:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     16c:	08 95       	ret

0000016e <lcd_clr>:
     16e:	60 e0       	ldi	r22, 0x00	; 0
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     176:	08 95       	ret

00000178 <lcd_pos>:
     178:	cf 93       	push	r28
     17a:	c6 2f       	mov	r28, r22
     17c:	98 e2       	ldi	r25, 0x28	; 40
     17e:	89 9f       	mul	r24, r25
     180:	c0 0d       	add	r28, r0
     182:	11 24       	eor	r1, r1
     184:	60 e0       	ldi	r22, 0x00	; 0
     186:	82 e0       	ldi	r24, 0x02	; 2
     188:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     18c:	cc 23       	and	r28, r28
     18e:	31 f0       	breq	.+12     	; 0x19c <lcd_pos+0x24>
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	84 e1       	ldi	r24, 0x14	; 20
     194:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     198:	c1 50       	subi	r28, 0x01	; 1
     19a:	d1 f7       	brne	.-12     	; 0x190 <lcd_pos+0x18>
     19c:	cf 91       	pop	r28
     19e:	08 95       	ret

000001a0 <lcd_puts2>:

void
lcd_puts2(const char *s)
{
     1a0:	cf 93       	push	r28
     1a2:	df 93       	push	r29
	char c;
	while ((c = *(s++)) != 0) {
     1a4:	ec 01       	movw	r28, r24
     1a6:	21 96       	adiw	r28, 0x01	; 1
     1a8:	fc 01       	movw	r30, r24
     1aa:	80 81       	ld	r24, Z
     1ac:	88 23       	and	r24, r24
     1ae:	31 f0       	breq	.+12     	; 0x1bc <lcd_puts2+0x1c>
		write(c, 1);
     1b0:	61 e0       	ldi	r22, 0x01	; 1
     1b2:	0e 94 7f 00 	call	0xfe	; 0xfe <write>

void
lcd_puts2(const char *s)
{
	char c;
	while ((c = *(s++)) != 0) {
     1b6:	89 91       	ld	r24, Y+
     1b8:	81 11       	cpse	r24, r1
     1ba:	fa cf       	rjmp	.-12     	; 0x1b0 <lcd_puts2+0x10>
		write(c, 1);
	}
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <is_pressed>:
	'4', '5', '6', 'B',
	'7', '8', '9', 'C',
	'*', '0', '#', 'D'
};

int is_pressed(int row, int col) {
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
	DDRC = 0;
     1c6:	14 ba       	out	0x14, r1	; 20
	PORTC = 0;
     1c8:	15 ba       	out	0x15, r1	; 21
	
	SET_BIT(DDRC, row);
     1ca:	44 b3       	in	r20, 0x14	; 20
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	f9 01       	movw	r30, r18
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <is_pressed+0x16>
     1d4:	ee 0f       	add	r30, r30
     1d6:	ff 1f       	adc	r31, r31
     1d8:	8a 95       	dec	r24
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <is_pressed+0x12>
     1dc:	cf 01       	movw	r24, r30
     1de:	84 2b       	or	r24, r20
     1e0:	84 bb       	out	0x14, r24	; 20
	SET_BIT(PORTC, col + 4);
     1e2:	85 b3       	in	r24, 0x15	; 21
     1e4:	eb 01       	movw	r28, r22
     1e6:	24 96       	adiw	r28, 0x04	; 4
     1e8:	0c 2e       	mov	r0, r28
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <is_pressed+0x2e>
     1ec:	22 0f       	add	r18, r18
     1ee:	33 1f       	adc	r19, r19
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <is_pressed+0x2a>
     1f4:	28 2b       	or	r18, r24
     1f6:	25 bb       	out	0x15, r18	; 21
	avr_wait(1);
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
	
	if (GET_BIT(PINC,col + 4)) {
     200:	23 b3       	in	r18, 0x13	; 19
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	02 c0       	rjmp	.+4      	; 0x20a <is_pressed+0x48>
     206:	35 95       	asr	r19
     208:	27 95       	ror	r18
     20a:	ca 95       	dec	r28
     20c:	e2 f7       	brpl	.-8      	; 0x206 <is_pressed+0x44>
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	20 ff       	sbrs	r18, 0
     214:	02 c0       	rjmp	.+4      	; 0x21a <is_pressed+0x58>
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
		return 0;
	}
	
	return 1;
}
     21a:	df 91       	pop	r29
     21c:	cf 91       	pop	r28
     21e:	08 95       	ret

00000220 <get_key>:

int get_key() {
     220:	0f 93       	push	r16
     222:	1f 93       	push	r17
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
	int row, col;
	for (row = 0; row < 4; ++row) {
     228:	00 e0       	ldi	r16, 0x00	; 0
     22a:	10 e0       	ldi	r17, 0x00	; 0
     22c:	18 c0       	rjmp	.+48     	; 0x25e <get_key+0x3e>
		for (col = 0; col < 4; ++col) {
			if (is_pressed(row,col)) {
     22e:	be 01       	movw	r22, r28
     230:	c8 01       	movw	r24, r16
     232:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <is_pressed>
     236:	00 97       	sbiw	r24, 0x00	; 0
     238:	49 f0       	breq	.+18     	; 0x24c <get_key+0x2c>
				return (row * 4) + col + 1;
     23a:	00 0f       	add	r16, r16
     23c:	11 1f       	adc	r17, r17
     23e:	00 0f       	add	r16, r16
     240:	11 1f       	adc	r17, r17
     242:	c0 0f       	add	r28, r16
     244:	d1 1f       	adc	r29, r17
     246:	ce 01       	movw	r24, r28
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	0c c0       	rjmp	.+24     	; 0x264 <get_key+0x44>
}

int get_key() {
	int row, col;
	for (row = 0; row < 4; ++row) {
		for (col = 0; col < 4; ++col) {
     24c:	21 96       	adiw	r28, 0x01	; 1
     24e:	c4 30       	cpi	r28, 0x04	; 4
     250:	d1 05       	cpc	r29, r1
     252:	69 f7       	brne	.-38     	; 0x22e <get_key+0xe>
	return 1;
}

int get_key() {
	int row, col;
	for (row = 0; row < 4; ++row) {
     254:	0f 5f       	subi	r16, 0xFF	; 255
     256:	1f 4f       	sbci	r17, 0xFF	; 255
     258:	04 30       	cpi	r16, 0x04	; 4
     25a:	11 05       	cpc	r17, r1
     25c:	19 f0       	breq	.+6      	; 0x264 <get_key+0x44>
	}
	
	return 1;
}

int get_key() {
     25e:	c0 e0       	ldi	r28, 0x00	; 0
     260:	d0 e0       	ldi	r29, 0x00	; 0
     262:	e5 cf       	rjmp	.-54     	; 0x22e <get_key+0xe>
				return (row * 4) + col + 1;
			}
		}
	}
	return 0;
}
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	1f 91       	pop	r17
     26a:	0f 91       	pop	r16
     26c:	08 95       	ret

0000026e <play_note>:

void play_note(int frequency,int duration) {
     26e:	cf 92       	push	r12
     270:	df 92       	push	r13
     272:	ef 92       	push	r14
     274:	ff 92       	push	r15
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	eb 01       	movw	r28, r22
	float TH_TL_MODIFIER = 1.0;
	int total_time = ceil((20000.0 / frequency));
     280:	bc 01       	movw	r22, r24
     282:	99 0f       	add	r25, r25
     284:	88 0b       	sbc	r24, r24
     286:	99 0b       	sbc	r25, r25
     288:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	70 e4       	ldi	r23, 0x40	; 64
     294:	8c e9       	ldi	r24, 0x9C	; 156
     296:	96 e4       	ldi	r25, 0x46	; 70
     298:	0e 94 8c 04 	call	0x918	; 0x918 <__divsf3>
     29c:	0e 94 70 04 	call	0x8e0	; 0x8e0 <ceil>
     2a0:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     2a4:	9b 01       	movw	r18, r22
	int TH = total_time/2 * TH_TL_MODIFIER;
     2a6:	8b 01       	movw	r16, r22
     2a8:	77 23       	and	r23, r23
     2aa:	14 f4       	brge	.+4      	; 0x2b0 <play_note+0x42>
     2ac:	0f 5f       	subi	r16, 0xFF	; 255
     2ae:	1f 4f       	sbci	r17, 0xFF	; 255
     2b0:	15 95       	asr	r17
     2b2:	07 95       	ror	r16
	
	if(TH== total_time) {
     2b4:	20 17       	cp	r18, r16
     2b6:	31 07       	cpc	r19, r17
     2b8:	19 f4       	brne	.+6      	; 0x2c0 <play_note+0x52>
		TH--;
     2ba:	8b 01       	movw	r16, r22
     2bc:	01 50       	subi	r16, 0x01	; 1
     2be:	11 09       	sbc	r17, r1
	}
	int TL= total_time-TH;
     2c0:	6b 01       	movw	r12, r22
     2c2:	c0 1a       	sub	r12, r16
     2c4:	d1 0a       	sbc	r13, r17
	
	int duration_runs = duration*85 / total_time;
     2c6:	45 e5       	ldi	r20, 0x55	; 85
     2c8:	4c 9f       	mul	r20, r28
     2ca:	c0 01       	movw	r24, r0
     2cc:	4d 9f       	mul	r20, r29
     2ce:	90 0d       	add	r25, r0
     2d0:	11 24       	eor	r1, r1
     2d2:	b9 01       	movw	r22, r18
     2d4:	0e 94 99 06 	call	0xd32	; 0xd32 <__divmodhi4>
     2d8:	7b 01       	movw	r14, r22
	for (int i = 0; i < duration_runs; ++i) {
     2da:	16 16       	cp	r1, r22
     2dc:	17 06       	cpc	r1, r23
     2de:	74 f4       	brge	.+28     	; 0x2fc <play_note+0x8e>
     2e0:	c0 e0       	ldi	r28, 0x00	; 0
     2e2:	d0 e0       	ldi	r29, 0x00	; 0
		SET_BIT(PORTB,3);
     2e4:	c3 9a       	sbi	0x18, 3	; 24
		avr_wait2(TH);
     2e6:	c8 01       	movw	r24, r16
     2e8:	0e 94 5e 00 	call	0xbc	; 0xbc <avr_wait2>
		CLR_BIT(PORTB,3);
     2ec:	c3 98       	cbi	0x18, 3	; 24
		avr_wait2(TL);
     2ee:	c6 01       	movw	r24, r12
     2f0:	0e 94 5e 00 	call	0xbc	; 0xbc <avr_wait2>
		TH--;
	}
	int TL= total_time-TH;
	
	int duration_runs = duration*85 / total_time;
	for (int i = 0; i < duration_runs; ++i) {
     2f4:	21 96       	adiw	r28, 0x01	; 1
     2f6:	ec 16       	cp	r14, r28
     2f8:	fd 06       	cpc	r15, r29
     2fa:	a1 f7       	brne	.-24     	; 0x2e4 <play_note+0x76>
		SET_BIT(PORTB,3);
		avr_wait2(TH);
		CLR_BIT(PORTB,3);
		avr_wait2(TL);
	}
}
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	1f 91       	pop	r17
     302:	0f 91       	pop	r16
     304:	ff 90       	pop	r15
     306:	ef 90       	pop	r14
     308:	df 90       	pop	r13
     30a:	cf 90       	pop	r12
     30c:	08 95       	ret

0000030e <AD_init>:

void AD_init() {
	ADMUX=(1<<REFS0);
     30e:	80 e4       	ldi	r24, 0x40	; 64
     310:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     312:	87 e0       	ldi	r24, 0x07	; 7
     314:	86 b9       	out	0x06, r24	; 6
	ADMUX |= 0;
     316:	87 b1       	in	r24, 0x07	; 7
     318:	87 b9       	out	0x07, r24	; 7
     31a:	08 95       	ret

0000031c <get_AD>:
}

unsigned int get_AD() {
	unsigned x;
	ADCSRA |= (1<<ADSC) | (1<<ADEN);
     31c:	86 b1       	in	r24, 0x06	; 6
     31e:	80 6c       	ori	r24, 0xC0	; 192
     320:	86 b9       	out	0x06, r24	; 6
	while(! (ADCSRA & (1<<ADIF) ));
     322:	34 9b       	sbis	0x06, 4	; 6
     324:	fe cf       	rjmp	.-4      	; 0x322 <get_AD+0x6>
	ADCSRA |= (1<<ADIF) | (0<<ADEN);
     326:	34 9a       	sbi	0x06, 4	; 6
	x = ADC;
     328:	84 b1       	in	r24, 0x04	; 4
     32a:	95 b1       	in	r25, 0x05	; 5
	return (x);
}
     32c:	08 95       	ret

0000032e <reset>:

void reset() {
	STATE = 0;
     32e:	10 92 f9 00 	sts	0x00F9, r1	; 0x8000f9 <STATE+0x1>
     332:	10 92 f8 00 	sts	0x00F8, r1	; 0x8000f8 <STATE>
	HIGH = 0;
     336:	10 92 f7 00 	sts	0x00F7, r1	; 0x8000f7 <HIGH+0x1>
     33a:	10 92 f6 00 	sts	0x00F6, r1	; 0x8000f6 <HIGH>
	LOW = 1024;
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	94 e0       	ldi	r25, 0x04	; 4
     342:	90 93 a0 00 	sts	0x00A0, r25	; 0x8000a0 <LOW+0x1>
     346:	80 93 9f 00 	sts	0x009F, r24	; 0x80009f <LOW>
	TOTAL_IV = 0;
     34a:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <TOTAL_IV>
     34e:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <TOTAL_IV+0x1>
     352:	10 92 f4 00 	sts	0x00F4, r1	; 0x8000f4 <TOTAL_IV+0x2>
     356:	10 92 f5 00 	sts	0x00F5, r1	; 0x8000f5 <TOTAL_IV+0x3>
	CURRENT_IV = 0;
     35a:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <CURRENT_IV+0x1>
     35e:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <CURRENT_IV>
	TOTAL_SAMPLES = 0;
     362:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <__data_end+0x1>
     366:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <__data_end>
     36a:	08 95       	ret

0000036c <print_lcd>:
}

void print_lcd() {
     36c:	4f 92       	push	r4
     36e:	5f 92       	push	r5
     370:	6f 92       	push	r6
     372:	7f 92       	push	r7
     374:	8f 92       	push	r8
     376:	9f 92       	push	r9
     378:	af 92       	push	r10
     37a:	bf 92       	push	r11
     37c:	cf 92       	push	r12
     37e:	df 92       	push	r13
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
     38c:	ac 97       	sbiw	r28, 0x2c	; 44
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
	char buf1[16]; char buf2[16];
	
	if (STATE == 0) {
     398:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <STATE>
     39c:	90 91 f9 00 	lds	r25, 0x00F9	; 0x8000f9 <STATE+0x1>
     3a0:	00 97       	sbiw	r24, 0x00	; 0
     3a2:	99 f4       	brne	.+38     	; 0x3ca <print_lcd+0x5e>
			sprintf(buf1, "IV:---- AV:----");
     3a4:	80 e1       	ldi	r24, 0x10	; 16
     3a6:	ed ec       	ldi	r30, 0xCD	; 205
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	de 01       	movw	r26, r28
     3ac:	11 96       	adiw	r26, 0x01	; 1
     3ae:	01 90       	ld	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	8a 95       	dec	r24
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <print_lcd+0x42>
			sprintf(buf2, "HI:---- LO:----");
     3b6:	80 e1       	ldi	r24, 0x10	; 16
     3b8:	ed ed       	ldi	r30, 0xDD	; 221
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	de 01       	movw	r26, r28
     3be:	51 96       	adiw	r26, 0x11	; 17
     3c0:	01 90       	ld	r0, Z+
     3c2:	0d 92       	st	X+, r0
     3c4:	8a 95       	dec	r24
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <print_lcd+0x54>
     3c8:	2f c1       	rjmp	.+606    	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
	}
	else {
		int modifier = 1;
		float total_sum = 0;
		if (STATE == 0 || STATE == 1) {
     3ca:	02 97       	sbiw	r24, 0x02	; 2
     3cc:	59 f4       	brne	.+22     	; 0x3e4 <print_lcd+0x78>
			
		}
		else if (STATE == 2) {
			modifier = -2;
			total_sum = MAX_VOLTAGE;
     3ce:	80 90 93 00 	lds	r8, 0x0093	; 0x800093 <MAX_VOLTAGE>
     3d2:	90 90 94 00 	lds	r9, 0x0094	; 0x800094 <MAX_VOLTAGE+0x1>
     3d6:	a0 90 95 00 	lds	r10, 0x0095	; 0x800095 <MAX_VOLTAGE+0x2>
     3da:	b0 90 96 00 	lds	r11, 0x0096	; 0x800096 <MAX_VOLTAGE+0x3>
		float total_sum = 0;
		if (STATE == 0 || STATE == 1) {
			
		}
		else if (STATE == 2) {
			modifier = -2;
     3de:	6e ef       	ldi	r22, 0xFE	; 254
     3e0:	7f ef       	ldi	r23, 0xFF	; 255
     3e2:	05 c0       	rjmp	.+10     	; 0x3ee <print_lcd+0x82>
			sprintf(buf1, "IV:---- AV:----");
			sprintf(buf2, "HI:---- LO:----");
	}
	else {
		int modifier = 1;
		float total_sum = 0;
     3e4:	81 2c       	mov	r8, r1
     3e6:	91 2c       	mov	r9, r1
     3e8:	54 01       	movw	r10, r8
	if (STATE == 0) {
			sprintf(buf1, "IV:---- AV:----");
			sprintf(buf2, "HI:---- LO:----");
	}
	else {
		int modifier = 1;
     3ea:	61 e0       	ldi	r22, 0x01	; 1
     3ec:	70 e0       	ldi	r23, 0x00	; 0
		else if (STATE == 2) {
			modifier = -2;
			total_sum = MAX_VOLTAGE;
		} 
		
		float ratio = MAX_VOLTAGE / (MAX_BITS / modifier) ;
     3ee:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <MAX_BITS>
     3f2:	90 91 92 00 	lds	r25, 0x0092	; 0x800092 <MAX_BITS+0x1>
     3f6:	0e 94 99 06 	call	0xd32	; 0xd32 <__divmodhi4>
     3fa:	07 2e       	mov	r0, r23
     3fc:	00 0c       	add	r0, r0
     3fe:	88 0b       	sbc	r24, r24
     400:	99 0b       	sbc	r25, r25
     402:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     406:	9b 01       	movw	r18, r22
     408:	ac 01       	movw	r20, r24
     40a:	60 91 93 00 	lds	r22, 0x0093	; 0x800093 <MAX_VOLTAGE>
     40e:	70 91 94 00 	lds	r23, 0x0094	; 0x800094 <MAX_VOLTAGE+0x1>
     412:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <MAX_VOLTAGE+0x2>
     416:	90 91 96 00 	lds	r25, 0x0096	; 0x800096 <MAX_VOLTAGE+0x3>
     41a:	0e 94 8c 04 	call	0x918	; 0x918 <__divsf3>
     41e:	6b 01       	movw	r12, r22
     420:	7c 01       	movw	r14, r24
		float high_converted = (float)(HIGH * ratio) + total_sum;
     422:	60 91 f6 00 	lds	r22, 0x00F6	; 0x8000f6 <HIGH>
     426:	70 91 f7 00 	lds	r23, 0x00F7	; 0x8000f7 <HIGH+0x1>
     42a:	07 2e       	mov	r0, r23
     42c:	00 0c       	add	r0, r0
     42e:	88 0b       	sbc	r24, r24
     430:	99 0b       	sbc	r25, r25
     432:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     436:	a7 01       	movw	r20, r14
     438:	96 01       	movw	r18, r12
     43a:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     43e:	a5 01       	movw	r20, r10
     440:	94 01       	movw	r18, r8
     442:	0e 94 04 04 	call	0x808	; 0x808 <__addsf3>
     446:	69 a3       	std	Y+33, r22	; 0x21
     448:	7a a3       	std	Y+34, r23	; 0x22
     44a:	8b a3       	std	Y+35, r24	; 0x23
     44c:	9c a3       	std	Y+36, r25	; 0x24
		float low_converted = (float)(LOW * ratio) + total_sum;
     44e:	60 91 9f 00 	lds	r22, 0x009F	; 0x80009f <LOW>
     452:	70 91 a0 00 	lds	r23, 0x00A0	; 0x8000a0 <LOW+0x1>
     456:	07 2e       	mov	r0, r23
     458:	00 0c       	add	r0, r0
     45a:	88 0b       	sbc	r24, r24
     45c:	99 0b       	sbc	r25, r25
     45e:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     462:	a7 01       	movw	r20, r14
     464:	96 01       	movw	r18, r12
     466:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     46a:	a5 01       	movw	r20, r10
     46c:	94 01       	movw	r18, r8
     46e:	0e 94 04 04 	call	0x808	; 0x808 <__addsf3>
     472:	6d a3       	std	Y+37, r22	; 0x25
     474:	7e a3       	std	Y+38, r23	; 0x26
     476:	8f a3       	std	Y+39, r24	; 0x27
     478:	98 a7       	std	Y+40, r25	; 0x28
		float avg_converted = (float)(TOTAL_IV / TOTAL_SAMPLES * ratio) + total_sum;
     47a:	20 91 ee 00 	lds	r18, 0x00EE	; 0x8000ee <__data_end>
     47e:	30 91 ef 00 	lds	r19, 0x00EF	; 0x8000ef <__data_end+0x1>
     482:	03 2e       	mov	r0, r19
     484:	00 0c       	add	r0, r0
     486:	44 0b       	sbc	r20, r20
     488:	55 0b       	sbc	r21, r21
     48a:	60 91 f2 00 	lds	r22, 0x00F2	; 0x8000f2 <TOTAL_IV>
     48e:	70 91 f3 00 	lds	r23, 0x00F3	; 0x8000f3 <TOTAL_IV+0x1>
     492:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <TOTAL_IV+0x2>
     496:	90 91 f5 00 	lds	r25, 0x00F5	; 0x8000f5 <TOTAL_IV+0x3>
     49a:	0e 94 ad 06 	call	0xd5a	; 0xd5a <__divmodsi4>
     49e:	ca 01       	movw	r24, r20
     4a0:	b9 01       	movw	r22, r18
     4a2:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     4a6:	a7 01       	movw	r20, r14
     4a8:	96 01       	movw	r18, r12
     4aa:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     4ae:	a5 01       	movw	r20, r10
     4b0:	94 01       	movw	r18, r8
     4b2:	0e 94 04 04 	call	0x808	; 0x808 <__addsf3>
     4b6:	2b 01       	movw	r4, r22
     4b8:	3c 01       	movw	r6, r24
		float iv_converted = (float)(CURRENT_IV * ratio) + total_sum;
     4ba:	60 91 f0 00 	lds	r22, 0x00F0	; 0x8000f0 <CURRENT_IV>
     4be:	70 91 f1 00 	lds	r23, 0x00F1	; 0x8000f1 <CURRENT_IV+0x1>
     4c2:	07 2e       	mov	r0, r23
     4c4:	00 0c       	add	r0, r0
     4c6:	88 0b       	sbc	r24, r24
     4c8:	99 0b       	sbc	r25, r25
     4ca:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     4ce:	a7 01       	movw	r20, r14
     4d0:	96 01       	movw	r18, r12
     4d2:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     4d6:	a5 01       	movw	r20, r10
     4d8:	94 01       	movw	r18, r8
     4da:	0e 94 04 04 	call	0x808	; 0x808 <__addsf3>
     4de:	69 a7       	std	Y+41, r22	; 0x29
     4e0:	7a a7       	std	Y+42, r23	; 0x2a
     4e2:	8b a7       	std	Y+43, r24	; 0x2b
     4e4:	9c a7       	std	Y+44, r25	; 0x2c
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
     4e6:	c3 01       	movw	r24, r6
     4e8:	b2 01       	movw	r22, r4
     4ea:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     4ee:	4b 01       	movw	r8, r22
     4f0:	5c 01       	movw	r10, r24
		float high_converted = (float)(HIGH * ratio) + total_sum;
		float low_converted = (float)(LOW * ratio) + total_sum;
		float avg_converted = (float)(TOTAL_IV / TOTAL_SAMPLES * ratio) + total_sum;
		float iv_converted = (float)(CURRENT_IV * ratio) + total_sum;
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
     4f2:	69 a5       	ldd	r22, Y+41	; 0x29
     4f4:	7a a5       	ldd	r23, Y+42	; 0x2a
     4f6:	8b a5       	ldd	r24, Y+43	; 0x2b
     4f8:	9c a5       	ldd	r25, Y+44	; 0x2c
     4fa:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     4fe:	6b 01       	movw	r12, r22
     500:	7c 01       	movw	r14, r24
     502:	b4 01       	movw	r22, r8
     504:	09 2c       	mov	r0, r9
     506:	00 0c       	add	r0, r0
     508:	88 0b       	sbc	r24, r24
     50a:	99 0b       	sbc	r25, r25
     50c:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     510:	9b 01       	movw	r18, r22
     512:	ac 01       	movw	r20, r24
     514:	c3 01       	movw	r24, r6
     516:	b2 01       	movw	r22, r4
     518:	0e 94 03 04 	call	0x806	; 0x806 <__subsf3>
     51c:	20 e0       	ldi	r18, 0x00	; 0
     51e:	30 e0       	ldi	r19, 0x00	; 0
     520:	48 ec       	ldi	r20, 0xC8	; 200
     522:	52 e4       	ldi	r21, 0x42	; 66
     524:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     528:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     52c:	7f 93       	push	r23
     52e:	6f 93       	push	r22
     530:	9f 92       	push	r9
     532:	8f 92       	push	r8
     534:	b6 01       	movw	r22, r12
     536:	0d 2c       	mov	r0, r13
     538:	00 0c       	add	r0, r0
     53a:	88 0b       	sbc	r24, r24
     53c:	99 0b       	sbc	r25, r25
     53e:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     542:	9b 01       	movw	r18, r22
     544:	ac 01       	movw	r20, r24
     546:	69 a5       	ldd	r22, Y+41	; 0x29
     548:	7a a5       	ldd	r23, Y+42	; 0x2a
     54a:	8b a5       	ldd	r24, Y+43	; 0x2b
     54c:	9c a5       	ldd	r25, Y+44	; 0x2c
     54e:	0e 94 03 04 	call	0x806	; 0x806 <__subsf3>
     552:	20 e0       	ldi	r18, 0x00	; 0
     554:	30 e0       	ldi	r19, 0x00	; 0
     556:	48 ec       	ldi	r20, 0xC8	; 200
     558:	52 e4       	ldi	r21, 0x42	; 66
     55a:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     55e:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     562:	7f 93       	push	r23
     564:	6f 93       	push	r22
     566:	df 92       	push	r13
     568:	cf 92       	push	r12
     56a:	81 ea       	ldi	r24, 0xA1	; 161
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	9f 93       	push	r25
     570:	8f 93       	push	r24
     572:	ce 01       	movw	r24, r28
     574:	01 96       	adiw	r24, 0x01	; 1
     576:	9f 93       	push	r25
     578:	8f 93       	push	r24
     57a:	0e 94 02 07 	call	0xe04	; 0xe04 <sprintf>
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
										   
		sprintf(buf2, "HI:%d.%02d LO:%d.%02d", (int)(high_converted), (int)((high_converted - (int)(high_converted)) * 100), 
										   (int)(low_converted),  (int)((low_converted - (int)(low_converted)) * 100));
     57e:	6d a1       	ldd	r22, Y+37	; 0x25
     580:	7e a1       	ldd	r23, Y+38	; 0x26
     582:	8f a1       	ldd	r24, Y+39	; 0x27
     584:	98 a5       	ldd	r25, Y+40	; 0x28
     586:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     58a:	6b 01       	movw	r12, r22
     58c:	7c 01       	movw	r14, r24
		float iv_converted = (float)(CURRENT_IV * ratio) + total_sum;
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
										   
		sprintf(buf2, "HI:%d.%02d LO:%d.%02d", (int)(high_converted), (int)((high_converted - (int)(high_converted)) * 100), 
     58e:	69 a1       	ldd	r22, Y+33	; 0x21
     590:	7a a1       	ldd	r23, Y+34	; 0x22
     592:	8b a1       	ldd	r24, Y+35	; 0x23
     594:	9c a1       	ldd	r25, Y+36	; 0x24
     596:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     59a:	4b 01       	movw	r8, r22
     59c:	5c 01       	movw	r10, r24
     59e:	b6 01       	movw	r22, r12
     5a0:	0d 2c       	mov	r0, r13
     5a2:	00 0c       	add	r0, r0
     5a4:	88 0b       	sbc	r24, r24
     5a6:	99 0b       	sbc	r25, r25
     5a8:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     5ac:	9b 01       	movw	r18, r22
     5ae:	ac 01       	movw	r20, r24
     5b0:	6d a1       	ldd	r22, Y+37	; 0x25
     5b2:	7e a1       	ldd	r23, Y+38	; 0x26
     5b4:	8f a1       	ldd	r24, Y+39	; 0x27
     5b6:	98 a5       	ldd	r25, Y+40	; 0x28
     5b8:	0e 94 03 04 	call	0x806	; 0x806 <__subsf3>
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	48 ec       	ldi	r20, 0xC8	; 200
     5c2:	52 e4       	ldi	r21, 0x42	; 66
     5c4:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     5c8:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     5cc:	7f 93       	push	r23
     5ce:	6f 93       	push	r22
     5d0:	df 92       	push	r13
     5d2:	cf 92       	push	r12
     5d4:	b4 01       	movw	r22, r8
     5d6:	09 2c       	mov	r0, r9
     5d8:	00 0c       	add	r0, r0
     5da:	88 0b       	sbc	r24, r24
     5dc:	99 0b       	sbc	r25, r25
     5de:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     5e2:	9b 01       	movw	r18, r22
     5e4:	ac 01       	movw	r20, r24
     5e6:	69 a1       	ldd	r22, Y+33	; 0x21
     5e8:	7a a1       	ldd	r23, Y+34	; 0x22
     5ea:	8b a1       	ldd	r24, Y+35	; 0x23
     5ec:	9c a1       	ldd	r25, Y+36	; 0x24
     5ee:	0e 94 03 04 	call	0x806	; 0x806 <__subsf3>
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	48 ec       	ldi	r20, 0xC8	; 200
     5f8:	52 e4       	ldi	r21, 0x42	; 66
     5fa:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     5fe:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__fixsfsi>
     602:	7f 93       	push	r23
     604:	6f 93       	push	r22
     606:	9f 92       	push	r9
     608:	8f 92       	push	r8
     60a:	87 eb       	ldi	r24, 0xB7	; 183
     60c:	90 e0       	ldi	r25, 0x00	; 0
     60e:	9f 93       	push	r25
     610:	8f 93       	push	r24
     612:	ce 01       	movw	r24, r28
     614:	41 96       	adiw	r24, 0x11	; 17
     616:	9f 93       	push	r25
     618:	8f 93       	push	r24
     61a:	0e 94 02 07 	call	0xe04	; 0xe04 <sprintf>
     61e:	0f b6       	in	r0, 0x3f	; 63
     620:	f8 94       	cli
     622:	de bf       	out	0x3e, r29	; 62
     624:	0f be       	out	0x3f, r0	; 63
     626:	cd bf       	out	0x3d, r28	; 61
										   (int)(low_converted),  (int)((low_converted - (int)(low_converted)) * 100));
	}
	
	//(int)(1.55), (int)((1.55 - (int)(1.55)) * 100)
	
	lcd_clr();
     628:	0e 94 b7 00 	call	0x16e	; 0x16e <lcd_clr>
	lcd_puts2(buf1);
     62c:	ce 01       	movw	r24, r28
     62e:	01 96       	adiw	r24, 0x01	; 1
     630:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_puts2>
	lcd_pos(1,0);
     634:	60 e0       	ldi	r22, 0x00	; 0
     636:	81 e0       	ldi	r24, 0x01	; 1
     638:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_pos>
	lcd_puts2(buf2);
     63c:	ce 01       	movw	r24, r28
     63e:	41 96       	adiw	r24, 0x11	; 17
     640:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_puts2>
}
     644:	ac 96       	adiw	r28, 0x2c	; 44
     646:	0f b6       	in	r0, 0x3f	; 63
     648:	f8 94       	cli
     64a:	de bf       	out	0x3e, r29	; 62
     64c:	0f be       	out	0x3f, r0	; 63
     64e:	cd bf       	out	0x3d, r28	; 61
     650:	df 91       	pop	r29
     652:	cf 91       	pop	r28
     654:	ff 90       	pop	r15
     656:	ef 90       	pop	r14
     658:	df 90       	pop	r13
     65a:	cf 90       	pop	r12
     65c:	bf 90       	pop	r11
     65e:	af 90       	pop	r10
     660:	9f 90       	pop	r9
     662:	8f 90       	pop	r8
     664:	7f 90       	pop	r7
     666:	6f 90       	pop	r6
     668:	5f 90       	pop	r5
     66a:	4f 90       	pop	r4
     66c:	08 95       	ret

0000066e <main>:

int main(void)
{
	DDRB = 0x08;
     66e:	88 e0       	ldi	r24, 0x08	; 8
     670:	87 bb       	out	0x17, r24	; 23
	avr_init();
     672:	0e 94 49 00 	call	0x92	; 0x92 <avr_init>
	lcd_init();
     676:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_init>
	AD_init();
     67a:	0e 94 87 01 	call	0x30e	; 0x30e <AD_init>
			
			if (current_iv > MAX_THRESHOLD) {
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
			}
			else if (current_iv < MIN_THRESHOLD) {
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     67e:	0f 2e       	mov	r0, r31
     680:	f3 e7       	ldi	r31, 0x73	; 115
     682:	ef 2e       	mov	r14, r31
     684:	f0 e0       	ldi	r31, 0x00	; 0
     686:	ff 2e       	mov	r15, r31
     688:	f0 2d       	mov	r31, r0
     68a:	09 e7       	ldi	r16, 0x79	; 121
     68c:	10 e0       	ldi	r17, 0x00	; 0
			ADMUX |= 0x0;
			reset();
		}
		else if (keypad[key] == '3') { // 2 STATE INPUT
			ADMUX |= 0x10;
			STATE = 2;
     68e:	68 94       	set
     690:	cc 24       	eor	r12, r12
     692:	c1 f8       	bld	r12, 1
     694:	d1 2c       	mov	r13, r1
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1') { // START
			ADMUX |= 0x0;
			STATE = 1;
     696:	c1 e0       	ldi	r28, 0x01	; 1
     698:	d0 e0       	ldi	r29, 0x00	; 0
	lcd_init();
	AD_init();
	
    while (1) 
    {
		if (STATE) {
     69a:	80 91 f8 00 	lds	r24, 0x00F8	; 0x8000f8 <STATE>
     69e:	90 91 f9 00 	lds	r25, 0x00F9	; 0x8000f9 <STATE+0x1>
     6a2:	89 2b       	or	r24, r25
     6a4:	09 f4       	brne	.+2      	; 0x6a8 <main+0x3a>
     6a6:	89 c0       	rjmp	.+274    	; 0x7ba <main+0x14c>
			CURRENT_IV = get_AD();
     6a8:	0e 94 8e 01 	call	0x31c	; 0x31c <get_AD>
     6ac:	bc 01       	movw	r22, r24
     6ae:	90 93 f1 00 	sts	0x00F1, r25	; 0x8000f1 <CURRENT_IV+0x1>
     6b2:	80 93 f0 00 	sts	0x00F0, r24	; 0x8000f0 <CURRENT_IV>
			TOTAL_IV += CURRENT_IV;
     6b6:	09 2e       	mov	r0, r25
     6b8:	00 0c       	add	r0, r0
     6ba:	aa 0b       	sbc	r26, r26
     6bc:	bb 0b       	sbc	r27, r27
     6be:	80 90 f2 00 	lds	r8, 0x00F2	; 0x8000f2 <TOTAL_IV>
     6c2:	90 90 f3 00 	lds	r9, 0x00F3	; 0x8000f3 <TOTAL_IV+0x1>
     6c6:	a0 90 f4 00 	lds	r10, 0x00F4	; 0x8000f4 <TOTAL_IV+0x2>
     6ca:	b0 90 f5 00 	lds	r11, 0x00F5	; 0x8000f5 <TOTAL_IV+0x3>
     6ce:	88 0d       	add	r24, r8
     6d0:	99 1d       	adc	r25, r9
     6d2:	aa 1d       	adc	r26, r10
     6d4:	bb 1d       	adc	r27, r11
     6d6:	80 93 f2 00 	sts	0x00F2, r24	; 0x8000f2 <TOTAL_IV>
     6da:	90 93 f3 00 	sts	0x00F3, r25	; 0x8000f3 <TOTAL_IV+0x1>
     6de:	a0 93 f4 00 	sts	0x00F4, r26	; 0x8000f4 <TOTAL_IV+0x2>
     6e2:	b0 93 f5 00 	sts	0x00F5, r27	; 0x8000f5 <TOTAL_IV+0x3>
			
			if (CURRENT_IV > HIGH) {
     6e6:	80 91 f6 00 	lds	r24, 0x00F6	; 0x8000f6 <HIGH>
     6ea:	90 91 f7 00 	lds	r25, 0x00F7	; 0x8000f7 <HIGH+0x1>
     6ee:	86 17       	cp	r24, r22
     6f0:	97 07       	cpc	r25, r23
     6f2:	24 f4       	brge	.+8      	; 0x6fc <main+0x8e>
				HIGH = CURRENT_IV;
     6f4:	70 93 f7 00 	sts	0x00F7, r23	; 0x8000f7 <HIGH+0x1>
     6f8:	60 93 f6 00 	sts	0x00F6, r22	; 0x8000f6 <HIGH>
			}
			if (CURRENT_IV < LOW) {
     6fc:	80 91 9f 00 	lds	r24, 0x009F	; 0x80009f <LOW>
     700:	90 91 a0 00 	lds	r25, 0x00A0	; 0x8000a0 <LOW+0x1>
     704:	68 17       	cp	r22, r24
     706:	79 07       	cpc	r23, r25
     708:	24 f4       	brge	.+8      	; 0x712 <main+0xa4>
				LOW = CURRENT_IV;
     70a:	70 93 a0 00 	sts	0x00A0, r23	; 0x8000a0 <LOW+0x1>
     70e:	60 93 9f 00 	sts	0x009F, r22	; 0x80009f <LOW>
			}
			
			float current_iv = (float)(CURRENT_IV * 5.0/1024);
     712:	07 2e       	mov	r0, r23
     714:	00 0c       	add	r0, r0
     716:	88 0b       	sbc	r24, r24
     718:	99 0b       	sbc	r25, r25
     71a:	0e 94 36 05 	call	0xa6c	; 0xa6c <__floatsisf>
     71e:	20 e0       	ldi	r18, 0x00	; 0
     720:	30 e0       	ldi	r19, 0x00	; 0
     722:	40 ea       	ldi	r20, 0xA0	; 160
     724:	50 e4       	ldi	r21, 0x40	; 64
     726:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     72a:	20 e0       	ldi	r18, 0x00	; 0
     72c:	30 e0       	ldi	r19, 0x00	; 0
     72e:	40 e8       	ldi	r20, 0x80	; 128
     730:	5a e3       	ldi	r21, 0x3A	; 58
     732:	0e 94 2c 06 	call	0xc58	; 0xc58 <__mulsf3>
     736:	4b 01       	movw	r8, r22
     738:	5c 01       	movw	r10, r24
			
			if (current_iv > MAX_THRESHOLD) {
     73a:	20 91 9b 00 	lds	r18, 0x009B	; 0x80009b <MAX_THRESHOLD>
     73e:	30 91 9c 00 	lds	r19, 0x009C	; 0x80009c <MAX_THRESHOLD+0x1>
     742:	40 91 9d 00 	lds	r20, 0x009D	; 0x80009d <MAX_THRESHOLD+0x2>
     746:	50 91 9e 00 	lds	r21, 0x009E	; 0x80009e <MAX_THRESHOLD+0x3>
     74a:	0e 94 27 06 	call	0xc4e	; 0xc4e <__gesf2>
     74e:	18 16       	cp	r1, r24
     750:	7c f4       	brge	.+30     	; 0x770 <main+0x102>
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     752:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <DURATION>
     756:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <DURATION+0x1>
     75a:	f7 01       	movw	r30, r14
     75c:	62 81       	ldd	r22, Z+2	; 0x02
     75e:	73 81       	ldd	r23, Z+3	; 0x03
     760:	0e 94 99 06 	call	0xd32	; 0xd32 <__divmodhi4>
     764:	f8 01       	movw	r30, r16
     766:	86 85       	ldd	r24, Z+14	; 0x0e
     768:	97 85       	ldd	r25, Z+15	; 0x0f
     76a:	0e 94 37 01 	call	0x26e	; 0x26e <play_note>
     76e:	1c c0       	rjmp	.+56     	; 0x7a8 <main+0x13a>
			}
			else if (current_iv < MIN_THRESHOLD) {
     770:	20 91 97 00 	lds	r18, 0x0097	; 0x800097 <MIN_THRESHOLD>
     774:	30 91 98 00 	lds	r19, 0x0098	; 0x800098 <MIN_THRESHOLD+0x1>
     778:	40 91 99 00 	lds	r20, 0x0099	; 0x800099 <MIN_THRESHOLD+0x2>
     77c:	50 91 9a 00 	lds	r21, 0x009A	; 0x80009a <MIN_THRESHOLD+0x3>
     780:	c5 01       	movw	r24, r10
     782:	b4 01       	movw	r22, r8
     784:	0e 94 87 04 	call	0x90e	; 0x90e <__cmpsf2>
     788:	88 23       	and	r24, r24
     78a:	74 f4       	brge	.+28     	; 0x7a8 <main+0x13a>
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     78c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <DURATION>
     790:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <DURATION+0x1>
     794:	f7 01       	movw	r30, r14
     796:	62 81       	ldd	r22, Z+2	; 0x02
     798:	73 81       	ldd	r23, Z+3	; 0x03
     79a:	0e 94 99 06 	call	0xd32	; 0xd32 <__divmodhi4>
     79e:	f8 01       	movw	r30, r16
     7a0:	86 85       	ldd	r24, Z+14	; 0x0e
     7a2:	97 85       	ldd	r25, Z+15	; 0x0f
     7a4:	0e 94 37 01 	call	0x26e	; 0x26e <play_note>
			}
			
			TOTAL_SAMPLES ++;
     7a8:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <__data_end>
     7ac:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <__data_end+0x1>
     7b0:	01 96       	adiw	r24, 0x01	; 1
     7b2:	90 93 ef 00 	sts	0x00EF, r25	; 0x8000ef <__data_end+0x1>
     7b6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__data_end>
		}
		
		
		int key = get_key() - 1;
     7ba:	0e 94 10 01 	call	0x220	; 0x220 <get_key>
     7be:	01 97       	sbiw	r24, 0x01	; 1
     7c0:	d8 f0       	brcs	.+54     	; 0x7f8 <main+0x18a>
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1') { // START
     7c2:	fc 01       	movw	r30, r24
     7c4:	e0 5a       	subi	r30, 0xA0	; 160
     7c6:	ff 4f       	sbci	r31, 0xFF	; 255
     7c8:	80 81       	ld	r24, Z
     7ca:	81 33       	cpi	r24, 0x31	; 49
     7cc:	39 f4       	brne	.+14     	; 0x7dc <main+0x16e>
			ADMUX |= 0x0;
     7ce:	87 b1       	in	r24, 0x07	; 7
     7d0:	87 b9       	out	0x07, r24	; 7
			STATE = 1;
     7d2:	d0 93 f9 00 	sts	0x00F9, r29	; 0x8000f9 <STATE+0x1>
     7d6:	c0 93 f8 00 	sts	0x00F8, r28	; 0x8000f8 <STATE>
     7da:	0e c0       	rjmp	.+28     	; 0x7f8 <main+0x18a>
		}
		else if (keypad[key] == '2') { // RESET
     7dc:	82 33       	cpi	r24, 0x32	; 50
     7de:	29 f4       	brne	.+10     	; 0x7ea <main+0x17c>
			ADMUX |= 0x0;
     7e0:	87 b1       	in	r24, 0x07	; 7
     7e2:	87 b9       	out	0x07, r24	; 7
			reset();
     7e4:	0e 94 97 01 	call	0x32e	; 0x32e <reset>
     7e8:	07 c0       	rjmp	.+14     	; 0x7f8 <main+0x18a>
		}
		else if (keypad[key] == '3') { // 2 STATE INPUT
     7ea:	83 33       	cpi	r24, 0x33	; 51
     7ec:	29 f4       	brne	.+10     	; 0x7f8 <main+0x18a>
			ADMUX |= 0x10;
     7ee:	3c 9a       	sbi	0x07, 4	; 7
			STATE = 2;
     7f0:	d0 92 f9 00 	sts	0x00F9, r13	; 0x8000f9 <STATE+0x1>
     7f4:	c0 92 f8 00 	sts	0x00F8, r12	; 0x8000f8 <STATE>
		}
		
		print_lcd();
     7f8:	0e 94 b6 01 	call	0x36c	; 0x36c <print_lcd>
		avr_wait(500);
     7fc:	84 ef       	ldi	r24, 0xF4	; 244
     7fe:	91 e0       	ldi	r25, 0x01	; 1
     800:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
    }
     804:	4a cf       	rjmp	.-364    	; 0x69a <main+0x2c>

00000806 <__subsf3>:
     806:	50 58       	subi	r21, 0x80	; 128

00000808 <__addsf3>:
     808:	bb 27       	eor	r27, r27
     80a:	aa 27       	eor	r26, r26
     80c:	0e 94 1b 04 	call	0x836	; 0x836 <__addsf3x>
     810:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_round>
     814:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fp_pscA>
     818:	38 f0       	brcs	.+14     	; 0x828 <__addsf3+0x20>
     81a:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fp_pscB>
     81e:	20 f0       	brcs	.+8      	; 0x828 <__addsf3+0x20>
     820:	39 f4       	brne	.+14     	; 0x830 <__addsf3+0x28>
     822:	9f 3f       	cpi	r25, 0xFF	; 255
     824:	19 f4       	brne	.+6      	; 0x82c <__addsf3+0x24>
     826:	26 f4       	brtc	.+8      	; 0x830 <__addsf3+0x28>
     828:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__fp_nan>
     82c:	0e f4       	brtc	.+2      	; 0x830 <__addsf3+0x28>
     82e:	e0 95       	com	r30
     830:	e7 fb       	bst	r30, 7
     832:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__fp_inf>

00000836 <__addsf3x>:
     836:	e9 2f       	mov	r30, r25
     838:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fp_split3>
     83c:	58 f3       	brcs	.-42     	; 0x814 <__addsf3+0xc>
     83e:	ba 17       	cp	r27, r26
     840:	62 07       	cpc	r22, r18
     842:	73 07       	cpc	r23, r19
     844:	84 07       	cpc	r24, r20
     846:	95 07       	cpc	r25, r21
     848:	20 f0       	brcs	.+8      	; 0x852 <__addsf3x+0x1c>
     84a:	79 f4       	brne	.+30     	; 0x86a <__stack+0xb>
     84c:	a6 f5       	brtc	.+104    	; 0x8b6 <__stack+0x57>
     84e:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__fp_zero>
     852:	0e f4       	brtc	.+2      	; 0x856 <__addsf3x+0x20>
     854:	e0 95       	com	r30
     856:	0b 2e       	mov	r0, r27
     858:	ba 2f       	mov	r27, r26
     85a:	a0 2d       	mov	r26, r0
     85c:	0b 01       	movw	r0, r22
     85e:	b9 01       	movw	r22, r18
     860:	90 01       	movw	r18, r0
     862:	0c 01       	movw	r0, r24
     864:	ca 01       	movw	r24, r20
     866:	a0 01       	movw	r20, r0
     868:	11 24       	eor	r1, r1
     86a:	ff 27       	eor	r31, r31
     86c:	59 1b       	sub	r21, r25
     86e:	99 f0       	breq	.+38     	; 0x896 <__stack+0x37>
     870:	59 3f       	cpi	r21, 0xF9	; 249
     872:	50 f4       	brcc	.+20     	; 0x888 <__stack+0x29>
     874:	50 3e       	cpi	r21, 0xE0	; 224
     876:	68 f1       	brcs	.+90     	; 0x8d2 <__stack+0x73>
     878:	1a 16       	cp	r1, r26
     87a:	f0 40       	sbci	r31, 0x00	; 0
     87c:	a2 2f       	mov	r26, r18
     87e:	23 2f       	mov	r18, r19
     880:	34 2f       	mov	r19, r20
     882:	44 27       	eor	r20, r20
     884:	58 5f       	subi	r21, 0xF8	; 248
     886:	f3 cf       	rjmp	.-26     	; 0x86e <__stack+0xf>
     888:	46 95       	lsr	r20
     88a:	37 95       	ror	r19
     88c:	27 95       	ror	r18
     88e:	a7 95       	ror	r26
     890:	f0 40       	sbci	r31, 0x00	; 0
     892:	53 95       	inc	r21
     894:	c9 f7       	brne	.-14     	; 0x888 <__stack+0x29>
     896:	7e f4       	brtc	.+30     	; 0x8b6 <__stack+0x57>
     898:	1f 16       	cp	r1, r31
     89a:	ba 0b       	sbc	r27, r26
     89c:	62 0b       	sbc	r22, r18
     89e:	73 0b       	sbc	r23, r19
     8a0:	84 0b       	sbc	r24, r20
     8a2:	ba f0       	brmi	.+46     	; 0x8d2 <__stack+0x73>
     8a4:	91 50       	subi	r25, 0x01	; 1
     8a6:	a1 f0       	breq	.+40     	; 0x8d0 <__stack+0x71>
     8a8:	ff 0f       	add	r31, r31
     8aa:	bb 1f       	adc	r27, r27
     8ac:	66 1f       	adc	r22, r22
     8ae:	77 1f       	adc	r23, r23
     8b0:	88 1f       	adc	r24, r24
     8b2:	c2 f7       	brpl	.-16     	; 0x8a4 <__stack+0x45>
     8b4:	0e c0       	rjmp	.+28     	; 0x8d2 <__stack+0x73>
     8b6:	ba 0f       	add	r27, r26
     8b8:	62 1f       	adc	r22, r18
     8ba:	73 1f       	adc	r23, r19
     8bc:	84 1f       	adc	r24, r20
     8be:	48 f4       	brcc	.+18     	; 0x8d2 <__stack+0x73>
     8c0:	87 95       	ror	r24
     8c2:	77 95       	ror	r23
     8c4:	67 95       	ror	r22
     8c6:	b7 95       	ror	r27
     8c8:	f7 95       	ror	r31
     8ca:	9e 3f       	cpi	r25, 0xFE	; 254
     8cc:	08 f0       	brcs	.+2      	; 0x8d0 <__stack+0x71>
     8ce:	b0 cf       	rjmp	.-160    	; 0x830 <__addsf3+0x28>
     8d0:	93 95       	inc	r25
     8d2:	88 0f       	add	r24, r24
     8d4:	08 f0       	brcs	.+2      	; 0x8d8 <__stack+0x79>
     8d6:	99 27       	eor	r25, r25
     8d8:	ee 0f       	add	r30, r30
     8da:	97 95       	ror	r25
     8dc:	87 95       	ror	r24
     8de:	08 95       	ret

000008e0 <ceil>:
     8e0:	0e 94 08 06 	call	0xc10	; 0xc10 <__fp_trunc>
     8e4:	90 f0       	brcs	.+36     	; 0x90a <ceil+0x2a>
     8e6:	9f 37       	cpi	r25, 0x7F	; 127
     8e8:	48 f4       	brcc	.+18     	; 0x8fc <ceil+0x1c>
     8ea:	91 11       	cpse	r25, r1
     8ec:	16 f4       	brtc	.+4      	; 0x8f2 <ceil+0x12>
     8ee:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>
     8f2:	60 e0       	ldi	r22, 0x00	; 0
     8f4:	70 e0       	ldi	r23, 0x00	; 0
     8f6:	80 e8       	ldi	r24, 0x80	; 128
     8f8:	9f e3       	ldi	r25, 0x3F	; 63
     8fa:	08 95       	ret
     8fc:	26 f0       	brts	.+8      	; 0x906 <ceil+0x26>
     8fe:	1b 16       	cp	r1, r27
     900:	61 1d       	adc	r22, r1
     902:	71 1d       	adc	r23, r1
     904:	81 1d       	adc	r24, r1
     906:	0c 94 9b 05 	jmp	0xb36	; 0xb36 <__fp_mintl>
     90a:	0c 94 b6 05 	jmp	0xb6c	; 0xb6c <__fp_mpack>

0000090e <__cmpsf2>:
     90e:	0e 94 71 05 	call	0xae2	; 0xae2 <__fp_cmp>
     912:	08 f4       	brcc	.+2      	; 0x916 <__cmpsf2+0x8>
     914:	81 e0       	ldi	r24, 0x01	; 1
     916:	08 95       	ret

00000918 <__divsf3>:
     918:	0e 94 a0 04 	call	0x940	; 0x940 <__divsf3x>
     91c:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_round>
     920:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fp_pscB>
     924:	58 f0       	brcs	.+22     	; 0x93c <__divsf3+0x24>
     926:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fp_pscA>
     92a:	40 f0       	brcs	.+16     	; 0x93c <__divsf3+0x24>
     92c:	29 f4       	brne	.+10     	; 0x938 <__divsf3+0x20>
     92e:	5f 3f       	cpi	r21, 0xFF	; 255
     930:	29 f0       	breq	.+10     	; 0x93c <__divsf3+0x24>
     932:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__fp_inf>
     936:	51 11       	cpse	r21, r1
     938:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>
     93c:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__fp_nan>

00000940 <__divsf3x>:
     940:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fp_split3>
     944:	68 f3       	brcs	.-38     	; 0x920 <__divsf3+0x8>

00000946 <__divsf3_pse>:
     946:	99 23       	and	r25, r25
     948:	b1 f3       	breq	.-20     	; 0x936 <__divsf3+0x1e>
     94a:	55 23       	and	r21, r21
     94c:	91 f3       	breq	.-28     	; 0x932 <__divsf3+0x1a>
     94e:	95 1b       	sub	r25, r21
     950:	55 0b       	sbc	r21, r21
     952:	bb 27       	eor	r27, r27
     954:	aa 27       	eor	r26, r26
     956:	62 17       	cp	r22, r18
     958:	73 07       	cpc	r23, r19
     95a:	84 07       	cpc	r24, r20
     95c:	38 f0       	brcs	.+14     	; 0x96c <__divsf3_pse+0x26>
     95e:	9f 5f       	subi	r25, 0xFF	; 255
     960:	5f 4f       	sbci	r21, 0xFF	; 255
     962:	22 0f       	add	r18, r18
     964:	33 1f       	adc	r19, r19
     966:	44 1f       	adc	r20, r20
     968:	aa 1f       	adc	r26, r26
     96a:	a9 f3       	breq	.-22     	; 0x956 <__divsf3_pse+0x10>
     96c:	35 d0       	rcall	.+106    	; 0x9d8 <__divsf3_pse+0x92>
     96e:	0e 2e       	mov	r0, r30
     970:	3a f0       	brmi	.+14     	; 0x980 <__divsf3_pse+0x3a>
     972:	e0 e8       	ldi	r30, 0x80	; 128
     974:	32 d0       	rcall	.+100    	; 0x9da <__divsf3_pse+0x94>
     976:	91 50       	subi	r25, 0x01	; 1
     978:	50 40       	sbci	r21, 0x00	; 0
     97a:	e6 95       	lsr	r30
     97c:	00 1c       	adc	r0, r0
     97e:	ca f7       	brpl	.-14     	; 0x972 <__divsf3_pse+0x2c>
     980:	2b d0       	rcall	.+86     	; 0x9d8 <__divsf3_pse+0x92>
     982:	fe 2f       	mov	r31, r30
     984:	29 d0       	rcall	.+82     	; 0x9d8 <__divsf3_pse+0x92>
     986:	66 0f       	add	r22, r22
     988:	77 1f       	adc	r23, r23
     98a:	88 1f       	adc	r24, r24
     98c:	bb 1f       	adc	r27, r27
     98e:	26 17       	cp	r18, r22
     990:	37 07       	cpc	r19, r23
     992:	48 07       	cpc	r20, r24
     994:	ab 07       	cpc	r26, r27
     996:	b0 e8       	ldi	r27, 0x80	; 128
     998:	09 f0       	breq	.+2      	; 0x99c <__divsf3_pse+0x56>
     99a:	bb 0b       	sbc	r27, r27
     99c:	80 2d       	mov	r24, r0
     99e:	bf 01       	movw	r22, r30
     9a0:	ff 27       	eor	r31, r31
     9a2:	93 58       	subi	r25, 0x83	; 131
     9a4:	5f 4f       	sbci	r21, 0xFF	; 255
     9a6:	3a f0       	brmi	.+14     	; 0x9b6 <__divsf3_pse+0x70>
     9a8:	9e 3f       	cpi	r25, 0xFE	; 254
     9aa:	51 05       	cpc	r21, r1
     9ac:	78 f0       	brcs	.+30     	; 0x9cc <__divsf3_pse+0x86>
     9ae:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__fp_inf>
     9b2:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>
     9b6:	5f 3f       	cpi	r21, 0xFF	; 255
     9b8:	e4 f3       	brlt	.-8      	; 0x9b2 <__divsf3_pse+0x6c>
     9ba:	98 3e       	cpi	r25, 0xE8	; 232
     9bc:	d4 f3       	brlt	.-12     	; 0x9b2 <__divsf3_pse+0x6c>
     9be:	86 95       	lsr	r24
     9c0:	77 95       	ror	r23
     9c2:	67 95       	ror	r22
     9c4:	b7 95       	ror	r27
     9c6:	f7 95       	ror	r31
     9c8:	9f 5f       	subi	r25, 0xFF	; 255
     9ca:	c9 f7       	brne	.-14     	; 0x9be <__divsf3_pse+0x78>
     9cc:	88 0f       	add	r24, r24
     9ce:	91 1d       	adc	r25, r1
     9d0:	96 95       	lsr	r25
     9d2:	87 95       	ror	r24
     9d4:	97 f9       	bld	r25, 7
     9d6:	08 95       	ret
     9d8:	e1 e0       	ldi	r30, 0x01	; 1
     9da:	66 0f       	add	r22, r22
     9dc:	77 1f       	adc	r23, r23
     9de:	88 1f       	adc	r24, r24
     9e0:	bb 1f       	adc	r27, r27
     9e2:	62 17       	cp	r22, r18
     9e4:	73 07       	cpc	r23, r19
     9e6:	84 07       	cpc	r24, r20
     9e8:	ba 07       	cpc	r27, r26
     9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__divsf3_pse+0xae>
     9ec:	62 1b       	sub	r22, r18
     9ee:	73 0b       	sbc	r23, r19
     9f0:	84 0b       	sbc	r24, r20
     9f2:	ba 0b       	sbc	r27, r26
     9f4:	ee 1f       	adc	r30, r30
     9f6:	88 f7       	brcc	.-30     	; 0x9da <__divsf3_pse+0x94>
     9f8:	e0 95       	com	r30
     9fa:	08 95       	ret

000009fc <__fixsfsi>:
     9fc:	0e 94 05 05 	call	0xa0a	; 0xa0a <__fixunssfsi>
     a00:	68 94       	set
     a02:	b1 11       	cpse	r27, r1
     a04:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>
     a08:	08 95       	ret

00000a0a <__fixunssfsi>:
     a0a:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_splitA>
     a0e:	88 f0       	brcs	.+34     	; 0xa32 <__fixunssfsi+0x28>
     a10:	9f 57       	subi	r25, 0x7F	; 127
     a12:	98 f0       	brcs	.+38     	; 0xa3a <__fixunssfsi+0x30>
     a14:	b9 2f       	mov	r27, r25
     a16:	99 27       	eor	r25, r25
     a18:	b7 51       	subi	r27, 0x17	; 23
     a1a:	b0 f0       	brcs	.+44     	; 0xa48 <__fixunssfsi+0x3e>
     a1c:	e1 f0       	breq	.+56     	; 0xa56 <__fixunssfsi+0x4c>
     a1e:	66 0f       	add	r22, r22
     a20:	77 1f       	adc	r23, r23
     a22:	88 1f       	adc	r24, r24
     a24:	99 1f       	adc	r25, r25
     a26:	1a f0       	brmi	.+6      	; 0xa2e <__fixunssfsi+0x24>
     a28:	ba 95       	dec	r27
     a2a:	c9 f7       	brne	.-14     	; 0xa1e <__fixunssfsi+0x14>
     a2c:	14 c0       	rjmp	.+40     	; 0xa56 <__fixunssfsi+0x4c>
     a2e:	b1 30       	cpi	r27, 0x01	; 1
     a30:	91 f0       	breq	.+36     	; 0xa56 <__fixunssfsi+0x4c>
     a32:	0e 94 20 06 	call	0xc40	; 0xc40 <__fp_zero>
     a36:	b1 e0       	ldi	r27, 0x01	; 1
     a38:	08 95       	ret
     a3a:	0c 94 20 06 	jmp	0xc40	; 0xc40 <__fp_zero>
     a3e:	67 2f       	mov	r22, r23
     a40:	78 2f       	mov	r23, r24
     a42:	88 27       	eor	r24, r24
     a44:	b8 5f       	subi	r27, 0xF8	; 248
     a46:	39 f0       	breq	.+14     	; 0xa56 <__fixunssfsi+0x4c>
     a48:	b9 3f       	cpi	r27, 0xF9	; 249
     a4a:	cc f3       	brlt	.-14     	; 0xa3e <__fixunssfsi+0x34>
     a4c:	86 95       	lsr	r24
     a4e:	77 95       	ror	r23
     a50:	67 95       	ror	r22
     a52:	b3 95       	inc	r27
     a54:	d9 f7       	brne	.-10     	; 0xa4c <__fixunssfsi+0x42>
     a56:	3e f4       	brtc	.+14     	; 0xa66 <__fixunssfsi+0x5c>
     a58:	90 95       	com	r25
     a5a:	80 95       	com	r24
     a5c:	70 95       	com	r23
     a5e:	61 95       	neg	r22
     a60:	7f 4f       	sbci	r23, 0xFF	; 255
     a62:	8f 4f       	sbci	r24, 0xFF	; 255
     a64:	9f 4f       	sbci	r25, 0xFF	; 255
     a66:	08 95       	ret

00000a68 <__floatunsisf>:
     a68:	e8 94       	clt
     a6a:	09 c0       	rjmp	.+18     	; 0xa7e <__floatsisf+0x12>

00000a6c <__floatsisf>:
     a6c:	97 fb       	bst	r25, 7
     a6e:	3e f4       	brtc	.+14     	; 0xa7e <__floatsisf+0x12>
     a70:	90 95       	com	r25
     a72:	80 95       	com	r24
     a74:	70 95       	com	r23
     a76:	61 95       	neg	r22
     a78:	7f 4f       	sbci	r23, 0xFF	; 255
     a7a:	8f 4f       	sbci	r24, 0xFF	; 255
     a7c:	9f 4f       	sbci	r25, 0xFF	; 255
     a7e:	99 23       	and	r25, r25
     a80:	a9 f0       	breq	.+42     	; 0xaac <__floatsisf+0x40>
     a82:	f9 2f       	mov	r31, r25
     a84:	96 e9       	ldi	r25, 0x96	; 150
     a86:	bb 27       	eor	r27, r27
     a88:	93 95       	inc	r25
     a8a:	f6 95       	lsr	r31
     a8c:	87 95       	ror	r24
     a8e:	77 95       	ror	r23
     a90:	67 95       	ror	r22
     a92:	b7 95       	ror	r27
     a94:	f1 11       	cpse	r31, r1
     a96:	f8 cf       	rjmp	.-16     	; 0xa88 <__floatsisf+0x1c>
     a98:	fa f4       	brpl	.+62     	; 0xad8 <__floatsisf+0x6c>
     a9a:	bb 0f       	add	r27, r27
     a9c:	11 f4       	brne	.+4      	; 0xaa2 <__floatsisf+0x36>
     a9e:	60 ff       	sbrs	r22, 0
     aa0:	1b c0       	rjmp	.+54     	; 0xad8 <__floatsisf+0x6c>
     aa2:	6f 5f       	subi	r22, 0xFF	; 255
     aa4:	7f 4f       	sbci	r23, 0xFF	; 255
     aa6:	8f 4f       	sbci	r24, 0xFF	; 255
     aa8:	9f 4f       	sbci	r25, 0xFF	; 255
     aaa:	16 c0       	rjmp	.+44     	; 0xad8 <__floatsisf+0x6c>
     aac:	88 23       	and	r24, r24
     aae:	11 f0       	breq	.+4      	; 0xab4 <__floatsisf+0x48>
     ab0:	96 e9       	ldi	r25, 0x96	; 150
     ab2:	11 c0       	rjmp	.+34     	; 0xad6 <__floatsisf+0x6a>
     ab4:	77 23       	and	r23, r23
     ab6:	21 f0       	breq	.+8      	; 0xac0 <__floatsisf+0x54>
     ab8:	9e e8       	ldi	r25, 0x8E	; 142
     aba:	87 2f       	mov	r24, r23
     abc:	76 2f       	mov	r23, r22
     abe:	05 c0       	rjmp	.+10     	; 0xaca <__floatsisf+0x5e>
     ac0:	66 23       	and	r22, r22
     ac2:	71 f0       	breq	.+28     	; 0xae0 <__floatsisf+0x74>
     ac4:	96 e8       	ldi	r25, 0x86	; 134
     ac6:	86 2f       	mov	r24, r22
     ac8:	70 e0       	ldi	r23, 0x00	; 0
     aca:	60 e0       	ldi	r22, 0x00	; 0
     acc:	2a f0       	brmi	.+10     	; 0xad8 <__floatsisf+0x6c>
     ace:	9a 95       	dec	r25
     ad0:	66 0f       	add	r22, r22
     ad2:	77 1f       	adc	r23, r23
     ad4:	88 1f       	adc	r24, r24
     ad6:	da f7       	brpl	.-10     	; 0xace <__floatsisf+0x62>
     ad8:	88 0f       	add	r24, r24
     ada:	96 95       	lsr	r25
     adc:	87 95       	ror	r24
     ade:	97 f9       	bld	r25, 7
     ae0:	08 95       	ret

00000ae2 <__fp_cmp>:
     ae2:	99 0f       	add	r25, r25
     ae4:	00 08       	sbc	r0, r0
     ae6:	55 0f       	add	r21, r21
     ae8:	aa 0b       	sbc	r26, r26
     aea:	e0 e8       	ldi	r30, 0x80	; 128
     aec:	fe ef       	ldi	r31, 0xFE	; 254
     aee:	16 16       	cp	r1, r22
     af0:	17 06       	cpc	r1, r23
     af2:	e8 07       	cpc	r30, r24
     af4:	f9 07       	cpc	r31, r25
     af6:	c0 f0       	brcs	.+48     	; 0xb28 <__fp_cmp+0x46>
     af8:	12 16       	cp	r1, r18
     afa:	13 06       	cpc	r1, r19
     afc:	e4 07       	cpc	r30, r20
     afe:	f5 07       	cpc	r31, r21
     b00:	98 f0       	brcs	.+38     	; 0xb28 <__fp_cmp+0x46>
     b02:	62 1b       	sub	r22, r18
     b04:	73 0b       	sbc	r23, r19
     b06:	84 0b       	sbc	r24, r20
     b08:	95 0b       	sbc	r25, r21
     b0a:	39 f4       	brne	.+14     	; 0xb1a <__fp_cmp+0x38>
     b0c:	0a 26       	eor	r0, r26
     b0e:	61 f0       	breq	.+24     	; 0xb28 <__fp_cmp+0x46>
     b10:	23 2b       	or	r18, r19
     b12:	24 2b       	or	r18, r20
     b14:	25 2b       	or	r18, r21
     b16:	21 f4       	brne	.+8      	; 0xb20 <__fp_cmp+0x3e>
     b18:	08 95       	ret
     b1a:	0a 26       	eor	r0, r26
     b1c:	09 f4       	brne	.+2      	; 0xb20 <__fp_cmp+0x3e>
     b1e:	a1 40       	sbci	r26, 0x01	; 1
     b20:	a6 95       	lsr	r26
     b22:	8f ef       	ldi	r24, 0xFF	; 255
     b24:	81 1d       	adc	r24, r1
     b26:	81 1d       	adc	r24, r1
     b28:	08 95       	ret

00000b2a <__fp_inf>:
     b2a:	97 f9       	bld	r25, 7
     b2c:	9f 67       	ori	r25, 0x7F	; 127
     b2e:	80 e8       	ldi	r24, 0x80	; 128
     b30:	70 e0       	ldi	r23, 0x00	; 0
     b32:	60 e0       	ldi	r22, 0x00	; 0
     b34:	08 95       	ret

00000b36 <__fp_mintl>:
     b36:	88 23       	and	r24, r24
     b38:	71 f4       	brne	.+28     	; 0xb56 <__fp_mintl+0x20>
     b3a:	77 23       	and	r23, r23
     b3c:	21 f0       	breq	.+8      	; 0xb46 <__fp_mintl+0x10>
     b3e:	98 50       	subi	r25, 0x08	; 8
     b40:	87 2b       	or	r24, r23
     b42:	76 2f       	mov	r23, r22
     b44:	07 c0       	rjmp	.+14     	; 0xb54 <__fp_mintl+0x1e>
     b46:	66 23       	and	r22, r22
     b48:	11 f4       	brne	.+4      	; 0xb4e <__fp_mintl+0x18>
     b4a:	99 27       	eor	r25, r25
     b4c:	0d c0       	rjmp	.+26     	; 0xb68 <__fp_mintl+0x32>
     b4e:	90 51       	subi	r25, 0x10	; 16
     b50:	86 2b       	or	r24, r22
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	60 e0       	ldi	r22, 0x00	; 0
     b56:	2a f0       	brmi	.+10     	; 0xb62 <__fp_mintl+0x2c>
     b58:	9a 95       	dec	r25
     b5a:	66 0f       	add	r22, r22
     b5c:	77 1f       	adc	r23, r23
     b5e:	88 1f       	adc	r24, r24
     b60:	da f7       	brpl	.-10     	; 0xb58 <__fp_mintl+0x22>
     b62:	88 0f       	add	r24, r24
     b64:	96 95       	lsr	r25
     b66:	87 95       	ror	r24
     b68:	97 f9       	bld	r25, 7
     b6a:	08 95       	ret

00000b6c <__fp_mpack>:
     b6c:	9f 3f       	cpi	r25, 0xFF	; 255
     b6e:	31 f0       	breq	.+12     	; 0xb7c <__fp_mpack_finite+0xc>

00000b70 <__fp_mpack_finite>:
     b70:	91 50       	subi	r25, 0x01	; 1
     b72:	20 f4       	brcc	.+8      	; 0xb7c <__fp_mpack_finite+0xc>
     b74:	87 95       	ror	r24
     b76:	77 95       	ror	r23
     b78:	67 95       	ror	r22
     b7a:	b7 95       	ror	r27
     b7c:	88 0f       	add	r24, r24
     b7e:	91 1d       	adc	r25, r1
     b80:	96 95       	lsr	r25
     b82:	87 95       	ror	r24
     b84:	97 f9       	bld	r25, 7
     b86:	08 95       	ret

00000b88 <__fp_nan>:
     b88:	9f ef       	ldi	r25, 0xFF	; 255
     b8a:	80 ec       	ldi	r24, 0xC0	; 192
     b8c:	08 95       	ret

00000b8e <__fp_pscA>:
     b8e:	00 24       	eor	r0, r0
     b90:	0a 94       	dec	r0
     b92:	16 16       	cp	r1, r22
     b94:	17 06       	cpc	r1, r23
     b96:	18 06       	cpc	r1, r24
     b98:	09 06       	cpc	r0, r25
     b9a:	08 95       	ret

00000b9c <__fp_pscB>:
     b9c:	00 24       	eor	r0, r0
     b9e:	0a 94       	dec	r0
     ba0:	12 16       	cp	r1, r18
     ba2:	13 06       	cpc	r1, r19
     ba4:	14 06       	cpc	r1, r20
     ba6:	05 06       	cpc	r0, r21
     ba8:	08 95       	ret

00000baa <__fp_round>:
     baa:	09 2e       	mov	r0, r25
     bac:	03 94       	inc	r0
     bae:	00 0c       	add	r0, r0
     bb0:	11 f4       	brne	.+4      	; 0xbb6 <__fp_round+0xc>
     bb2:	88 23       	and	r24, r24
     bb4:	52 f0       	brmi	.+20     	; 0xbca <__fp_round+0x20>
     bb6:	bb 0f       	add	r27, r27
     bb8:	40 f4       	brcc	.+16     	; 0xbca <__fp_round+0x20>
     bba:	bf 2b       	or	r27, r31
     bbc:	11 f4       	brne	.+4      	; 0xbc2 <__fp_round+0x18>
     bbe:	60 ff       	sbrs	r22, 0
     bc0:	04 c0       	rjmp	.+8      	; 0xbca <__fp_round+0x20>
     bc2:	6f 5f       	subi	r22, 0xFF	; 255
     bc4:	7f 4f       	sbci	r23, 0xFF	; 255
     bc6:	8f 4f       	sbci	r24, 0xFF	; 255
     bc8:	9f 4f       	sbci	r25, 0xFF	; 255
     bca:	08 95       	ret

00000bcc <__fp_split3>:
     bcc:	57 fd       	sbrc	r21, 7
     bce:	90 58       	subi	r25, 0x80	; 128
     bd0:	44 0f       	add	r20, r20
     bd2:	55 1f       	adc	r21, r21
     bd4:	59 f0       	breq	.+22     	; 0xbec <__fp_splitA+0x10>
     bd6:	5f 3f       	cpi	r21, 0xFF	; 255
     bd8:	71 f0       	breq	.+28     	; 0xbf6 <__fp_splitA+0x1a>
     bda:	47 95       	ror	r20

00000bdc <__fp_splitA>:
     bdc:	88 0f       	add	r24, r24
     bde:	97 fb       	bst	r25, 7
     be0:	99 1f       	adc	r25, r25
     be2:	61 f0       	breq	.+24     	; 0xbfc <__fp_splitA+0x20>
     be4:	9f 3f       	cpi	r25, 0xFF	; 255
     be6:	79 f0       	breq	.+30     	; 0xc06 <__fp_splitA+0x2a>
     be8:	87 95       	ror	r24
     bea:	08 95       	ret
     bec:	12 16       	cp	r1, r18
     bee:	13 06       	cpc	r1, r19
     bf0:	14 06       	cpc	r1, r20
     bf2:	55 1f       	adc	r21, r21
     bf4:	f2 cf       	rjmp	.-28     	; 0xbda <__fp_split3+0xe>
     bf6:	46 95       	lsr	r20
     bf8:	f1 df       	rcall	.-30     	; 0xbdc <__fp_splitA>
     bfa:	08 c0       	rjmp	.+16     	; 0xc0c <__fp_splitA+0x30>
     bfc:	16 16       	cp	r1, r22
     bfe:	17 06       	cpc	r1, r23
     c00:	18 06       	cpc	r1, r24
     c02:	99 1f       	adc	r25, r25
     c04:	f1 cf       	rjmp	.-30     	; 0xbe8 <__fp_splitA+0xc>
     c06:	86 95       	lsr	r24
     c08:	71 05       	cpc	r23, r1
     c0a:	61 05       	cpc	r22, r1
     c0c:	08 94       	sec
     c0e:	08 95       	ret

00000c10 <__fp_trunc>:
     c10:	0e 94 ee 05 	call	0xbdc	; 0xbdc <__fp_splitA>
     c14:	a0 f0       	brcs	.+40     	; 0xc3e <__fp_trunc+0x2e>
     c16:	be e7       	ldi	r27, 0x7E	; 126
     c18:	b9 17       	cp	r27, r25
     c1a:	88 f4       	brcc	.+34     	; 0xc3e <__fp_trunc+0x2e>
     c1c:	bb 27       	eor	r27, r27
     c1e:	9f 38       	cpi	r25, 0x8F	; 143
     c20:	60 f4       	brcc	.+24     	; 0xc3a <__fp_trunc+0x2a>
     c22:	16 16       	cp	r1, r22
     c24:	b1 1d       	adc	r27, r1
     c26:	67 2f       	mov	r22, r23
     c28:	78 2f       	mov	r23, r24
     c2a:	88 27       	eor	r24, r24
     c2c:	98 5f       	subi	r25, 0xF8	; 248
     c2e:	f7 cf       	rjmp	.-18     	; 0xc1e <__fp_trunc+0xe>
     c30:	86 95       	lsr	r24
     c32:	77 95       	ror	r23
     c34:	67 95       	ror	r22
     c36:	b1 1d       	adc	r27, r1
     c38:	93 95       	inc	r25
     c3a:	96 39       	cpi	r25, 0x96	; 150
     c3c:	c8 f3       	brcs	.-14     	; 0xc30 <__fp_trunc+0x20>
     c3e:	08 95       	ret

00000c40 <__fp_zero>:
     c40:	e8 94       	clt

00000c42 <__fp_szero>:
     c42:	bb 27       	eor	r27, r27
     c44:	66 27       	eor	r22, r22
     c46:	77 27       	eor	r23, r23
     c48:	cb 01       	movw	r24, r22
     c4a:	97 f9       	bld	r25, 7
     c4c:	08 95       	ret

00000c4e <__gesf2>:
     c4e:	0e 94 71 05 	call	0xae2	; 0xae2 <__fp_cmp>
     c52:	08 f4       	brcc	.+2      	; 0xc56 <__gesf2+0x8>
     c54:	8f ef       	ldi	r24, 0xFF	; 255
     c56:	08 95       	ret

00000c58 <__mulsf3>:
     c58:	0e 94 3f 06 	call	0xc7e	; 0xc7e <__mulsf3x>
     c5c:	0c 94 d5 05 	jmp	0xbaa	; 0xbaa <__fp_round>
     c60:	0e 94 c7 05 	call	0xb8e	; 0xb8e <__fp_pscA>
     c64:	38 f0       	brcs	.+14     	; 0xc74 <__mulsf3+0x1c>
     c66:	0e 94 ce 05 	call	0xb9c	; 0xb9c <__fp_pscB>
     c6a:	20 f0       	brcs	.+8      	; 0xc74 <__mulsf3+0x1c>
     c6c:	95 23       	and	r25, r21
     c6e:	11 f0       	breq	.+4      	; 0xc74 <__mulsf3+0x1c>
     c70:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__fp_inf>
     c74:	0c 94 c4 05 	jmp	0xb88	; 0xb88 <__fp_nan>
     c78:	11 24       	eor	r1, r1
     c7a:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>

00000c7e <__mulsf3x>:
     c7e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__fp_split3>
     c82:	70 f3       	brcs	.-36     	; 0xc60 <__mulsf3+0x8>

00000c84 <__mulsf3_pse>:
     c84:	95 9f       	mul	r25, r21
     c86:	c1 f3       	breq	.-16     	; 0xc78 <__mulsf3+0x20>
     c88:	95 0f       	add	r25, r21
     c8a:	50 e0       	ldi	r21, 0x00	; 0
     c8c:	55 1f       	adc	r21, r21
     c8e:	62 9f       	mul	r22, r18
     c90:	f0 01       	movw	r30, r0
     c92:	72 9f       	mul	r23, r18
     c94:	bb 27       	eor	r27, r27
     c96:	f0 0d       	add	r31, r0
     c98:	b1 1d       	adc	r27, r1
     c9a:	63 9f       	mul	r22, r19
     c9c:	aa 27       	eor	r26, r26
     c9e:	f0 0d       	add	r31, r0
     ca0:	b1 1d       	adc	r27, r1
     ca2:	aa 1f       	adc	r26, r26
     ca4:	64 9f       	mul	r22, r20
     ca6:	66 27       	eor	r22, r22
     ca8:	b0 0d       	add	r27, r0
     caa:	a1 1d       	adc	r26, r1
     cac:	66 1f       	adc	r22, r22
     cae:	82 9f       	mul	r24, r18
     cb0:	22 27       	eor	r18, r18
     cb2:	b0 0d       	add	r27, r0
     cb4:	a1 1d       	adc	r26, r1
     cb6:	62 1f       	adc	r22, r18
     cb8:	73 9f       	mul	r23, r19
     cba:	b0 0d       	add	r27, r0
     cbc:	a1 1d       	adc	r26, r1
     cbe:	62 1f       	adc	r22, r18
     cc0:	83 9f       	mul	r24, r19
     cc2:	a0 0d       	add	r26, r0
     cc4:	61 1d       	adc	r22, r1
     cc6:	22 1f       	adc	r18, r18
     cc8:	74 9f       	mul	r23, r20
     cca:	33 27       	eor	r19, r19
     ccc:	a0 0d       	add	r26, r0
     cce:	61 1d       	adc	r22, r1
     cd0:	23 1f       	adc	r18, r19
     cd2:	84 9f       	mul	r24, r20
     cd4:	60 0d       	add	r22, r0
     cd6:	21 1d       	adc	r18, r1
     cd8:	82 2f       	mov	r24, r18
     cda:	76 2f       	mov	r23, r22
     cdc:	6a 2f       	mov	r22, r26
     cde:	11 24       	eor	r1, r1
     ce0:	9f 57       	subi	r25, 0x7F	; 127
     ce2:	50 40       	sbci	r21, 0x00	; 0
     ce4:	9a f0       	brmi	.+38     	; 0xd0c <__mulsf3_pse+0x88>
     ce6:	f1 f0       	breq	.+60     	; 0xd24 <__mulsf3_pse+0xa0>
     ce8:	88 23       	and	r24, r24
     cea:	4a f0       	brmi	.+18     	; 0xcfe <__mulsf3_pse+0x7a>
     cec:	ee 0f       	add	r30, r30
     cee:	ff 1f       	adc	r31, r31
     cf0:	bb 1f       	adc	r27, r27
     cf2:	66 1f       	adc	r22, r22
     cf4:	77 1f       	adc	r23, r23
     cf6:	88 1f       	adc	r24, r24
     cf8:	91 50       	subi	r25, 0x01	; 1
     cfa:	50 40       	sbci	r21, 0x00	; 0
     cfc:	a9 f7       	brne	.-22     	; 0xce8 <__mulsf3_pse+0x64>
     cfe:	9e 3f       	cpi	r25, 0xFE	; 254
     d00:	51 05       	cpc	r21, r1
     d02:	80 f0       	brcs	.+32     	; 0xd24 <__mulsf3_pse+0xa0>
     d04:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__fp_inf>
     d08:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__fp_szero>
     d0c:	5f 3f       	cpi	r21, 0xFF	; 255
     d0e:	e4 f3       	brlt	.-8      	; 0xd08 <__mulsf3_pse+0x84>
     d10:	98 3e       	cpi	r25, 0xE8	; 232
     d12:	d4 f3       	brlt	.-12     	; 0xd08 <__mulsf3_pse+0x84>
     d14:	86 95       	lsr	r24
     d16:	77 95       	ror	r23
     d18:	67 95       	ror	r22
     d1a:	b7 95       	ror	r27
     d1c:	f7 95       	ror	r31
     d1e:	e7 95       	ror	r30
     d20:	9f 5f       	subi	r25, 0xFF	; 255
     d22:	c1 f7       	brne	.-16     	; 0xd14 <__mulsf3_pse+0x90>
     d24:	fe 2b       	or	r31, r30
     d26:	88 0f       	add	r24, r24
     d28:	91 1d       	adc	r25, r1
     d2a:	96 95       	lsr	r25
     d2c:	87 95       	ror	r24
     d2e:	97 f9       	bld	r25, 7
     d30:	08 95       	ret

00000d32 <__divmodhi4>:
     d32:	97 fb       	bst	r25, 7
     d34:	07 2e       	mov	r0, r23
     d36:	16 f4       	brtc	.+4      	; 0xd3c <__divmodhi4+0xa>
     d38:	00 94       	com	r0
     d3a:	07 d0       	rcall	.+14     	; 0xd4a <__divmodhi4_neg1>
     d3c:	77 fd       	sbrc	r23, 7
     d3e:	09 d0       	rcall	.+18     	; 0xd52 <__divmodhi4_neg2>
     d40:	0e 94 cc 06 	call	0xd98	; 0xd98 <__udivmodhi4>
     d44:	07 fc       	sbrc	r0, 7
     d46:	05 d0       	rcall	.+10     	; 0xd52 <__divmodhi4_neg2>
     d48:	3e f4       	brtc	.+14     	; 0xd58 <__divmodhi4_exit>

00000d4a <__divmodhi4_neg1>:
     d4a:	90 95       	com	r25
     d4c:	81 95       	neg	r24
     d4e:	9f 4f       	sbci	r25, 0xFF	; 255
     d50:	08 95       	ret

00000d52 <__divmodhi4_neg2>:
     d52:	70 95       	com	r23
     d54:	61 95       	neg	r22
     d56:	7f 4f       	sbci	r23, 0xFF	; 255

00000d58 <__divmodhi4_exit>:
     d58:	08 95       	ret

00000d5a <__divmodsi4>:
     d5a:	05 2e       	mov	r0, r21
     d5c:	97 fb       	bst	r25, 7
     d5e:	1e f4       	brtc	.+6      	; 0xd66 <__divmodsi4+0xc>
     d60:	00 94       	com	r0
     d62:	0e 94 c4 06 	call	0xd88	; 0xd88 <__negsi2>
     d66:	57 fd       	sbrc	r21, 7
     d68:	07 d0       	rcall	.+14     	; 0xd78 <__divmodsi4_neg2>
     d6a:	0e 94 e0 06 	call	0xdc0	; 0xdc0 <__udivmodsi4>
     d6e:	07 fc       	sbrc	r0, 7
     d70:	03 d0       	rcall	.+6      	; 0xd78 <__divmodsi4_neg2>
     d72:	4e f4       	brtc	.+18     	; 0xd86 <__divmodsi4_exit>
     d74:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__negsi2>

00000d78 <__divmodsi4_neg2>:
     d78:	50 95       	com	r21
     d7a:	40 95       	com	r20
     d7c:	30 95       	com	r19
     d7e:	21 95       	neg	r18
     d80:	3f 4f       	sbci	r19, 0xFF	; 255
     d82:	4f 4f       	sbci	r20, 0xFF	; 255
     d84:	5f 4f       	sbci	r21, 0xFF	; 255

00000d86 <__divmodsi4_exit>:
     d86:	08 95       	ret

00000d88 <__negsi2>:
     d88:	90 95       	com	r25
     d8a:	80 95       	com	r24
     d8c:	70 95       	com	r23
     d8e:	61 95       	neg	r22
     d90:	7f 4f       	sbci	r23, 0xFF	; 255
     d92:	8f 4f       	sbci	r24, 0xFF	; 255
     d94:	9f 4f       	sbci	r25, 0xFF	; 255
     d96:	08 95       	ret

00000d98 <__udivmodhi4>:
     d98:	aa 1b       	sub	r26, r26
     d9a:	bb 1b       	sub	r27, r27
     d9c:	51 e1       	ldi	r21, 0x11	; 17
     d9e:	07 c0       	rjmp	.+14     	; 0xdae <__udivmodhi4_ep>

00000da0 <__udivmodhi4_loop>:
     da0:	aa 1f       	adc	r26, r26
     da2:	bb 1f       	adc	r27, r27
     da4:	a6 17       	cp	r26, r22
     da6:	b7 07       	cpc	r27, r23
     da8:	10 f0       	brcs	.+4      	; 0xdae <__udivmodhi4_ep>
     daa:	a6 1b       	sub	r26, r22
     dac:	b7 0b       	sbc	r27, r23

00000dae <__udivmodhi4_ep>:
     dae:	88 1f       	adc	r24, r24
     db0:	99 1f       	adc	r25, r25
     db2:	5a 95       	dec	r21
     db4:	a9 f7       	brne	.-22     	; 0xda0 <__udivmodhi4_loop>
     db6:	80 95       	com	r24
     db8:	90 95       	com	r25
     dba:	bc 01       	movw	r22, r24
     dbc:	cd 01       	movw	r24, r26
     dbe:	08 95       	ret

00000dc0 <__udivmodsi4>:
     dc0:	a1 e2       	ldi	r26, 0x21	; 33
     dc2:	1a 2e       	mov	r1, r26
     dc4:	aa 1b       	sub	r26, r26
     dc6:	bb 1b       	sub	r27, r27
     dc8:	fd 01       	movw	r30, r26
     dca:	0d c0       	rjmp	.+26     	; 0xde6 <__udivmodsi4_ep>

00000dcc <__udivmodsi4_loop>:
     dcc:	aa 1f       	adc	r26, r26
     dce:	bb 1f       	adc	r27, r27
     dd0:	ee 1f       	adc	r30, r30
     dd2:	ff 1f       	adc	r31, r31
     dd4:	a2 17       	cp	r26, r18
     dd6:	b3 07       	cpc	r27, r19
     dd8:	e4 07       	cpc	r30, r20
     dda:	f5 07       	cpc	r31, r21
     ddc:	20 f0       	brcs	.+8      	; 0xde6 <__udivmodsi4_ep>
     dde:	a2 1b       	sub	r26, r18
     de0:	b3 0b       	sbc	r27, r19
     de2:	e4 0b       	sbc	r30, r20
     de4:	f5 0b       	sbc	r31, r21

00000de6 <__udivmodsi4_ep>:
     de6:	66 1f       	adc	r22, r22
     de8:	77 1f       	adc	r23, r23
     dea:	88 1f       	adc	r24, r24
     dec:	99 1f       	adc	r25, r25
     dee:	1a 94       	dec	r1
     df0:	69 f7       	brne	.-38     	; 0xdcc <__udivmodsi4_loop>
     df2:	60 95       	com	r22
     df4:	70 95       	com	r23
     df6:	80 95       	com	r24
     df8:	90 95       	com	r25
     dfa:	9b 01       	movw	r18, r22
     dfc:	ac 01       	movw	r20, r24
     dfe:	bd 01       	movw	r22, r26
     e00:	cf 01       	movw	r24, r30
     e02:	08 95       	ret

00000e04 <sprintf>:
     e04:	ae e0       	ldi	r26, 0x0E	; 14
     e06:	b0 e0       	ldi	r27, 0x00	; 0
     e08:	e8 e0       	ldi	r30, 0x08	; 8
     e0a:	f7 e0       	ldi	r31, 0x07	; 7
     e0c:	0c 94 c3 09 	jmp	0x1386	; 0x1386 <__prologue_saves__+0x1c>
     e10:	0d 89       	ldd	r16, Y+21	; 0x15
     e12:	1e 89       	ldd	r17, Y+22	; 0x16
     e14:	86 e0       	ldi	r24, 0x06	; 6
     e16:	8c 83       	std	Y+4, r24	; 0x04
     e18:	1a 83       	std	Y+2, r17	; 0x02
     e1a:	09 83       	std	Y+1, r16	; 0x01
     e1c:	8f ef       	ldi	r24, 0xFF	; 255
     e1e:	9f e7       	ldi	r25, 0x7F	; 127
     e20:	9e 83       	std	Y+6, r25	; 0x06
     e22:	8d 83       	std	Y+5, r24	; 0x05
     e24:	ae 01       	movw	r20, r28
     e26:	47 5e       	subi	r20, 0xE7	; 231
     e28:	5f 4f       	sbci	r21, 0xFF	; 255
     e2a:	6f 89       	ldd	r22, Y+23	; 0x17
     e2c:	78 8d       	ldd	r23, Y+24	; 0x18
     e2e:	ce 01       	movw	r24, r28
     e30:	01 96       	adiw	r24, 0x01	; 1
     e32:	0e 94 24 07 	call	0xe48	; 0xe48 <vfprintf>
     e36:	ef 81       	ldd	r30, Y+7	; 0x07
     e38:	f8 85       	ldd	r31, Y+8	; 0x08
     e3a:	e0 0f       	add	r30, r16
     e3c:	f1 1f       	adc	r31, r17
     e3e:	10 82       	st	Z, r1
     e40:	2e 96       	adiw	r28, 0x0e	; 14
     e42:	e4 e0       	ldi	r30, 0x04	; 4
     e44:	0c 94 df 09 	jmp	0x13be	; 0x13be <__epilogue_restores__+0x1c>

00000e48 <vfprintf>:
     e48:	ab e0       	ldi	r26, 0x0B	; 11
     e4a:	b0 e0       	ldi	r27, 0x00	; 0
     e4c:	ea e2       	ldi	r30, 0x2A	; 42
     e4e:	f7 e0       	ldi	r31, 0x07	; 7
     e50:	0c 94 b5 09 	jmp	0x136a	; 0x136a <__prologue_saves__>
     e54:	6c 01       	movw	r12, r24
     e56:	7b 01       	movw	r14, r22
     e58:	8a 01       	movw	r16, r20
     e5a:	fc 01       	movw	r30, r24
     e5c:	17 82       	std	Z+7, r1	; 0x07
     e5e:	16 82       	std	Z+6, r1	; 0x06
     e60:	83 81       	ldd	r24, Z+3	; 0x03
     e62:	81 ff       	sbrs	r24, 1
     e64:	cc c1       	rjmp	.+920    	; 0x11fe <vfprintf+0x3b6>
     e66:	ce 01       	movw	r24, r28
     e68:	01 96       	adiw	r24, 0x01	; 1
     e6a:	3c 01       	movw	r6, r24
     e6c:	f6 01       	movw	r30, r12
     e6e:	93 81       	ldd	r25, Z+3	; 0x03
     e70:	f7 01       	movw	r30, r14
     e72:	93 fd       	sbrc	r25, 3
     e74:	85 91       	lpm	r24, Z+
     e76:	93 ff       	sbrs	r25, 3
     e78:	81 91       	ld	r24, Z+
     e7a:	7f 01       	movw	r14, r30
     e7c:	88 23       	and	r24, r24
     e7e:	09 f4       	brne	.+2      	; 0xe82 <vfprintf+0x3a>
     e80:	ba c1       	rjmp	.+884    	; 0x11f6 <vfprintf+0x3ae>
     e82:	85 32       	cpi	r24, 0x25	; 37
     e84:	39 f4       	brne	.+14     	; 0xe94 <vfprintf+0x4c>
     e86:	93 fd       	sbrc	r25, 3
     e88:	85 91       	lpm	r24, Z+
     e8a:	93 ff       	sbrs	r25, 3
     e8c:	81 91       	ld	r24, Z+
     e8e:	7f 01       	movw	r14, r30
     e90:	85 32       	cpi	r24, 0x25	; 37
     e92:	29 f4       	brne	.+10     	; 0xe9e <vfprintf+0x56>
     e94:	b6 01       	movw	r22, r12
     e96:	90 e0       	ldi	r25, 0x00	; 0
     e98:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     e9c:	e7 cf       	rjmp	.-50     	; 0xe6c <vfprintf+0x24>
     e9e:	91 2c       	mov	r9, r1
     ea0:	21 2c       	mov	r2, r1
     ea2:	31 2c       	mov	r3, r1
     ea4:	ff e1       	ldi	r31, 0x1F	; 31
     ea6:	f3 15       	cp	r31, r3
     ea8:	d8 f0       	brcs	.+54     	; 0xee0 <vfprintf+0x98>
     eaa:	8b 32       	cpi	r24, 0x2B	; 43
     eac:	79 f0       	breq	.+30     	; 0xecc <vfprintf+0x84>
     eae:	38 f4       	brcc	.+14     	; 0xebe <vfprintf+0x76>
     eb0:	80 32       	cpi	r24, 0x20	; 32
     eb2:	79 f0       	breq	.+30     	; 0xed2 <vfprintf+0x8a>
     eb4:	83 32       	cpi	r24, 0x23	; 35
     eb6:	a1 f4       	brne	.+40     	; 0xee0 <vfprintf+0x98>
     eb8:	23 2d       	mov	r18, r3
     eba:	20 61       	ori	r18, 0x10	; 16
     ebc:	1d c0       	rjmp	.+58     	; 0xef8 <vfprintf+0xb0>
     ebe:	8d 32       	cpi	r24, 0x2D	; 45
     ec0:	61 f0       	breq	.+24     	; 0xeda <vfprintf+0x92>
     ec2:	80 33       	cpi	r24, 0x30	; 48
     ec4:	69 f4       	brne	.+26     	; 0xee0 <vfprintf+0x98>
     ec6:	23 2d       	mov	r18, r3
     ec8:	21 60       	ori	r18, 0x01	; 1
     eca:	16 c0       	rjmp	.+44     	; 0xef8 <vfprintf+0xb0>
     ecc:	83 2d       	mov	r24, r3
     ece:	82 60       	ori	r24, 0x02	; 2
     ed0:	38 2e       	mov	r3, r24
     ed2:	e3 2d       	mov	r30, r3
     ed4:	e4 60       	ori	r30, 0x04	; 4
     ed6:	3e 2e       	mov	r3, r30
     ed8:	2a c0       	rjmp	.+84     	; 0xf2e <vfprintf+0xe6>
     eda:	f3 2d       	mov	r31, r3
     edc:	f8 60       	ori	r31, 0x08	; 8
     ede:	1d c0       	rjmp	.+58     	; 0xf1a <vfprintf+0xd2>
     ee0:	37 fc       	sbrc	r3, 7
     ee2:	2d c0       	rjmp	.+90     	; 0xf3e <vfprintf+0xf6>
     ee4:	20 ed       	ldi	r18, 0xD0	; 208
     ee6:	28 0f       	add	r18, r24
     ee8:	2a 30       	cpi	r18, 0x0A	; 10
     eea:	40 f0       	brcs	.+16     	; 0xefc <vfprintf+0xb4>
     eec:	8e 32       	cpi	r24, 0x2E	; 46
     eee:	b9 f4       	brne	.+46     	; 0xf1e <vfprintf+0xd6>
     ef0:	36 fc       	sbrc	r3, 6
     ef2:	81 c1       	rjmp	.+770    	; 0x11f6 <vfprintf+0x3ae>
     ef4:	23 2d       	mov	r18, r3
     ef6:	20 64       	ori	r18, 0x40	; 64
     ef8:	32 2e       	mov	r3, r18
     efa:	19 c0       	rjmp	.+50     	; 0xf2e <vfprintf+0xe6>
     efc:	36 fe       	sbrs	r3, 6
     efe:	06 c0       	rjmp	.+12     	; 0xf0c <vfprintf+0xc4>
     f00:	8a e0       	ldi	r24, 0x0A	; 10
     f02:	98 9e       	mul	r9, r24
     f04:	20 0d       	add	r18, r0
     f06:	11 24       	eor	r1, r1
     f08:	92 2e       	mov	r9, r18
     f0a:	11 c0       	rjmp	.+34     	; 0xf2e <vfprintf+0xe6>
     f0c:	ea e0       	ldi	r30, 0x0A	; 10
     f0e:	2e 9e       	mul	r2, r30
     f10:	20 0d       	add	r18, r0
     f12:	11 24       	eor	r1, r1
     f14:	22 2e       	mov	r2, r18
     f16:	f3 2d       	mov	r31, r3
     f18:	f0 62       	ori	r31, 0x20	; 32
     f1a:	3f 2e       	mov	r3, r31
     f1c:	08 c0       	rjmp	.+16     	; 0xf2e <vfprintf+0xe6>
     f1e:	8c 36       	cpi	r24, 0x6C	; 108
     f20:	21 f4       	brne	.+8      	; 0xf2a <vfprintf+0xe2>
     f22:	83 2d       	mov	r24, r3
     f24:	80 68       	ori	r24, 0x80	; 128
     f26:	38 2e       	mov	r3, r24
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <vfprintf+0xe6>
     f2a:	88 36       	cpi	r24, 0x68	; 104
     f2c:	41 f4       	brne	.+16     	; 0xf3e <vfprintf+0xf6>
     f2e:	f7 01       	movw	r30, r14
     f30:	93 fd       	sbrc	r25, 3
     f32:	85 91       	lpm	r24, Z+
     f34:	93 ff       	sbrs	r25, 3
     f36:	81 91       	ld	r24, Z+
     f38:	7f 01       	movw	r14, r30
     f3a:	81 11       	cpse	r24, r1
     f3c:	b3 cf       	rjmp	.-154    	; 0xea4 <vfprintf+0x5c>
     f3e:	98 2f       	mov	r25, r24
     f40:	9f 7d       	andi	r25, 0xDF	; 223
     f42:	95 54       	subi	r25, 0x45	; 69
     f44:	93 30       	cpi	r25, 0x03	; 3
     f46:	28 f4       	brcc	.+10     	; 0xf52 <vfprintf+0x10a>
     f48:	0c 5f       	subi	r16, 0xFC	; 252
     f4a:	1f 4f       	sbci	r17, 0xFF	; 255
     f4c:	9f e3       	ldi	r25, 0x3F	; 63
     f4e:	99 83       	std	Y+1, r25	; 0x01
     f50:	0d c0       	rjmp	.+26     	; 0xf6c <vfprintf+0x124>
     f52:	83 36       	cpi	r24, 0x63	; 99
     f54:	31 f0       	breq	.+12     	; 0xf62 <vfprintf+0x11a>
     f56:	83 37       	cpi	r24, 0x73	; 115
     f58:	71 f0       	breq	.+28     	; 0xf76 <vfprintf+0x12e>
     f5a:	83 35       	cpi	r24, 0x53	; 83
     f5c:	09 f0       	breq	.+2      	; 0xf60 <vfprintf+0x118>
     f5e:	59 c0       	rjmp	.+178    	; 0x1012 <vfprintf+0x1ca>
     f60:	21 c0       	rjmp	.+66     	; 0xfa4 <vfprintf+0x15c>
     f62:	f8 01       	movw	r30, r16
     f64:	80 81       	ld	r24, Z
     f66:	89 83       	std	Y+1, r24	; 0x01
     f68:	0e 5f       	subi	r16, 0xFE	; 254
     f6a:	1f 4f       	sbci	r17, 0xFF	; 255
     f6c:	88 24       	eor	r8, r8
     f6e:	83 94       	inc	r8
     f70:	91 2c       	mov	r9, r1
     f72:	53 01       	movw	r10, r6
     f74:	13 c0       	rjmp	.+38     	; 0xf9c <vfprintf+0x154>
     f76:	28 01       	movw	r4, r16
     f78:	f2 e0       	ldi	r31, 0x02	; 2
     f7a:	4f 0e       	add	r4, r31
     f7c:	51 1c       	adc	r5, r1
     f7e:	f8 01       	movw	r30, r16
     f80:	a0 80       	ld	r10, Z
     f82:	b1 80       	ldd	r11, Z+1	; 0x01
     f84:	36 fe       	sbrs	r3, 6
     f86:	03 c0       	rjmp	.+6      	; 0xf8e <vfprintf+0x146>
     f88:	69 2d       	mov	r22, r9
     f8a:	70 e0       	ldi	r23, 0x00	; 0
     f8c:	02 c0       	rjmp	.+4      	; 0xf92 <vfprintf+0x14a>
     f8e:	6f ef       	ldi	r22, 0xFF	; 255
     f90:	7f ef       	ldi	r23, 0xFF	; 255
     f92:	c5 01       	movw	r24, r10
     f94:	0e 94 10 09 	call	0x1220	; 0x1220 <strnlen>
     f98:	4c 01       	movw	r8, r24
     f9a:	82 01       	movw	r16, r4
     f9c:	f3 2d       	mov	r31, r3
     f9e:	ff 77       	andi	r31, 0x7F	; 127
     fa0:	3f 2e       	mov	r3, r31
     fa2:	16 c0       	rjmp	.+44     	; 0xfd0 <vfprintf+0x188>
     fa4:	28 01       	movw	r4, r16
     fa6:	22 e0       	ldi	r18, 0x02	; 2
     fa8:	42 0e       	add	r4, r18
     faa:	51 1c       	adc	r5, r1
     fac:	f8 01       	movw	r30, r16
     fae:	a0 80       	ld	r10, Z
     fb0:	b1 80       	ldd	r11, Z+1	; 0x01
     fb2:	36 fe       	sbrs	r3, 6
     fb4:	03 c0       	rjmp	.+6      	; 0xfbc <vfprintf+0x174>
     fb6:	69 2d       	mov	r22, r9
     fb8:	70 e0       	ldi	r23, 0x00	; 0
     fba:	02 c0       	rjmp	.+4      	; 0xfc0 <vfprintf+0x178>
     fbc:	6f ef       	ldi	r22, 0xFF	; 255
     fbe:	7f ef       	ldi	r23, 0xFF	; 255
     fc0:	c5 01       	movw	r24, r10
     fc2:	0e 94 05 09 	call	0x120a	; 0x120a <strnlen_P>
     fc6:	4c 01       	movw	r8, r24
     fc8:	f3 2d       	mov	r31, r3
     fca:	f0 68       	ori	r31, 0x80	; 128
     fcc:	3f 2e       	mov	r3, r31
     fce:	82 01       	movw	r16, r4
     fd0:	33 fc       	sbrc	r3, 3
     fd2:	1b c0       	rjmp	.+54     	; 0x100a <vfprintf+0x1c2>
     fd4:	82 2d       	mov	r24, r2
     fd6:	90 e0       	ldi	r25, 0x00	; 0
     fd8:	88 16       	cp	r8, r24
     fda:	99 06       	cpc	r9, r25
     fdc:	b0 f4       	brcc	.+44     	; 0x100a <vfprintf+0x1c2>
     fde:	b6 01       	movw	r22, r12
     fe0:	80 e2       	ldi	r24, 0x20	; 32
     fe2:	90 e0       	ldi	r25, 0x00	; 0
     fe4:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
     fe8:	2a 94       	dec	r2
     fea:	f4 cf       	rjmp	.-24     	; 0xfd4 <vfprintf+0x18c>
     fec:	f5 01       	movw	r30, r10
     fee:	37 fc       	sbrc	r3, 7
     ff0:	85 91       	lpm	r24, Z+
     ff2:	37 fe       	sbrs	r3, 7
     ff4:	81 91       	ld	r24, Z+
     ff6:	5f 01       	movw	r10, r30
     ff8:	b6 01       	movw	r22, r12
     ffa:	90 e0       	ldi	r25, 0x00	; 0
     ffc:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    1000:	21 10       	cpse	r2, r1
    1002:	2a 94       	dec	r2
    1004:	21 e0       	ldi	r18, 0x01	; 1
    1006:	82 1a       	sub	r8, r18
    1008:	91 08       	sbc	r9, r1
    100a:	81 14       	cp	r8, r1
    100c:	91 04       	cpc	r9, r1
    100e:	71 f7       	brne	.-36     	; 0xfec <vfprintf+0x1a4>
    1010:	e8 c0       	rjmp	.+464    	; 0x11e2 <vfprintf+0x39a>
    1012:	84 36       	cpi	r24, 0x64	; 100
    1014:	11 f0       	breq	.+4      	; 0x101a <vfprintf+0x1d2>
    1016:	89 36       	cpi	r24, 0x69	; 105
    1018:	41 f5       	brne	.+80     	; 0x106a <vfprintf+0x222>
    101a:	f8 01       	movw	r30, r16
    101c:	37 fe       	sbrs	r3, 7
    101e:	07 c0       	rjmp	.+14     	; 0x102e <vfprintf+0x1e6>
    1020:	60 81       	ld	r22, Z
    1022:	71 81       	ldd	r23, Z+1	; 0x01
    1024:	82 81       	ldd	r24, Z+2	; 0x02
    1026:	93 81       	ldd	r25, Z+3	; 0x03
    1028:	0c 5f       	subi	r16, 0xFC	; 252
    102a:	1f 4f       	sbci	r17, 0xFF	; 255
    102c:	08 c0       	rjmp	.+16     	; 0x103e <vfprintf+0x1f6>
    102e:	60 81       	ld	r22, Z
    1030:	71 81       	ldd	r23, Z+1	; 0x01
    1032:	07 2e       	mov	r0, r23
    1034:	00 0c       	add	r0, r0
    1036:	88 0b       	sbc	r24, r24
    1038:	99 0b       	sbc	r25, r25
    103a:	0e 5f       	subi	r16, 0xFE	; 254
    103c:	1f 4f       	sbci	r17, 0xFF	; 255
    103e:	f3 2d       	mov	r31, r3
    1040:	ff 76       	andi	r31, 0x6F	; 111
    1042:	3f 2e       	mov	r3, r31
    1044:	97 ff       	sbrs	r25, 7
    1046:	09 c0       	rjmp	.+18     	; 0x105a <vfprintf+0x212>
    1048:	90 95       	com	r25
    104a:	80 95       	com	r24
    104c:	70 95       	com	r23
    104e:	61 95       	neg	r22
    1050:	7f 4f       	sbci	r23, 0xFF	; 255
    1052:	8f 4f       	sbci	r24, 0xFF	; 255
    1054:	9f 4f       	sbci	r25, 0xFF	; 255
    1056:	f0 68       	ori	r31, 0x80	; 128
    1058:	3f 2e       	mov	r3, r31
    105a:	2a e0       	ldi	r18, 0x0A	; 10
    105c:	30 e0       	ldi	r19, 0x00	; 0
    105e:	a3 01       	movw	r20, r6
    1060:	0e 94 57 09 	call	0x12ae	; 0x12ae <__ultoa_invert>
    1064:	88 2e       	mov	r8, r24
    1066:	86 18       	sub	r8, r6
    1068:	45 c0       	rjmp	.+138    	; 0x10f4 <vfprintf+0x2ac>
    106a:	85 37       	cpi	r24, 0x75	; 117
    106c:	31 f4       	brne	.+12     	; 0x107a <vfprintf+0x232>
    106e:	23 2d       	mov	r18, r3
    1070:	2f 7e       	andi	r18, 0xEF	; 239
    1072:	b2 2e       	mov	r11, r18
    1074:	2a e0       	ldi	r18, 0x0A	; 10
    1076:	30 e0       	ldi	r19, 0x00	; 0
    1078:	25 c0       	rjmp	.+74     	; 0x10c4 <vfprintf+0x27c>
    107a:	93 2d       	mov	r25, r3
    107c:	99 7f       	andi	r25, 0xF9	; 249
    107e:	b9 2e       	mov	r11, r25
    1080:	8f 36       	cpi	r24, 0x6F	; 111
    1082:	c1 f0       	breq	.+48     	; 0x10b4 <vfprintf+0x26c>
    1084:	18 f4       	brcc	.+6      	; 0x108c <vfprintf+0x244>
    1086:	88 35       	cpi	r24, 0x58	; 88
    1088:	79 f0       	breq	.+30     	; 0x10a8 <vfprintf+0x260>
    108a:	b5 c0       	rjmp	.+362    	; 0x11f6 <vfprintf+0x3ae>
    108c:	80 37       	cpi	r24, 0x70	; 112
    108e:	19 f0       	breq	.+6      	; 0x1096 <vfprintf+0x24e>
    1090:	88 37       	cpi	r24, 0x78	; 120
    1092:	21 f0       	breq	.+8      	; 0x109c <vfprintf+0x254>
    1094:	b0 c0       	rjmp	.+352    	; 0x11f6 <vfprintf+0x3ae>
    1096:	e9 2f       	mov	r30, r25
    1098:	e0 61       	ori	r30, 0x10	; 16
    109a:	be 2e       	mov	r11, r30
    109c:	b4 fe       	sbrs	r11, 4
    109e:	0d c0       	rjmp	.+26     	; 0x10ba <vfprintf+0x272>
    10a0:	fb 2d       	mov	r31, r11
    10a2:	f4 60       	ori	r31, 0x04	; 4
    10a4:	bf 2e       	mov	r11, r31
    10a6:	09 c0       	rjmp	.+18     	; 0x10ba <vfprintf+0x272>
    10a8:	34 fe       	sbrs	r3, 4
    10aa:	0a c0       	rjmp	.+20     	; 0x10c0 <vfprintf+0x278>
    10ac:	29 2f       	mov	r18, r25
    10ae:	26 60       	ori	r18, 0x06	; 6
    10b0:	b2 2e       	mov	r11, r18
    10b2:	06 c0       	rjmp	.+12     	; 0x10c0 <vfprintf+0x278>
    10b4:	28 e0       	ldi	r18, 0x08	; 8
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x27c>
    10ba:	20 e1       	ldi	r18, 0x10	; 16
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	02 c0       	rjmp	.+4      	; 0x10c4 <vfprintf+0x27c>
    10c0:	20 e1       	ldi	r18, 0x10	; 16
    10c2:	32 e0       	ldi	r19, 0x02	; 2
    10c4:	f8 01       	movw	r30, r16
    10c6:	b7 fe       	sbrs	r11, 7
    10c8:	07 c0       	rjmp	.+14     	; 0x10d8 <vfprintf+0x290>
    10ca:	60 81       	ld	r22, Z
    10cc:	71 81       	ldd	r23, Z+1	; 0x01
    10ce:	82 81       	ldd	r24, Z+2	; 0x02
    10d0:	93 81       	ldd	r25, Z+3	; 0x03
    10d2:	0c 5f       	subi	r16, 0xFC	; 252
    10d4:	1f 4f       	sbci	r17, 0xFF	; 255
    10d6:	06 c0       	rjmp	.+12     	; 0x10e4 <vfprintf+0x29c>
    10d8:	60 81       	ld	r22, Z
    10da:	71 81       	ldd	r23, Z+1	; 0x01
    10dc:	80 e0       	ldi	r24, 0x00	; 0
    10de:	90 e0       	ldi	r25, 0x00	; 0
    10e0:	0e 5f       	subi	r16, 0xFE	; 254
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	a3 01       	movw	r20, r6
    10e6:	0e 94 57 09 	call	0x12ae	; 0x12ae <__ultoa_invert>
    10ea:	88 2e       	mov	r8, r24
    10ec:	86 18       	sub	r8, r6
    10ee:	fb 2d       	mov	r31, r11
    10f0:	ff 77       	andi	r31, 0x7F	; 127
    10f2:	3f 2e       	mov	r3, r31
    10f4:	36 fe       	sbrs	r3, 6
    10f6:	0d c0       	rjmp	.+26     	; 0x1112 <vfprintf+0x2ca>
    10f8:	23 2d       	mov	r18, r3
    10fa:	2e 7f       	andi	r18, 0xFE	; 254
    10fc:	a2 2e       	mov	r10, r18
    10fe:	89 14       	cp	r8, r9
    1100:	58 f4       	brcc	.+22     	; 0x1118 <vfprintf+0x2d0>
    1102:	34 fe       	sbrs	r3, 4
    1104:	0b c0       	rjmp	.+22     	; 0x111c <vfprintf+0x2d4>
    1106:	32 fc       	sbrc	r3, 2
    1108:	09 c0       	rjmp	.+18     	; 0x111c <vfprintf+0x2d4>
    110a:	83 2d       	mov	r24, r3
    110c:	8e 7e       	andi	r24, 0xEE	; 238
    110e:	a8 2e       	mov	r10, r24
    1110:	05 c0       	rjmp	.+10     	; 0x111c <vfprintf+0x2d4>
    1112:	b8 2c       	mov	r11, r8
    1114:	a3 2c       	mov	r10, r3
    1116:	03 c0       	rjmp	.+6      	; 0x111e <vfprintf+0x2d6>
    1118:	b8 2c       	mov	r11, r8
    111a:	01 c0       	rjmp	.+2      	; 0x111e <vfprintf+0x2d6>
    111c:	b9 2c       	mov	r11, r9
    111e:	a4 fe       	sbrs	r10, 4
    1120:	0f c0       	rjmp	.+30     	; 0x1140 <vfprintf+0x2f8>
    1122:	fe 01       	movw	r30, r28
    1124:	e8 0d       	add	r30, r8
    1126:	f1 1d       	adc	r31, r1
    1128:	80 81       	ld	r24, Z
    112a:	80 33       	cpi	r24, 0x30	; 48
    112c:	21 f4       	brne	.+8      	; 0x1136 <vfprintf+0x2ee>
    112e:	9a 2d       	mov	r25, r10
    1130:	99 7e       	andi	r25, 0xE9	; 233
    1132:	a9 2e       	mov	r10, r25
    1134:	09 c0       	rjmp	.+18     	; 0x1148 <vfprintf+0x300>
    1136:	a2 fe       	sbrs	r10, 2
    1138:	06 c0       	rjmp	.+12     	; 0x1146 <vfprintf+0x2fe>
    113a:	b3 94       	inc	r11
    113c:	b3 94       	inc	r11
    113e:	04 c0       	rjmp	.+8      	; 0x1148 <vfprintf+0x300>
    1140:	8a 2d       	mov	r24, r10
    1142:	86 78       	andi	r24, 0x86	; 134
    1144:	09 f0       	breq	.+2      	; 0x1148 <vfprintf+0x300>
    1146:	b3 94       	inc	r11
    1148:	a3 fc       	sbrc	r10, 3
    114a:	11 c0       	rjmp	.+34     	; 0x116e <vfprintf+0x326>
    114c:	a0 fe       	sbrs	r10, 0
    114e:	06 c0       	rjmp	.+12     	; 0x115c <vfprintf+0x314>
    1150:	b2 14       	cp	r11, r2
    1152:	88 f4       	brcc	.+34     	; 0x1176 <vfprintf+0x32e>
    1154:	28 0c       	add	r2, r8
    1156:	92 2c       	mov	r9, r2
    1158:	9b 18       	sub	r9, r11
    115a:	0e c0       	rjmp	.+28     	; 0x1178 <vfprintf+0x330>
    115c:	b2 14       	cp	r11, r2
    115e:	60 f4       	brcc	.+24     	; 0x1178 <vfprintf+0x330>
    1160:	b6 01       	movw	r22, r12
    1162:	80 e2       	ldi	r24, 0x20	; 32
    1164:	90 e0       	ldi	r25, 0x00	; 0
    1166:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    116a:	b3 94       	inc	r11
    116c:	f7 cf       	rjmp	.-18     	; 0x115c <vfprintf+0x314>
    116e:	b2 14       	cp	r11, r2
    1170:	18 f4       	brcc	.+6      	; 0x1178 <vfprintf+0x330>
    1172:	2b 18       	sub	r2, r11
    1174:	02 c0       	rjmp	.+4      	; 0x117a <vfprintf+0x332>
    1176:	98 2c       	mov	r9, r8
    1178:	21 2c       	mov	r2, r1
    117a:	a4 fe       	sbrs	r10, 4
    117c:	10 c0       	rjmp	.+32     	; 0x119e <vfprintf+0x356>
    117e:	b6 01       	movw	r22, r12
    1180:	80 e3       	ldi	r24, 0x30	; 48
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    1188:	a2 fe       	sbrs	r10, 2
    118a:	17 c0       	rjmp	.+46     	; 0x11ba <vfprintf+0x372>
    118c:	a1 fc       	sbrc	r10, 1
    118e:	03 c0       	rjmp	.+6      	; 0x1196 <vfprintf+0x34e>
    1190:	88 e7       	ldi	r24, 0x78	; 120
    1192:	90 e0       	ldi	r25, 0x00	; 0
    1194:	02 c0       	rjmp	.+4      	; 0x119a <vfprintf+0x352>
    1196:	88 e5       	ldi	r24, 0x58	; 88
    1198:	90 e0       	ldi	r25, 0x00	; 0
    119a:	b6 01       	movw	r22, r12
    119c:	0c c0       	rjmp	.+24     	; 0x11b6 <vfprintf+0x36e>
    119e:	8a 2d       	mov	r24, r10
    11a0:	86 78       	andi	r24, 0x86	; 134
    11a2:	59 f0       	breq	.+22     	; 0x11ba <vfprintf+0x372>
    11a4:	a1 fe       	sbrs	r10, 1
    11a6:	02 c0       	rjmp	.+4      	; 0x11ac <vfprintf+0x364>
    11a8:	8b e2       	ldi	r24, 0x2B	; 43
    11aa:	01 c0       	rjmp	.+2      	; 0x11ae <vfprintf+0x366>
    11ac:	80 e2       	ldi	r24, 0x20	; 32
    11ae:	a7 fc       	sbrc	r10, 7
    11b0:	8d e2       	ldi	r24, 0x2D	; 45
    11b2:	b6 01       	movw	r22, r12
    11b4:	90 e0       	ldi	r25, 0x00	; 0
    11b6:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    11ba:	89 14       	cp	r8, r9
    11bc:	38 f4       	brcc	.+14     	; 0x11cc <vfprintf+0x384>
    11be:	b6 01       	movw	r22, r12
    11c0:	80 e3       	ldi	r24, 0x30	; 48
    11c2:	90 e0       	ldi	r25, 0x00	; 0
    11c4:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    11c8:	9a 94       	dec	r9
    11ca:	f7 cf       	rjmp	.-18     	; 0x11ba <vfprintf+0x372>
    11cc:	8a 94       	dec	r8
    11ce:	f3 01       	movw	r30, r6
    11d0:	e8 0d       	add	r30, r8
    11d2:	f1 1d       	adc	r31, r1
    11d4:	80 81       	ld	r24, Z
    11d6:	b6 01       	movw	r22, r12
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    11de:	81 10       	cpse	r8, r1
    11e0:	f5 cf       	rjmp	.-22     	; 0x11cc <vfprintf+0x384>
    11e2:	22 20       	and	r2, r2
    11e4:	09 f4       	brne	.+2      	; 0x11e8 <vfprintf+0x3a0>
    11e6:	42 ce       	rjmp	.-892    	; 0xe6c <vfprintf+0x24>
    11e8:	b6 01       	movw	r22, r12
    11ea:	80 e2       	ldi	r24, 0x20	; 32
    11ec:	90 e0       	ldi	r25, 0x00	; 0
    11ee:	0e 94 1b 09 	call	0x1236	; 0x1236 <fputc>
    11f2:	2a 94       	dec	r2
    11f4:	f6 cf       	rjmp	.-20     	; 0x11e2 <vfprintf+0x39a>
    11f6:	f6 01       	movw	r30, r12
    11f8:	86 81       	ldd	r24, Z+6	; 0x06
    11fa:	97 81       	ldd	r25, Z+7	; 0x07
    11fc:	02 c0       	rjmp	.+4      	; 0x1202 <vfprintf+0x3ba>
    11fe:	8f ef       	ldi	r24, 0xFF	; 255
    1200:	9f ef       	ldi	r25, 0xFF	; 255
    1202:	2b 96       	adiw	r28, 0x0b	; 11
    1204:	e2 e1       	ldi	r30, 0x12	; 18
    1206:	0c 94 d1 09 	jmp	0x13a2	; 0x13a2 <__epilogue_restores__>

0000120a <strnlen_P>:
    120a:	fc 01       	movw	r30, r24
    120c:	05 90       	lpm	r0, Z+
    120e:	61 50       	subi	r22, 0x01	; 1
    1210:	70 40       	sbci	r23, 0x00	; 0
    1212:	01 10       	cpse	r0, r1
    1214:	d8 f7       	brcc	.-10     	; 0x120c <strnlen_P+0x2>
    1216:	80 95       	com	r24
    1218:	90 95       	com	r25
    121a:	8e 0f       	add	r24, r30
    121c:	9f 1f       	adc	r25, r31
    121e:	08 95       	ret

00001220 <strnlen>:
    1220:	fc 01       	movw	r30, r24
    1222:	61 50       	subi	r22, 0x01	; 1
    1224:	70 40       	sbci	r23, 0x00	; 0
    1226:	01 90       	ld	r0, Z+
    1228:	01 10       	cpse	r0, r1
    122a:	d8 f7       	brcc	.-10     	; 0x1222 <strnlen+0x2>
    122c:	80 95       	com	r24
    122e:	90 95       	com	r25
    1230:	8e 0f       	add	r24, r30
    1232:	9f 1f       	adc	r25, r31
    1234:	08 95       	ret

00001236 <fputc>:
    1236:	0f 93       	push	r16
    1238:	1f 93       	push	r17
    123a:	cf 93       	push	r28
    123c:	df 93       	push	r29
    123e:	fb 01       	movw	r30, r22
    1240:	23 81       	ldd	r18, Z+3	; 0x03
    1242:	21 fd       	sbrc	r18, 1
    1244:	03 c0       	rjmp	.+6      	; 0x124c <fputc+0x16>
    1246:	8f ef       	ldi	r24, 0xFF	; 255
    1248:	9f ef       	ldi	r25, 0xFF	; 255
    124a:	2c c0       	rjmp	.+88     	; 0x12a4 <fputc+0x6e>
    124c:	22 ff       	sbrs	r18, 2
    124e:	16 c0       	rjmp	.+44     	; 0x127c <fputc+0x46>
    1250:	46 81       	ldd	r20, Z+6	; 0x06
    1252:	57 81       	ldd	r21, Z+7	; 0x07
    1254:	24 81       	ldd	r18, Z+4	; 0x04
    1256:	35 81       	ldd	r19, Z+5	; 0x05
    1258:	42 17       	cp	r20, r18
    125a:	53 07       	cpc	r21, r19
    125c:	44 f4       	brge	.+16     	; 0x126e <fputc+0x38>
    125e:	a0 81       	ld	r26, Z
    1260:	b1 81       	ldd	r27, Z+1	; 0x01
    1262:	9d 01       	movw	r18, r26
    1264:	2f 5f       	subi	r18, 0xFF	; 255
    1266:	3f 4f       	sbci	r19, 0xFF	; 255
    1268:	31 83       	std	Z+1, r19	; 0x01
    126a:	20 83       	st	Z, r18
    126c:	8c 93       	st	X, r24
    126e:	26 81       	ldd	r18, Z+6	; 0x06
    1270:	37 81       	ldd	r19, Z+7	; 0x07
    1272:	2f 5f       	subi	r18, 0xFF	; 255
    1274:	3f 4f       	sbci	r19, 0xFF	; 255
    1276:	37 83       	std	Z+7, r19	; 0x07
    1278:	26 83       	std	Z+6, r18	; 0x06
    127a:	14 c0       	rjmp	.+40     	; 0x12a4 <fputc+0x6e>
    127c:	8b 01       	movw	r16, r22
    127e:	ec 01       	movw	r28, r24
    1280:	fb 01       	movw	r30, r22
    1282:	00 84       	ldd	r0, Z+8	; 0x08
    1284:	f1 85       	ldd	r31, Z+9	; 0x09
    1286:	e0 2d       	mov	r30, r0
    1288:	09 95       	icall
    128a:	89 2b       	or	r24, r25
    128c:	e1 f6       	brne	.-72     	; 0x1246 <fputc+0x10>
    128e:	d8 01       	movw	r26, r16
    1290:	16 96       	adiw	r26, 0x06	; 6
    1292:	8d 91       	ld	r24, X+
    1294:	9c 91       	ld	r25, X
    1296:	17 97       	sbiw	r26, 0x07	; 7
    1298:	01 96       	adiw	r24, 0x01	; 1
    129a:	17 96       	adiw	r26, 0x07	; 7
    129c:	9c 93       	st	X, r25
    129e:	8e 93       	st	-X, r24
    12a0:	16 97       	sbiw	r26, 0x06	; 6
    12a2:	ce 01       	movw	r24, r28
    12a4:	df 91       	pop	r29
    12a6:	cf 91       	pop	r28
    12a8:	1f 91       	pop	r17
    12aa:	0f 91       	pop	r16
    12ac:	08 95       	ret

000012ae <__ultoa_invert>:
    12ae:	fa 01       	movw	r30, r20
    12b0:	aa 27       	eor	r26, r26
    12b2:	28 30       	cpi	r18, 0x08	; 8
    12b4:	51 f1       	breq	.+84     	; 0x130a <__ultoa_invert+0x5c>
    12b6:	20 31       	cpi	r18, 0x10	; 16
    12b8:	81 f1       	breq	.+96     	; 0x131a <__ultoa_invert+0x6c>
    12ba:	e8 94       	clt
    12bc:	6f 93       	push	r22
    12be:	6e 7f       	andi	r22, 0xFE	; 254
    12c0:	6e 5f       	subi	r22, 0xFE	; 254
    12c2:	7f 4f       	sbci	r23, 0xFF	; 255
    12c4:	8f 4f       	sbci	r24, 0xFF	; 255
    12c6:	9f 4f       	sbci	r25, 0xFF	; 255
    12c8:	af 4f       	sbci	r26, 0xFF	; 255
    12ca:	b1 e0       	ldi	r27, 0x01	; 1
    12cc:	3e d0       	rcall	.+124    	; 0x134a <__ultoa_invert+0x9c>
    12ce:	b4 e0       	ldi	r27, 0x04	; 4
    12d0:	3c d0       	rcall	.+120    	; 0x134a <__ultoa_invert+0x9c>
    12d2:	67 0f       	add	r22, r23
    12d4:	78 1f       	adc	r23, r24
    12d6:	89 1f       	adc	r24, r25
    12d8:	9a 1f       	adc	r25, r26
    12da:	a1 1d       	adc	r26, r1
    12dc:	68 0f       	add	r22, r24
    12de:	79 1f       	adc	r23, r25
    12e0:	8a 1f       	adc	r24, r26
    12e2:	91 1d       	adc	r25, r1
    12e4:	a1 1d       	adc	r26, r1
    12e6:	6a 0f       	add	r22, r26
    12e8:	71 1d       	adc	r23, r1
    12ea:	81 1d       	adc	r24, r1
    12ec:	91 1d       	adc	r25, r1
    12ee:	a1 1d       	adc	r26, r1
    12f0:	20 d0       	rcall	.+64     	; 0x1332 <__ultoa_invert+0x84>
    12f2:	09 f4       	brne	.+2      	; 0x12f6 <__ultoa_invert+0x48>
    12f4:	68 94       	set
    12f6:	3f 91       	pop	r19
    12f8:	2a e0       	ldi	r18, 0x0A	; 10
    12fa:	26 9f       	mul	r18, r22
    12fc:	11 24       	eor	r1, r1
    12fe:	30 19       	sub	r19, r0
    1300:	30 5d       	subi	r19, 0xD0	; 208
    1302:	31 93       	st	Z+, r19
    1304:	de f6       	brtc	.-74     	; 0x12bc <__ultoa_invert+0xe>
    1306:	cf 01       	movw	r24, r30
    1308:	08 95       	ret
    130a:	46 2f       	mov	r20, r22
    130c:	47 70       	andi	r20, 0x07	; 7
    130e:	40 5d       	subi	r20, 0xD0	; 208
    1310:	41 93       	st	Z+, r20
    1312:	b3 e0       	ldi	r27, 0x03	; 3
    1314:	0f d0       	rcall	.+30     	; 0x1334 <__ultoa_invert+0x86>
    1316:	c9 f7       	brne	.-14     	; 0x130a <__ultoa_invert+0x5c>
    1318:	f6 cf       	rjmp	.-20     	; 0x1306 <__ultoa_invert+0x58>
    131a:	46 2f       	mov	r20, r22
    131c:	4f 70       	andi	r20, 0x0F	; 15
    131e:	40 5d       	subi	r20, 0xD0	; 208
    1320:	4a 33       	cpi	r20, 0x3A	; 58
    1322:	18 f0       	brcs	.+6      	; 0x132a <__ultoa_invert+0x7c>
    1324:	49 5d       	subi	r20, 0xD9	; 217
    1326:	31 fd       	sbrc	r19, 1
    1328:	40 52       	subi	r20, 0x20	; 32
    132a:	41 93       	st	Z+, r20
    132c:	02 d0       	rcall	.+4      	; 0x1332 <__ultoa_invert+0x84>
    132e:	a9 f7       	brne	.-22     	; 0x131a <__ultoa_invert+0x6c>
    1330:	ea cf       	rjmp	.-44     	; 0x1306 <__ultoa_invert+0x58>
    1332:	b4 e0       	ldi	r27, 0x04	; 4
    1334:	a6 95       	lsr	r26
    1336:	97 95       	ror	r25
    1338:	87 95       	ror	r24
    133a:	77 95       	ror	r23
    133c:	67 95       	ror	r22
    133e:	ba 95       	dec	r27
    1340:	c9 f7       	brne	.-14     	; 0x1334 <__ultoa_invert+0x86>
    1342:	00 97       	sbiw	r24, 0x00	; 0
    1344:	61 05       	cpc	r22, r1
    1346:	71 05       	cpc	r23, r1
    1348:	08 95       	ret
    134a:	9b 01       	movw	r18, r22
    134c:	ac 01       	movw	r20, r24
    134e:	0a 2e       	mov	r0, r26
    1350:	06 94       	lsr	r0
    1352:	57 95       	ror	r21
    1354:	47 95       	ror	r20
    1356:	37 95       	ror	r19
    1358:	27 95       	ror	r18
    135a:	ba 95       	dec	r27
    135c:	c9 f7       	brne	.-14     	; 0x1350 <__ultoa_invert+0xa2>
    135e:	62 0f       	add	r22, r18
    1360:	73 1f       	adc	r23, r19
    1362:	84 1f       	adc	r24, r20
    1364:	95 1f       	adc	r25, r21
    1366:	a0 1d       	adc	r26, r0
    1368:	08 95       	ret

0000136a <__prologue_saves__>:
    136a:	2f 92       	push	r2
    136c:	3f 92       	push	r3
    136e:	4f 92       	push	r4
    1370:	5f 92       	push	r5
    1372:	6f 92       	push	r6
    1374:	7f 92       	push	r7
    1376:	8f 92       	push	r8
    1378:	9f 92       	push	r9
    137a:	af 92       	push	r10
    137c:	bf 92       	push	r11
    137e:	cf 92       	push	r12
    1380:	df 92       	push	r13
    1382:	ef 92       	push	r14
    1384:	ff 92       	push	r15
    1386:	0f 93       	push	r16
    1388:	1f 93       	push	r17
    138a:	cf 93       	push	r28
    138c:	df 93       	push	r29
    138e:	cd b7       	in	r28, 0x3d	; 61
    1390:	de b7       	in	r29, 0x3e	; 62
    1392:	ca 1b       	sub	r28, r26
    1394:	db 0b       	sbc	r29, r27
    1396:	0f b6       	in	r0, 0x3f	; 63
    1398:	f8 94       	cli
    139a:	de bf       	out	0x3e, r29	; 62
    139c:	0f be       	out	0x3f, r0	; 63
    139e:	cd bf       	out	0x3d, r28	; 61
    13a0:	09 94       	ijmp

000013a2 <__epilogue_restores__>:
    13a2:	2a 88       	ldd	r2, Y+18	; 0x12
    13a4:	39 88       	ldd	r3, Y+17	; 0x11
    13a6:	48 88       	ldd	r4, Y+16	; 0x10
    13a8:	5f 84       	ldd	r5, Y+15	; 0x0f
    13aa:	6e 84       	ldd	r6, Y+14	; 0x0e
    13ac:	7d 84       	ldd	r7, Y+13	; 0x0d
    13ae:	8c 84       	ldd	r8, Y+12	; 0x0c
    13b0:	9b 84       	ldd	r9, Y+11	; 0x0b
    13b2:	aa 84       	ldd	r10, Y+10	; 0x0a
    13b4:	b9 84       	ldd	r11, Y+9	; 0x09
    13b6:	c8 84       	ldd	r12, Y+8	; 0x08
    13b8:	df 80       	ldd	r13, Y+7	; 0x07
    13ba:	ee 80       	ldd	r14, Y+6	; 0x06
    13bc:	fd 80       	ldd	r15, Y+5	; 0x05
    13be:	0c 81       	ldd	r16, Y+4	; 0x04
    13c0:	1b 81       	ldd	r17, Y+3	; 0x03
    13c2:	aa 81       	ldd	r26, Y+2	; 0x02
    13c4:	b9 81       	ldd	r27, Y+1	; 0x01
    13c6:	ce 0f       	add	r28, r30
    13c8:	d1 1d       	adc	r29, r1
    13ca:	0f b6       	in	r0, 0x3f	; 63
    13cc:	f8 94       	cli
    13ce:	de bf       	out	0x3e, r29	; 62
    13d0:	0f be       	out	0x3f, r0	; 63
    13d2:	cd bf       	out	0x3d, r28	; 61
    13d4:	ed 01       	movw	r28, r26
    13d6:	08 95       	ret

000013d8 <_exit>:
    13d8:	f8 94       	cli

000013da <__stop_program>:
    13da:	ff cf       	rjmp	.-2      	; 0x13da <__stop_program>
