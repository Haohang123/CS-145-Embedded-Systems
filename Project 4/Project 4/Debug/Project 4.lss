
Project 4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001384  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000088  00800060  00001384  00001418  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000c  008000e8  008000e8  000014a0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000014fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00001538  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fdd  00000000  00000000  00001618  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000008ec  00000000  00000000  000025f5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000082c  00000000  00000000  00002ee1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000220  00000000  00000000  00003710  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000050f  00000000  00000000  00003930  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000799  00000000  00000000  00003e3f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000045d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e4 e8       	ldi	r30, 0x84	; 132
      68:	f3 e1       	ldi	r31, 0x13	; 19
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a8 3e       	cpi	r26, 0xE8	; 232
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
      76:	20 e0       	ldi	r18, 0x00	; 0
      78:	a8 ee       	ldi	r26, 0xE8	; 232
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a4 3f       	cpi	r26, 0xF4	; 244
      82:	b2 07       	cpc	r27, r18
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 1b 03 	call	0x636	; 0x636 <main>
      8a:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <avr_init>:
#include "avr.h"

void
avr_init(void)
{
	WDTCR = 15;
      92:	8f e0       	ldi	r24, 0x0F	; 15
      94:	81 bd       	out	0x21, r24	; 33
      96:	08 95       	ret

00000098 <avr_wait>:
}

void
avr_wait(unsigned short subsec)
{
      98:	9c 01       	movw	r18, r24
	TCCR0 = 3;
      9a:	83 e0       	ldi	r24, 0x03	; 3
      9c:	83 bf       	out	0x33, r24	; 51
	while (subsec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
      9e:	88 eb       	ldi	r24, 0xB8	; 184

void
avr_wait(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      a0:	08 c0       	rjmp	.+16     	; 0xb2 <avr_wait+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
      a2:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      a4:	98 b7       	in	r25, 0x38	; 56
      a6:	91 60       	ori	r25, 0x01	; 1
      a8:	98 bf       	out	0x38, r25	; 56
		WDR();
      aa:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
      ac:	08 b6       	in	r0, 0x38	; 56
      ae:	00 fe       	sbrs	r0, 0
      b0:	fd cf       	rjmp	.-6      	; 0xac <avr_wait+0x14>

void
avr_wait(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      b2:	21 50       	subi	r18, 0x01	; 1
      b4:	31 09       	sbc	r19, r1
      b6:	a8 f7       	brcc	.-22     	; 0xa2 <avr_wait+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64));
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      b8:	13 be       	out	0x33, r1	; 51
      ba:	08 95       	ret

000000bc <avr_wait2>:
}

void
avr_wait2(unsigned short subsec)
{
      bc:	9c 01       	movw	r18, r24
	TCCR0 = 3;
      be:	83 e0       	ldi	r24, 0x03	; 3
      c0:	83 bf       	out	0x33, r24	; 51
	while (subsec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
      c2:	89 ef       	ldi	r24, 0xF9	; 249

void
avr_wait2(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      c4:	08 c0       	rjmp	.+16     	; 0xd6 <avr_wait2+0x1a>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
      c6:	82 bf       	out	0x32, r24	; 50
		SET_BIT(TIFR, TOV0);
      c8:	98 b7       	in	r25, 0x38	; 56
      ca:	91 60       	ori	r25, 0x01	; 1
      cc:	98 bf       	out	0x38, r25	; 56
		WDR();
      ce:	a8 95       	wdr
		while (!GET_BIT(TIFR, TOV0));
      d0:	08 b6       	in	r0, 0x38	; 56
      d2:	00 fe       	sbrs	r0, 0
      d4:	fd cf       	rjmp	.-6      	; 0xd0 <avr_wait2+0x14>

void
avr_wait2(unsigned short subsec)
{
	TCCR0 = 3;
	while (subsec--) {
      d6:	21 50       	subi	r18, 0x01	; 1
      d8:	31 09       	sbc	r19, r1
      da:	a8 f7       	brcc	.-22     	; 0xc6 <avr_wait2+0xa>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00005);
		SET_BIT(TIFR, TOV0);
		WDR();
		while (!GET_BIT(TIFR, TOV0));
	}
	TCCR0 = 0;
      dc:	13 be       	out	0x33, r1	; 51
      de:	08 95       	ret

000000e0 <output>:
{
	char c;
	while ((c = pgm_read_byte(s++)) != 0) {
		write(c, 1);
	}
}
      e0:	66 23       	and	r22, r22
      e2:	11 f0       	breq	.+4      	; 0xe8 <output+0x8>
      e4:	c0 9a       	sbi	0x18, 0	; 24
      e6:	01 c0       	rjmp	.+2      	; 0xea <output+0xa>
      e8:	c0 98       	cbi	0x18, 0	; 24
      ea:	c1 98       	cbi	0x18, 1	; 24
      ec:	82 bb       	out	0x12, r24	; 18
      ee:	8f ef       	ldi	r24, 0xFF	; 255
      f0:	81 bb       	out	0x11, r24	; 17
      f2:	c2 9a       	sbi	0x18, 2	; 24
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	00 00       	nop
      fa:	c2 98       	cbi	0x18, 2	; 24
      fc:	08 95       	ret

000000fe <write>:
      fe:	c0 98       	cbi	0x18, 0	; 24
     100:	c1 9a       	sbi	0x18, 1	; 24
     102:	11 ba       	out	0x11, r1	; 17
     104:	90 b3       	in	r25, 0x10	; 16
     106:	c2 9a       	sbi	0x18, 2	; 24
     108:	00 00       	nop
     10a:	00 00       	nop
     10c:	00 00       	nop
     10e:	11 ba       	out	0x11, r1	; 17
     110:	90 b3       	in	r25, 0x10	; 16
     112:	c2 98       	cbi	0x18, 2	; 24
     114:	99 23       	and	r25, r25
     116:	9c f3       	brlt	.-26     	; 0xfe <write>
     118:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     11c:	08 95       	ret

0000011e <lcd_init>:
     11e:	b8 9a       	sbi	0x17, 0	; 23
     120:	b9 9a       	sbi	0x17, 1	; 23
     122:	ba 9a       	sbi	0x17, 2	; 23
     124:	80 e1       	ldi	r24, 0x10	; 16
     126:	90 e0       	ldi	r25, 0x00	; 0
     128:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     12c:	60 e0       	ldi	r22, 0x00	; 0
     12e:	80 e3       	ldi	r24, 0x30	; 48
     130:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     134:	85 e0       	ldi	r24, 0x05	; 5
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     13c:	60 e0       	ldi	r22, 0x00	; 0
     13e:	80 e3       	ldi	r24, 0x30	; 48
     140:	0e 94 70 00 	call	0xe0	; 0xe0 <output>
     144:	81 e0       	ldi	r24, 0x01	; 1
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
     14c:	60 e0       	ldi	r22, 0x00	; 0
     14e:	8c e3       	ldi	r24, 0x3C	; 60
     150:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     154:	60 e0       	ldi	r22, 0x00	; 0
     156:	8c e0       	ldi	r24, 0x0C	; 12
     158:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     15c:	60 e0       	ldi	r22, 0x00	; 0
     15e:	86 e0       	ldi	r24, 0x06	; 6
     160:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     164:	60 e0       	ldi	r22, 0x00	; 0
     166:	81 e0       	ldi	r24, 0x01	; 1
     168:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     16c:	08 95       	ret

0000016e <lcd_clr>:
     16e:	60 e0       	ldi	r22, 0x00	; 0
     170:	81 e0       	ldi	r24, 0x01	; 1
     172:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     176:	08 95       	ret

00000178 <lcd_pos>:
     178:	cf 93       	push	r28
     17a:	c6 2f       	mov	r28, r22
     17c:	98 e2       	ldi	r25, 0x28	; 40
     17e:	89 9f       	mul	r24, r25
     180:	c0 0d       	add	r28, r0
     182:	11 24       	eor	r1, r1
     184:	60 e0       	ldi	r22, 0x00	; 0
     186:	82 e0       	ldi	r24, 0x02	; 2
     188:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     18c:	cc 23       	and	r28, r28
     18e:	31 f0       	breq	.+12     	; 0x19c <lcd_pos+0x24>
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	84 e1       	ldi	r24, 0x14	; 20
     194:	0e 94 7f 00 	call	0xfe	; 0xfe <write>
     198:	c1 50       	subi	r28, 0x01	; 1
     19a:	d1 f7       	brne	.-12     	; 0x190 <lcd_pos+0x18>
     19c:	cf 91       	pop	r28
     19e:	08 95       	ret

000001a0 <lcd_puts2>:

void
lcd_puts2(const char *s)
{
     1a0:	cf 93       	push	r28
     1a2:	df 93       	push	r29
	char c;
	while ((c = *(s++)) != 0) {
     1a4:	ec 01       	movw	r28, r24
     1a6:	21 96       	adiw	r28, 0x01	; 1
     1a8:	fc 01       	movw	r30, r24
     1aa:	80 81       	ld	r24, Z
     1ac:	88 23       	and	r24, r24
     1ae:	31 f0       	breq	.+12     	; 0x1bc <lcd_puts2+0x1c>
		write(c, 1);
     1b0:	61 e0       	ldi	r22, 0x01	; 1
     1b2:	0e 94 7f 00 	call	0xfe	; 0xfe <write>

void
lcd_puts2(const char *s)
{
	char c;
	while ((c = *(s++)) != 0) {
     1b6:	89 91       	ld	r24, Y+
     1b8:	81 11       	cpse	r24, r1
     1ba:	fa cf       	rjmp	.-12     	; 0x1b0 <lcd_puts2+0x10>
		write(c, 1);
	}
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <is_pressed>:
	'4', '5', '6', 'B',
	'7', '8', '9', 'C',
	'*', '0', '#', 'D'
};

int is_pressed(int row, int col) {
     1c2:	cf 93       	push	r28
     1c4:	df 93       	push	r29
	DDRC = 0;
     1c6:	14 ba       	out	0x14, r1	; 20
	PORTC = 0;
     1c8:	15 ba       	out	0x15, r1	; 21
	
	SET_BIT(DDRC, row);
     1ca:	44 b3       	in	r20, 0x14	; 20
     1cc:	21 e0       	ldi	r18, 0x01	; 1
     1ce:	30 e0       	ldi	r19, 0x00	; 0
     1d0:	f9 01       	movw	r30, r18
     1d2:	02 c0       	rjmp	.+4      	; 0x1d8 <is_pressed+0x16>
     1d4:	ee 0f       	add	r30, r30
     1d6:	ff 1f       	adc	r31, r31
     1d8:	8a 95       	dec	r24
     1da:	e2 f7       	brpl	.-8      	; 0x1d4 <is_pressed+0x12>
     1dc:	cf 01       	movw	r24, r30
     1de:	84 2b       	or	r24, r20
     1e0:	84 bb       	out	0x14, r24	; 20
	SET_BIT(PORTC, col + 4);
     1e2:	85 b3       	in	r24, 0x15	; 21
     1e4:	eb 01       	movw	r28, r22
     1e6:	24 96       	adiw	r28, 0x04	; 4
     1e8:	0c 2e       	mov	r0, r28
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <is_pressed+0x2e>
     1ec:	22 0f       	add	r18, r18
     1ee:	33 1f       	adc	r19, r19
     1f0:	0a 94       	dec	r0
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <is_pressed+0x2a>
     1f4:	28 2b       	or	r18, r24
     1f6:	25 bb       	out	0x15, r18	; 21
	avr_wait(1);
     1f8:	81 e0       	ldi	r24, 0x01	; 1
     1fa:	90 e0       	ldi	r25, 0x00	; 0
     1fc:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
	
	if (GET_BIT(PINC,col + 4)) {
     200:	23 b3       	in	r18, 0x13	; 19
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	02 c0       	rjmp	.+4      	; 0x20a <is_pressed+0x48>
     206:	35 95       	asr	r19
     208:	27 95       	ror	r18
     20a:	ca 95       	dec	r28
     20c:	e2 f7       	brpl	.-8      	; 0x206 <is_pressed+0x44>
     20e:	81 e0       	ldi	r24, 0x01	; 1
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	20 ff       	sbrs	r18, 0
     214:	02 c0       	rjmp	.+4      	; 0x21a <is_pressed+0x58>
     216:	80 e0       	ldi	r24, 0x00	; 0
     218:	90 e0       	ldi	r25, 0x00	; 0
		return 0;
	}
	
	return 1;
}
     21a:	df 91       	pop	r29
     21c:	cf 91       	pop	r28
     21e:	08 95       	ret

00000220 <get_key>:

int get_key() {
     220:	0f 93       	push	r16
     222:	1f 93       	push	r17
     224:	cf 93       	push	r28
     226:	df 93       	push	r29
	int row, col;
	for (row = 0; row < 4; ++row) {
     228:	00 e0       	ldi	r16, 0x00	; 0
     22a:	10 e0       	ldi	r17, 0x00	; 0
     22c:	18 c0       	rjmp	.+48     	; 0x25e <get_key+0x3e>
		for (col = 0; col < 4; ++col) {
			if (is_pressed(row,col)) {
     22e:	be 01       	movw	r22, r28
     230:	c8 01       	movw	r24, r16
     232:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <is_pressed>
     236:	00 97       	sbiw	r24, 0x00	; 0
     238:	49 f0       	breq	.+18     	; 0x24c <get_key+0x2c>
				return (row * 4) + col + 1;
     23a:	00 0f       	add	r16, r16
     23c:	11 1f       	adc	r17, r17
     23e:	00 0f       	add	r16, r16
     240:	11 1f       	adc	r17, r17
     242:	c0 0f       	add	r28, r16
     244:	d1 1f       	adc	r29, r17
     246:	ce 01       	movw	r24, r28
     248:	01 96       	adiw	r24, 0x01	; 1
     24a:	0c c0       	rjmp	.+24     	; 0x264 <get_key+0x44>
}

int get_key() {
	int row, col;
	for (row = 0; row < 4; ++row) {
		for (col = 0; col < 4; ++col) {
     24c:	21 96       	adiw	r28, 0x01	; 1
     24e:	c4 30       	cpi	r28, 0x04	; 4
     250:	d1 05       	cpc	r29, r1
     252:	69 f7       	brne	.-38     	; 0x22e <get_key+0xe>
	return 1;
}

int get_key() {
	int row, col;
	for (row = 0; row < 4; ++row) {
     254:	0f 5f       	subi	r16, 0xFF	; 255
     256:	1f 4f       	sbci	r17, 0xFF	; 255
     258:	04 30       	cpi	r16, 0x04	; 4
     25a:	11 05       	cpc	r17, r1
     25c:	19 f0       	breq	.+6      	; 0x264 <get_key+0x44>
	}
	
	return 1;
}

int get_key() {
     25e:	c0 e0       	ldi	r28, 0x00	; 0
     260:	d0 e0       	ldi	r29, 0x00	; 0
     262:	e5 cf       	rjmp	.-54     	; 0x22e <get_key+0xe>
				return (row * 4) + col + 1;
			}
		}
	}
	return 0;
}
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	1f 91       	pop	r17
     26a:	0f 91       	pop	r16
     26c:	08 95       	ret

0000026e <play_note>:

void play_note(int frequency,int duration) {
     26e:	cf 92       	push	r12
     270:	df 92       	push	r13
     272:	ef 92       	push	r14
     274:	ff 92       	push	r15
     276:	0f 93       	push	r16
     278:	1f 93       	push	r17
     27a:	cf 93       	push	r28
     27c:	df 93       	push	r29
     27e:	eb 01       	movw	r28, r22
	float TH_TL_MODIFIER = 1.0;
	int total_time = ceil((20000.0 / frequency));
     280:	bc 01       	movw	r22, r24
     282:	99 0f       	add	r25, r25
     284:	88 0b       	sbc	r24, r24
     286:	99 0b       	sbc	r25, r25
     288:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     28c:	9b 01       	movw	r18, r22
     28e:	ac 01       	movw	r20, r24
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	70 e4       	ldi	r23, 0x40	; 64
     294:	8c e9       	ldi	r24, 0x9C	; 156
     296:	96 e4       	ldi	r25, 0x46	; 70
     298:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__divsf3>
     29c:	0e 94 44 04 	call	0x888	; 0x888 <ceil>
     2a0:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     2a4:	9b 01       	movw	r18, r22
	int TH = total_time/2 * TH_TL_MODIFIER;
     2a6:	8b 01       	movw	r16, r22
     2a8:	77 23       	and	r23, r23
     2aa:	14 f4       	brge	.+4      	; 0x2b0 <play_note+0x42>
     2ac:	0f 5f       	subi	r16, 0xFF	; 255
     2ae:	1f 4f       	sbci	r17, 0xFF	; 255
     2b0:	15 95       	asr	r17
     2b2:	07 95       	ror	r16
	
	if(TH== total_time) {
     2b4:	20 17       	cp	r18, r16
     2b6:	31 07       	cpc	r19, r17
     2b8:	19 f4       	brne	.+6      	; 0x2c0 <play_note+0x52>
		TH--;
     2ba:	8b 01       	movw	r16, r22
     2bc:	01 50       	subi	r16, 0x01	; 1
     2be:	11 09       	sbc	r17, r1
	}
	int TL= total_time-TH;
     2c0:	6b 01       	movw	r12, r22
     2c2:	c0 1a       	sub	r12, r16
     2c4:	d1 0a       	sbc	r13, r17
	
	int duration_runs = duration*85 / total_time;
     2c6:	45 e5       	ldi	r20, 0x55	; 85
     2c8:	4c 9f       	mul	r20, r28
     2ca:	c0 01       	movw	r24, r0
     2cc:	4d 9f       	mul	r20, r29
     2ce:	90 0d       	add	r25, r0
     2d0:	11 24       	eor	r1, r1
     2d2:	b9 01       	movw	r22, r18
     2d4:	0e 94 6d 06 	call	0xcda	; 0xcda <__divmodhi4>
     2d8:	7b 01       	movw	r14, r22
	for (int i = 0; i < duration_runs; ++i) {
     2da:	16 16       	cp	r1, r22
     2dc:	17 06       	cpc	r1, r23
     2de:	74 f4       	brge	.+28     	; 0x2fc <play_note+0x8e>
     2e0:	c0 e0       	ldi	r28, 0x00	; 0
     2e2:	d0 e0       	ldi	r29, 0x00	; 0
		SET_BIT(PORTB,3);
     2e4:	c3 9a       	sbi	0x18, 3	; 24
		avr_wait2(TH);
     2e6:	c8 01       	movw	r24, r16
     2e8:	0e 94 5e 00 	call	0xbc	; 0xbc <avr_wait2>
		CLR_BIT(PORTB,3);
     2ec:	c3 98       	cbi	0x18, 3	; 24
		avr_wait2(TL);
     2ee:	c6 01       	movw	r24, r12
     2f0:	0e 94 5e 00 	call	0xbc	; 0xbc <avr_wait2>
		TH--;
	}
	int TL= total_time-TH;
	
	int duration_runs = duration*85 / total_time;
	for (int i = 0; i < duration_runs; ++i) {
     2f4:	21 96       	adiw	r28, 0x01	; 1
     2f6:	ec 16       	cp	r14, r28
     2f8:	fd 06       	cpc	r15, r29
     2fa:	a1 f7       	brne	.-24     	; 0x2e4 <play_note+0x76>
		SET_BIT(PORTB,3);
		avr_wait2(TH);
		CLR_BIT(PORTB,3);
		avr_wait2(TL);
	}
}
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	1f 91       	pop	r17
     302:	0f 91       	pop	r16
     304:	ff 90       	pop	r15
     306:	ef 90       	pop	r14
     308:	df 90       	pop	r13
     30a:	cf 90       	pop	r12
     30c:	08 95       	ret

0000030e <AD_init>:

void AD_init() {
	ADMUX=(1<<REFS0);
     30e:	80 e4       	ldi	r24, 0x40	; 64
     310:	87 b9       	out	0x07, r24	; 7
	ADCSRA=(1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0);
     312:	87 e0       	ldi	r24, 0x07	; 7
     314:	86 b9       	out	0x06, r24	; 6
     316:	08 95       	ret

00000318 <get_AD>:
}

unsigned int get_AD() {
	unsigned x;
	ADMUX |= 0;
     318:	87 b1       	in	r24, 0x07	; 7
     31a:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1<<ADSC) | (1<<ADEN);
     31c:	86 b1       	in	r24, 0x06	; 6
     31e:	80 6c       	ori	r24, 0xC0	; 192
     320:	86 b9       	out	0x06, r24	; 6
	while(! (ADCSRA & (1<<ADIF) ));
     322:	34 9b       	sbis	0x06, 4	; 6
     324:	fe cf       	rjmp	.-4      	; 0x322 <get_AD+0xa>
	ADCSRA |= (1<<ADIF) | (0<<ADEN);
     326:	34 9a       	sbi	0x06, 4	; 6
	x = ADC;
     328:	84 b1       	in	r24, 0x04	; 4
     32a:	95 b1       	in	r25, 0x05	; 5
	return (x);
}
     32c:	08 95       	ret

0000032e <reset>:

void reset() {
	STATE = 0;
     32e:	10 92 f3 00 	sts	0x00F3, r1	; 0x8000f3 <STATE+0x1>
     332:	10 92 f2 00 	sts	0x00F2, r1	; 0x8000f2 <STATE>
	HIGH = 0;
     336:	10 92 f1 00 	sts	0x00F1, r1	; 0x8000f1 <HIGH+0x1>
     33a:	10 92 f0 00 	sts	0x00F0, r1	; 0x8000f0 <HIGH>
	LOW = 1024;
     33e:	80 e0       	ldi	r24, 0x00	; 0
     340:	94 e0       	ldi	r25, 0x04	; 4
     342:	90 93 9a 00 	sts	0x009A, r25	; 0x80009a <LOW+0x1>
     346:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <LOW>
	TOTAL_IV = 0;
     34a:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <TOTAL_IV>
     34e:	10 92 ed 00 	sts	0x00ED, r1	; 0x8000ed <TOTAL_IV+0x1>
     352:	10 92 ee 00 	sts	0x00EE, r1	; 0x8000ee <TOTAL_IV+0x2>
     356:	10 92 ef 00 	sts	0x00EF, r1	; 0x8000ef <TOTAL_IV+0x3>
	CURRENT_IV = 0;
     35a:	10 92 eb 00 	sts	0x00EB, r1	; 0x8000eb <CURRENT_IV+0x1>
     35e:	10 92 ea 00 	sts	0x00EA, r1	; 0x8000ea <CURRENT_IV>
	TOTAL_SAMPLES = 0;
     362:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__data_end+0x1>
     366:	10 92 e8 00 	sts	0x00E8, r1	; 0x8000e8 <__data_end>
     36a:	08 95       	ret

0000036c <print_lcd>:
}

void print_lcd() {
     36c:	4f 92       	push	r4
     36e:	5f 92       	push	r5
     370:	6f 92       	push	r6
     372:	7f 92       	push	r7
     374:	8f 92       	push	r8
     376:	9f 92       	push	r9
     378:	af 92       	push	r10
     37a:	bf 92       	push	r11
     37c:	cf 92       	push	r12
     37e:	df 92       	push	r13
     380:	ef 92       	push	r14
     382:	ff 92       	push	r15
     384:	cf 93       	push	r28
     386:	df 93       	push	r29
     388:	cd b7       	in	r28, 0x3d	; 61
     38a:	de b7       	in	r29, 0x3e	; 62
     38c:	ac 97       	sbiw	r28, 0x2c	; 44
     38e:	0f b6       	in	r0, 0x3f	; 63
     390:	f8 94       	cli
     392:	de bf       	out	0x3e, r29	; 62
     394:	0f be       	out	0x3f, r0	; 63
     396:	cd bf       	out	0x3d, r28	; 61
	char buf1[16]; char buf2[16];
	
	if (STATE == 0) {
     398:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <STATE>
     39c:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <STATE+0x1>
     3a0:	89 2b       	or	r24, r25
     3a2:	99 f4       	brne	.+38     	; 0x3ca <print_lcd+0x5e>
			sprintf(buf1, "IV:---- AV:----");
     3a4:	80 e1       	ldi	r24, 0x10	; 16
     3a6:	e7 ec       	ldi	r30, 0xC7	; 199
     3a8:	f0 e0       	ldi	r31, 0x00	; 0
     3aa:	de 01       	movw	r26, r28
     3ac:	11 96       	adiw	r26, 0x01	; 1
     3ae:	01 90       	ld	r0, Z+
     3b0:	0d 92       	st	X+, r0
     3b2:	8a 95       	dec	r24
     3b4:	e1 f7       	brne	.-8      	; 0x3ae <print_lcd+0x42>
			sprintf(buf2, "HI:---- LO:----");
     3b6:	80 e1       	ldi	r24, 0x10	; 16
     3b8:	e7 ed       	ldi	r30, 0xD7	; 215
     3ba:	f0 e0       	ldi	r31, 0x00	; 0
     3bc:	de 01       	movw	r26, r28
     3be:	51 96       	adiw	r26, 0x11	; 17
     3c0:	01 90       	ld	r0, Z+
     3c2:	0d 92       	st	X+, r0
     3c4:	8a 95       	dec	r24
     3c6:	e1 f7       	brne	.-8      	; 0x3c0 <print_lcd+0x54>
     3c8:	13 c1       	rjmp	.+550    	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
	}
	else {
		float high_converted = (float)(HIGH * 5.0/1024);
     3ca:	60 91 f0 00 	lds	r22, 0x00F0	; 0x8000f0 <HIGH>
     3ce:	70 91 f1 00 	lds	r23, 0x00F1	; 0x8000f1 <HIGH+0x1>
     3d2:	07 2e       	mov	r0, r23
     3d4:	00 0c       	add	r0, r0
     3d6:	88 0b       	sbc	r24, r24
     3d8:	99 0b       	sbc	r25, r25
     3da:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     3de:	20 e0       	ldi	r18, 0x00	; 0
     3e0:	30 e0       	ldi	r19, 0x00	; 0
     3e2:	40 ea       	ldi	r20, 0xA0	; 160
     3e4:	50 e4       	ldi	r21, 0x40	; 64
     3e6:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     3ea:	20 e0       	ldi	r18, 0x00	; 0
     3ec:	30 e0       	ldi	r19, 0x00	; 0
     3ee:	40 e8       	ldi	r20, 0x80	; 128
     3f0:	5a e3       	ldi	r21, 0x3A	; 58
     3f2:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     3f6:	69 a3       	std	Y+33, r22	; 0x21
     3f8:	7a a3       	std	Y+34, r23	; 0x22
     3fa:	8b a3       	std	Y+35, r24	; 0x23
     3fc:	9c a3       	std	Y+36, r25	; 0x24
		float low_converted = (float)(LOW * 5.0/1024);
     3fe:	60 91 99 00 	lds	r22, 0x0099	; 0x800099 <LOW>
     402:	70 91 9a 00 	lds	r23, 0x009A	; 0x80009a <LOW+0x1>
     406:	07 2e       	mov	r0, r23
     408:	00 0c       	add	r0, r0
     40a:	88 0b       	sbc	r24, r24
     40c:	99 0b       	sbc	r25, r25
     40e:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     412:	20 e0       	ldi	r18, 0x00	; 0
     414:	30 e0       	ldi	r19, 0x00	; 0
     416:	40 ea       	ldi	r20, 0xA0	; 160
     418:	50 e4       	ldi	r21, 0x40	; 64
     41a:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     41e:	20 e0       	ldi	r18, 0x00	; 0
     420:	30 e0       	ldi	r19, 0x00	; 0
     422:	40 e8       	ldi	r20, 0x80	; 128
     424:	5a e3       	ldi	r21, 0x3A	; 58
     426:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     42a:	6d a3       	std	Y+37, r22	; 0x25
     42c:	7e a3       	std	Y+38, r23	; 0x26
     42e:	8f a3       	std	Y+39, r24	; 0x27
     430:	98 a7       	std	Y+40, r25	; 0x28
		float avg_converted = (float)(TOTAL_IV / TOTAL_SAMPLES * 5.0/1024);
     432:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__data_end>
     436:	30 91 e9 00 	lds	r19, 0x00E9	; 0x8000e9 <__data_end+0x1>
     43a:	03 2e       	mov	r0, r19
     43c:	00 0c       	add	r0, r0
     43e:	44 0b       	sbc	r20, r20
     440:	55 0b       	sbc	r21, r21
     442:	60 91 ec 00 	lds	r22, 0x00EC	; 0x8000ec <TOTAL_IV>
     446:	70 91 ed 00 	lds	r23, 0x00ED	; 0x8000ed <TOTAL_IV+0x1>
     44a:	80 91 ee 00 	lds	r24, 0x00EE	; 0x8000ee <TOTAL_IV+0x2>
     44e:	90 91 ef 00 	lds	r25, 0x00EF	; 0x8000ef <TOTAL_IV+0x3>
     452:	0e 94 81 06 	call	0xd02	; 0xd02 <__divmodsi4>
     456:	ca 01       	movw	r24, r20
     458:	b9 01       	movw	r22, r18
     45a:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     45e:	20 e0       	ldi	r18, 0x00	; 0
     460:	30 e0       	ldi	r19, 0x00	; 0
     462:	40 ea       	ldi	r20, 0xA0	; 160
     464:	50 e4       	ldi	r21, 0x40	; 64
     466:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     46a:	20 e0       	ldi	r18, 0x00	; 0
     46c:	30 e0       	ldi	r19, 0x00	; 0
     46e:	40 e8       	ldi	r20, 0x80	; 128
     470:	5a e3       	ldi	r21, 0x3A	; 58
     472:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     476:	2b 01       	movw	r4, r22
     478:	3c 01       	movw	r6, r24
		float iv_converted = (float)(CURRENT_IV * 5.0/1024);
     47a:	60 91 ea 00 	lds	r22, 0x00EA	; 0x8000ea <CURRENT_IV>
     47e:	70 91 eb 00 	lds	r23, 0x00EB	; 0x8000eb <CURRENT_IV+0x1>
     482:	07 2e       	mov	r0, r23
     484:	00 0c       	add	r0, r0
     486:	88 0b       	sbc	r24, r24
     488:	99 0b       	sbc	r25, r25
     48a:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	30 e0       	ldi	r19, 0x00	; 0
     492:	40 ea       	ldi	r20, 0xA0	; 160
     494:	50 e4       	ldi	r21, 0x40	; 64
     496:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     49a:	20 e0       	ldi	r18, 0x00	; 0
     49c:	30 e0       	ldi	r19, 0x00	; 0
     49e:	40 e8       	ldi	r20, 0x80	; 128
     4a0:	5a e3       	ldi	r21, 0x3A	; 58
     4a2:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     4a6:	69 a7       	std	Y+41, r22	; 0x29
     4a8:	7a a7       	std	Y+42, r23	; 0x2a
     4aa:	8b a7       	std	Y+43, r24	; 0x2b
     4ac:	9c a7       	std	Y+44, r25	; 0x2c
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
     4ae:	c3 01       	movw	r24, r6
     4b0:	b2 01       	movw	r22, r4
     4b2:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     4b6:	4b 01       	movw	r8, r22
     4b8:	5c 01       	movw	r10, r24
		float high_converted = (float)(HIGH * 5.0/1024);
		float low_converted = (float)(LOW * 5.0/1024);
		float avg_converted = (float)(TOTAL_IV / TOTAL_SAMPLES * 5.0/1024);
		float iv_converted = (float)(CURRENT_IV * 5.0/1024);
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
     4ba:	69 a5       	ldd	r22, Y+41	; 0x29
     4bc:	7a a5       	ldd	r23, Y+42	; 0x2a
     4be:	8b a5       	ldd	r24, Y+43	; 0x2b
     4c0:	9c a5       	ldd	r25, Y+44	; 0x2c
     4c2:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     4c6:	6b 01       	movw	r12, r22
     4c8:	7c 01       	movw	r14, r24
     4ca:	b4 01       	movw	r22, r8
     4cc:	09 2c       	mov	r0, r9
     4ce:	00 0c       	add	r0, r0
     4d0:	88 0b       	sbc	r24, r24
     4d2:	99 0b       	sbc	r25, r25
     4d4:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     4d8:	9b 01       	movw	r18, r22
     4da:	ac 01       	movw	r20, r24
     4dc:	c3 01       	movw	r24, r6
     4de:	b2 01       	movw	r22, r4
     4e0:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__subsf3>
     4e4:	20 e0       	ldi	r18, 0x00	; 0
     4e6:	30 e0       	ldi	r19, 0x00	; 0
     4e8:	48 ec       	ldi	r20, 0xC8	; 200
     4ea:	52 e4       	ldi	r21, 0x42	; 66
     4ec:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     4f0:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     4f4:	7f 93       	push	r23
     4f6:	6f 93       	push	r22
     4f8:	9f 92       	push	r9
     4fa:	8f 92       	push	r8
     4fc:	b6 01       	movw	r22, r12
     4fe:	0d 2c       	mov	r0, r13
     500:	00 0c       	add	r0, r0
     502:	88 0b       	sbc	r24, r24
     504:	99 0b       	sbc	r25, r25
     506:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     50a:	9b 01       	movw	r18, r22
     50c:	ac 01       	movw	r20, r24
     50e:	69 a5       	ldd	r22, Y+41	; 0x29
     510:	7a a5       	ldd	r23, Y+42	; 0x2a
     512:	8b a5       	ldd	r24, Y+43	; 0x2b
     514:	9c a5       	ldd	r25, Y+44	; 0x2c
     516:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__subsf3>
     51a:	20 e0       	ldi	r18, 0x00	; 0
     51c:	30 e0       	ldi	r19, 0x00	; 0
     51e:	48 ec       	ldi	r20, 0xC8	; 200
     520:	52 e4       	ldi	r21, 0x42	; 66
     522:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     526:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     52a:	7f 93       	push	r23
     52c:	6f 93       	push	r22
     52e:	df 92       	push	r13
     530:	cf 92       	push	r12
     532:	8b e9       	ldi	r24, 0x9B	; 155
     534:	90 e0       	ldi	r25, 0x00	; 0
     536:	9f 93       	push	r25
     538:	8f 93       	push	r24
     53a:	ce 01       	movw	r24, r28
     53c:	01 96       	adiw	r24, 0x01	; 1
     53e:	9f 93       	push	r25
     540:	8f 93       	push	r24
     542:	0e 94 d6 06 	call	0xdac	; 0xdac <sprintf>
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
										   
		sprintf(buf2, "HI:%d.%02d LO:%d.%02d", (int)(high_converted), (int)((high_converted - (int)(high_converted)) * 100), 
										   (int)(low_converted),  (int)((low_converted - (int)(low_converted)) * 100));
     546:	6d a1       	ldd	r22, Y+37	; 0x25
     548:	7e a1       	ldd	r23, Y+38	; 0x26
     54a:	8f a1       	ldd	r24, Y+39	; 0x27
     54c:	98 a5       	ldd	r25, Y+40	; 0x28
     54e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     552:	4b 01       	movw	r8, r22
     554:	5c 01       	movw	r10, r24
		float iv_converted = (float)(CURRENT_IV * 5.0/1024);
		
		sprintf(buf1, "IV:%d.%02d AV:%d.%02d", (int)(iv_converted),  (int)((iv_converted - (int)(iv_converted)) * 100), 
										   (int)(avg_converted), (int)((avg_converted - (int)(avg_converted)) * 100));
										   
		sprintf(buf2, "HI:%d.%02d LO:%d.%02d", (int)(high_converted), (int)((high_converted - (int)(high_converted)) * 100), 
     556:	69 a1       	ldd	r22, Y+33	; 0x21
     558:	7a a1       	ldd	r23, Y+34	; 0x22
     55a:	8b a1       	ldd	r24, Y+35	; 0x23
     55c:	9c a1       	ldd	r25, Y+36	; 0x24
     55e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     562:	2b 01       	movw	r4, r22
     564:	3c 01       	movw	r6, r24
     566:	b4 01       	movw	r22, r8
     568:	09 2c       	mov	r0, r9
     56a:	00 0c       	add	r0, r0
     56c:	88 0b       	sbc	r24, r24
     56e:	99 0b       	sbc	r25, r25
     570:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     574:	9b 01       	movw	r18, r22
     576:	ac 01       	movw	r20, r24
     578:	6d a1       	ldd	r22, Y+37	; 0x25
     57a:	7e a1       	ldd	r23, Y+38	; 0x26
     57c:	8f a1       	ldd	r24, Y+39	; 0x27
     57e:	98 a5       	ldd	r25, Y+40	; 0x28
     580:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__subsf3>
     584:	20 e0       	ldi	r18, 0x00	; 0
     586:	30 e0       	ldi	r19, 0x00	; 0
     588:	48 ec       	ldi	r20, 0xC8	; 200
     58a:	52 e4       	ldi	r21, 0x42	; 66
     58c:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     590:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     594:	7f 93       	push	r23
     596:	6f 93       	push	r22
     598:	9f 92       	push	r9
     59a:	8f 92       	push	r8
     59c:	b2 01       	movw	r22, r4
     59e:	05 2c       	mov	r0, r5
     5a0:	00 0c       	add	r0, r0
     5a2:	88 0b       	sbc	r24, r24
     5a4:	99 0b       	sbc	r25, r25
     5a6:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     5aa:	9b 01       	movw	r18, r22
     5ac:	ac 01       	movw	r20, r24
     5ae:	69 a1       	ldd	r22, Y+33	; 0x21
     5b0:	7a a1       	ldd	r23, Y+34	; 0x22
     5b2:	8b a1       	ldd	r24, Y+35	; 0x23
     5b4:	9c a1       	ldd	r25, Y+36	; 0x24
     5b6:	0e 94 d7 03 	call	0x7ae	; 0x7ae <__subsf3>
     5ba:	20 e0       	ldi	r18, 0x00	; 0
     5bc:	30 e0       	ldi	r19, 0x00	; 0
     5be:	48 ec       	ldi	r20, 0xC8	; 200
     5c0:	52 e4       	ldi	r21, 0x42	; 66
     5c2:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     5c6:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__fixsfsi>
     5ca:	7f 93       	push	r23
     5cc:	6f 93       	push	r22
     5ce:	5f 92       	push	r5
     5d0:	4f 92       	push	r4
     5d2:	81 eb       	ldi	r24, 0xB1	; 177
     5d4:	90 e0       	ldi	r25, 0x00	; 0
     5d6:	9f 93       	push	r25
     5d8:	8f 93       	push	r24
     5da:	ce 01       	movw	r24, r28
     5dc:	41 96       	adiw	r24, 0x11	; 17
     5de:	9f 93       	push	r25
     5e0:	8f 93       	push	r24
     5e2:	0e 94 d6 06 	call	0xdac	; 0xdac <sprintf>
     5e6:	0f b6       	in	r0, 0x3f	; 63
     5e8:	f8 94       	cli
     5ea:	de bf       	out	0x3e, r29	; 62
     5ec:	0f be       	out	0x3f, r0	; 63
     5ee:	cd bf       	out	0x3d, r28	; 61
										   (int)(low_converted),  (int)((low_converted - (int)(low_converted)) * 100));
	}
	
	//(int)(1.55), (int)((1.55 - (int)(1.55)) * 100)
	
	lcd_clr();
     5f0:	0e 94 b7 00 	call	0x16e	; 0x16e <lcd_clr>
	lcd_puts2(buf1);
     5f4:	ce 01       	movw	r24, r28
     5f6:	01 96       	adiw	r24, 0x01	; 1
     5f8:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_puts2>
	lcd_pos(1,0);
     5fc:	60 e0       	ldi	r22, 0x00	; 0
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	0e 94 bc 00 	call	0x178	; 0x178 <lcd_pos>
	lcd_puts2(buf2);
     604:	ce 01       	movw	r24, r28
     606:	41 96       	adiw	r24, 0x11	; 17
     608:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <lcd_puts2>
}
     60c:	ac 96       	adiw	r28, 0x2c	; 44
     60e:	0f b6       	in	r0, 0x3f	; 63
     610:	f8 94       	cli
     612:	de bf       	out	0x3e, r29	; 62
     614:	0f be       	out	0x3f, r0	; 63
     616:	cd bf       	out	0x3d, r28	; 61
     618:	df 91       	pop	r29
     61a:	cf 91       	pop	r28
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	df 90       	pop	r13
     622:	cf 90       	pop	r12
     624:	bf 90       	pop	r11
     626:	af 90       	pop	r10
     628:	9f 90       	pop	r9
     62a:	8f 90       	pop	r8
     62c:	7f 90       	pop	r7
     62e:	6f 90       	pop	r6
     630:	5f 90       	pop	r5
     632:	4f 90       	pop	r4
     634:	08 95       	ret

00000636 <main>:

int main(void)
{
	DDRB = 0x08;
     636:	88 e0       	ldi	r24, 0x08	; 8
     638:	87 bb       	out	0x17, r24	; 23
	avr_init();
     63a:	0e 94 49 00 	call	0x92	; 0x92 <avr_init>
	lcd_init();
     63e:	0e 94 8f 00 	call	0x11e	; 0x11e <lcd_init>
	AD_init();
     642:	0e 94 87 01 	call	0x30e	; 0x30e <AD_init>
			
			if (current_iv > MAX_THRESHOLD) {
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
			}
			else if (current_iv < MIN_THRESHOLD) {
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     646:	0f 2e       	mov	r0, r31
     648:	f3 e7       	ldi	r31, 0x73	; 115
     64a:	ef 2e       	mov	r14, r31
     64c:	f0 e0       	ldi	r31, 0x00	; 0
     64e:	ff 2e       	mov	r15, r31
     650:	f0 2d       	mov	r31, r0
     652:	09 e7       	ldi	r16, 0x79	; 121
     654:	10 e0       	ldi	r17, 0x00	; 0
		int key = get_key() - 1;
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1') { // START
			STATE = 1;
     656:	c1 e0       	ldi	r28, 0x01	; 1
     658:	d0 e0       	ldi	r29, 0x00	; 0
	avr_init();
	lcd_init();
	AD_init();
    while (1) 
    {
		if (STATE) {
     65a:	80 91 f2 00 	lds	r24, 0x00F2	; 0x8000f2 <STATE>
     65e:	90 91 f3 00 	lds	r25, 0x00F3	; 0x8000f3 <STATE+0x1>
     662:	89 2b       	or	r24, r25
     664:	09 f4       	brne	.+2      	; 0x668 <main+0x32>
     666:	89 c0       	rjmp	.+274    	; 0x77a <main+0x144>
			CURRENT_IV = get_AD();
     668:	0e 94 8c 01 	call	0x318	; 0x318 <get_AD>
     66c:	bc 01       	movw	r22, r24
     66e:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <CURRENT_IV+0x1>
     672:	80 93 ea 00 	sts	0x00EA, r24	; 0x8000ea <CURRENT_IV>
			TOTAL_IV += CURRENT_IV;
     676:	09 2e       	mov	r0, r25
     678:	00 0c       	add	r0, r0
     67a:	aa 0b       	sbc	r26, r26
     67c:	bb 0b       	sbc	r27, r27
     67e:	80 90 ec 00 	lds	r8, 0x00EC	; 0x8000ec <TOTAL_IV>
     682:	90 90 ed 00 	lds	r9, 0x00ED	; 0x8000ed <TOTAL_IV+0x1>
     686:	a0 90 ee 00 	lds	r10, 0x00EE	; 0x8000ee <TOTAL_IV+0x2>
     68a:	b0 90 ef 00 	lds	r11, 0x00EF	; 0x8000ef <TOTAL_IV+0x3>
     68e:	88 0d       	add	r24, r8
     690:	99 1d       	adc	r25, r9
     692:	aa 1d       	adc	r26, r10
     694:	bb 1d       	adc	r27, r11
     696:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <TOTAL_IV>
     69a:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <TOTAL_IV+0x1>
     69e:	a0 93 ee 00 	sts	0x00EE, r26	; 0x8000ee <TOTAL_IV+0x2>
     6a2:	b0 93 ef 00 	sts	0x00EF, r27	; 0x8000ef <TOTAL_IV+0x3>
			
			if (CURRENT_IV > HIGH) {
     6a6:	80 91 f0 00 	lds	r24, 0x00F0	; 0x8000f0 <HIGH>
     6aa:	90 91 f1 00 	lds	r25, 0x00F1	; 0x8000f1 <HIGH+0x1>
     6ae:	86 17       	cp	r24, r22
     6b0:	97 07       	cpc	r25, r23
     6b2:	24 f4       	brge	.+8      	; 0x6bc <main+0x86>
				HIGH = CURRENT_IV;
     6b4:	70 93 f1 00 	sts	0x00F1, r23	; 0x8000f1 <HIGH+0x1>
     6b8:	60 93 f0 00 	sts	0x00F0, r22	; 0x8000f0 <HIGH>
			}
			if (CURRENT_IV < LOW) {
     6bc:	80 91 99 00 	lds	r24, 0x0099	; 0x800099 <LOW>
     6c0:	90 91 9a 00 	lds	r25, 0x009A	; 0x80009a <LOW+0x1>
     6c4:	68 17       	cp	r22, r24
     6c6:	79 07       	cpc	r23, r25
     6c8:	24 f4       	brge	.+8      	; 0x6d2 <main+0x9c>
				LOW = CURRENT_IV;
     6ca:	70 93 9a 00 	sts	0x009A, r23	; 0x80009a <LOW+0x1>
     6ce:	60 93 99 00 	sts	0x0099, r22	; 0x800099 <LOW>
			}
			
			float current_iv = (float)(CURRENT_IV * 5.0/1024);
     6d2:	07 2e       	mov	r0, r23
     6d4:	00 0c       	add	r0, r0
     6d6:	88 0b       	sbc	r24, r24
     6d8:	99 0b       	sbc	r25, r25
     6da:	0e 94 0a 05 	call	0xa14	; 0xa14 <__floatsisf>
     6de:	20 e0       	ldi	r18, 0x00	; 0
     6e0:	30 e0       	ldi	r19, 0x00	; 0
     6e2:	40 ea       	ldi	r20, 0xA0	; 160
     6e4:	50 e4       	ldi	r21, 0x40	; 64
     6e6:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     6ea:	20 e0       	ldi	r18, 0x00	; 0
     6ec:	30 e0       	ldi	r19, 0x00	; 0
     6ee:	40 e8       	ldi	r20, 0x80	; 128
     6f0:	5a e3       	ldi	r21, 0x3A	; 58
     6f2:	0e 94 00 06 	call	0xc00	; 0xc00 <__mulsf3>
     6f6:	4b 01       	movw	r8, r22
     6f8:	5c 01       	movw	r10, r24
			
			if (current_iv > MAX_THRESHOLD) {
     6fa:	20 91 95 00 	lds	r18, 0x0095	; 0x800095 <MAX_THRESHOLD>
     6fe:	30 91 96 00 	lds	r19, 0x0096	; 0x800096 <MAX_THRESHOLD+0x1>
     702:	40 91 97 00 	lds	r20, 0x0097	; 0x800097 <MAX_THRESHOLD+0x2>
     706:	50 91 98 00 	lds	r21, 0x0098	; 0x800098 <MAX_THRESHOLD+0x3>
     70a:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <__gesf2>
     70e:	18 16       	cp	r1, r24
     710:	7c f4       	brge	.+30     	; 0x730 <main+0xfa>
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     712:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <DURATION>
     716:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <DURATION+0x1>
     71a:	f7 01       	movw	r30, r14
     71c:	62 81       	ldd	r22, Z+2	; 0x02
     71e:	73 81       	ldd	r23, Z+3	; 0x03
     720:	0e 94 6d 06 	call	0xcda	; 0xcda <__divmodhi4>
     724:	f8 01       	movw	r30, r16
     726:	86 85       	ldd	r24, Z+14	; 0x0e
     728:	97 85       	ldd	r25, Z+15	; 0x0f
     72a:	0e 94 37 01 	call	0x26e	; 0x26e <play_note>
     72e:	1c c0       	rjmp	.+56     	; 0x768 <main+0x132>
			}
			else if (current_iv < MIN_THRESHOLD) {
     730:	20 91 91 00 	lds	r18, 0x0091	; 0x800091 <MIN_THRESHOLD>
     734:	30 91 92 00 	lds	r19, 0x0092	; 0x800092 <MIN_THRESHOLD+0x1>
     738:	40 91 93 00 	lds	r20, 0x0093	; 0x800093 <MIN_THRESHOLD+0x2>
     73c:	50 91 94 00 	lds	r21, 0x0094	; 0x800094 <MIN_THRESHOLD+0x3>
     740:	c5 01       	movw	r24, r10
     742:	b4 01       	movw	r22, r8
     744:	0e 94 5b 04 	call	0x8b6	; 0x8b6 <__cmpsf2>
     748:	88 23       	and	r24, r24
     74a:	74 f4       	brge	.+28     	; 0x768 <main+0x132>
				play_note(FREQUENCY[7], DURATION / DURATION_MODIFIER[1]);
     74c:	80 91 71 00 	lds	r24, 0x0071	; 0x800071 <DURATION>
     750:	90 91 72 00 	lds	r25, 0x0072	; 0x800072 <DURATION+0x1>
     754:	f7 01       	movw	r30, r14
     756:	62 81       	ldd	r22, Z+2	; 0x02
     758:	73 81       	ldd	r23, Z+3	; 0x03
     75a:	0e 94 6d 06 	call	0xcda	; 0xcda <__divmodhi4>
     75e:	f8 01       	movw	r30, r16
     760:	86 85       	ldd	r24, Z+14	; 0x0e
     762:	97 85       	ldd	r25, Z+15	; 0x0f
     764:	0e 94 37 01 	call	0x26e	; 0x26e <play_note>
			}
			
			TOTAL_SAMPLES ++;
     768:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__data_end>
     76c:	90 91 e9 00 	lds	r25, 0x00E9	; 0x8000e9 <__data_end+0x1>
     770:	01 96       	adiw	r24, 0x01	; 1
     772:	90 93 e9 00 	sts	0x00E9, r25	; 0x8000e9 <__data_end+0x1>
     776:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__data_end>
		}
		
		int key = get_key() - 1;
     77a:	0e 94 10 01 	call	0x220	; 0x220 <get_key>
     77e:	01 97       	sbiw	r24, 0x01	; 1
     780:	78 f0       	brcs	.+30     	; 0x7a0 <main+0x16a>
		if (key == -1) {
			// Do Nothing
		}
		else if (keypad[key] == '1') { // START
     782:	fc 01       	movw	r30, r24
     784:	e0 5a       	subi	r30, 0xA0	; 160
     786:	ff 4f       	sbci	r31, 0xFF	; 255
     788:	80 81       	ld	r24, Z
     78a:	81 33       	cpi	r24, 0x31	; 49
     78c:	29 f4       	brne	.+10     	; 0x798 <main+0x162>
			STATE = 1;
     78e:	d0 93 f3 00 	sts	0x00F3, r29	; 0x8000f3 <STATE+0x1>
     792:	c0 93 f2 00 	sts	0x00F2, r28	; 0x8000f2 <STATE>
     796:	04 c0       	rjmp	.+8      	; 0x7a0 <main+0x16a>
		}
		else if (keypad[key] == '2') { // RESET
     798:	82 33       	cpi	r24, 0x32	; 50
     79a:	11 f4       	brne	.+4      	; 0x7a0 <main+0x16a>
			reset();
     79c:	0e 94 97 01 	call	0x32e	; 0x32e <reset>
		
		}
		
		print_lcd();
     7a0:	0e 94 b6 01 	call	0x36c	; 0x36c <print_lcd>
		avr_wait(500);
     7a4:	84 ef       	ldi	r24, 0xF4	; 244
     7a6:	91 e0       	ldi	r25, 0x01	; 1
     7a8:	0e 94 4c 00 	call	0x98	; 0x98 <avr_wait>
    }
     7ac:	56 cf       	rjmp	.-340    	; 0x65a <main+0x24>

000007ae <__subsf3>:
     7ae:	50 58       	subi	r21, 0x80	; 128

000007b0 <__addsf3>:
     7b0:	bb 27       	eor	r27, r27
     7b2:	aa 27       	eor	r26, r26
     7b4:	0e 94 ef 03 	call	0x7de	; 0x7de <__addsf3x>
     7b8:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_round>
     7bc:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_pscA>
     7c0:	38 f0       	brcs	.+14     	; 0x7d0 <__addsf3+0x20>
     7c2:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscB>
     7c6:	20 f0       	brcs	.+8      	; 0x7d0 <__addsf3+0x20>
     7c8:	39 f4       	brne	.+14     	; 0x7d8 <__addsf3+0x28>
     7ca:	9f 3f       	cpi	r25, 0xFF	; 255
     7cc:	19 f4       	brne	.+6      	; 0x7d4 <__addsf3+0x24>
     7ce:	26 f4       	brtc	.+8      	; 0x7d8 <__addsf3+0x28>
     7d0:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__fp_nan>
     7d4:	0e f4       	brtc	.+2      	; 0x7d8 <__addsf3+0x28>
     7d6:	e0 95       	com	r30
     7d8:	e7 fb       	bst	r30, 7
     7da:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>

000007de <__addsf3x>:
     7de:	e9 2f       	mov	r30, r25
     7e0:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fp_split3>
     7e4:	58 f3       	brcs	.-42     	; 0x7bc <__addsf3+0xc>
     7e6:	ba 17       	cp	r27, r26
     7e8:	62 07       	cpc	r22, r18
     7ea:	73 07       	cpc	r23, r19
     7ec:	84 07       	cpc	r24, r20
     7ee:	95 07       	cpc	r25, r21
     7f0:	20 f0       	brcs	.+8      	; 0x7fa <__addsf3x+0x1c>
     7f2:	79 f4       	brne	.+30     	; 0x812 <__addsf3x+0x34>
     7f4:	a6 f5       	brtc	.+104    	; 0x85e <__addsf3x+0x80>
     7f6:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__fp_zero>
     7fa:	0e f4       	brtc	.+2      	; 0x7fe <__addsf3x+0x20>
     7fc:	e0 95       	com	r30
     7fe:	0b 2e       	mov	r0, r27
     800:	ba 2f       	mov	r27, r26
     802:	a0 2d       	mov	r26, r0
     804:	0b 01       	movw	r0, r22
     806:	b9 01       	movw	r22, r18
     808:	90 01       	movw	r18, r0
     80a:	0c 01       	movw	r0, r24
     80c:	ca 01       	movw	r24, r20
     80e:	a0 01       	movw	r20, r0
     810:	11 24       	eor	r1, r1
     812:	ff 27       	eor	r31, r31
     814:	59 1b       	sub	r21, r25
     816:	99 f0       	breq	.+38     	; 0x83e <__addsf3x+0x60>
     818:	59 3f       	cpi	r21, 0xF9	; 249
     81a:	50 f4       	brcc	.+20     	; 0x830 <__addsf3x+0x52>
     81c:	50 3e       	cpi	r21, 0xE0	; 224
     81e:	68 f1       	brcs	.+90     	; 0x87a <__stack+0x1b>
     820:	1a 16       	cp	r1, r26
     822:	f0 40       	sbci	r31, 0x00	; 0
     824:	a2 2f       	mov	r26, r18
     826:	23 2f       	mov	r18, r19
     828:	34 2f       	mov	r19, r20
     82a:	44 27       	eor	r20, r20
     82c:	58 5f       	subi	r21, 0xF8	; 248
     82e:	f3 cf       	rjmp	.-26     	; 0x816 <__addsf3x+0x38>
     830:	46 95       	lsr	r20
     832:	37 95       	ror	r19
     834:	27 95       	ror	r18
     836:	a7 95       	ror	r26
     838:	f0 40       	sbci	r31, 0x00	; 0
     83a:	53 95       	inc	r21
     83c:	c9 f7       	brne	.-14     	; 0x830 <__addsf3x+0x52>
     83e:	7e f4       	brtc	.+30     	; 0x85e <__addsf3x+0x80>
     840:	1f 16       	cp	r1, r31
     842:	ba 0b       	sbc	r27, r26
     844:	62 0b       	sbc	r22, r18
     846:	73 0b       	sbc	r23, r19
     848:	84 0b       	sbc	r24, r20
     84a:	ba f0       	brmi	.+46     	; 0x87a <__stack+0x1b>
     84c:	91 50       	subi	r25, 0x01	; 1
     84e:	a1 f0       	breq	.+40     	; 0x878 <__stack+0x19>
     850:	ff 0f       	add	r31, r31
     852:	bb 1f       	adc	r27, r27
     854:	66 1f       	adc	r22, r22
     856:	77 1f       	adc	r23, r23
     858:	88 1f       	adc	r24, r24
     85a:	c2 f7       	brpl	.-16     	; 0x84c <__addsf3x+0x6e>
     85c:	0e c0       	rjmp	.+28     	; 0x87a <__stack+0x1b>
     85e:	ba 0f       	add	r27, r26
     860:	62 1f       	adc	r22, r18
     862:	73 1f       	adc	r23, r19
     864:	84 1f       	adc	r24, r20
     866:	48 f4       	brcc	.+18     	; 0x87a <__stack+0x1b>
     868:	87 95       	ror	r24
     86a:	77 95       	ror	r23
     86c:	67 95       	ror	r22
     86e:	b7 95       	ror	r27
     870:	f7 95       	ror	r31
     872:	9e 3f       	cpi	r25, 0xFE	; 254
     874:	08 f0       	brcs	.+2      	; 0x878 <__stack+0x19>
     876:	b0 cf       	rjmp	.-160    	; 0x7d8 <__addsf3+0x28>
     878:	93 95       	inc	r25
     87a:	88 0f       	add	r24, r24
     87c:	08 f0       	brcs	.+2      	; 0x880 <__stack+0x21>
     87e:	99 27       	eor	r25, r25
     880:	ee 0f       	add	r30, r30
     882:	97 95       	ror	r25
     884:	87 95       	ror	r24
     886:	08 95       	ret

00000888 <ceil>:
     888:	0e 94 dc 05 	call	0xbb8	; 0xbb8 <__fp_trunc>
     88c:	90 f0       	brcs	.+36     	; 0x8b2 <ceil+0x2a>
     88e:	9f 37       	cpi	r25, 0x7F	; 127
     890:	48 f4       	brcc	.+18     	; 0x8a4 <ceil+0x1c>
     892:	91 11       	cpse	r25, r1
     894:	16 f4       	brtc	.+4      	; 0x89a <ceil+0x12>
     896:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>
     89a:	60 e0       	ldi	r22, 0x00	; 0
     89c:	70 e0       	ldi	r23, 0x00	; 0
     89e:	80 e8       	ldi	r24, 0x80	; 128
     8a0:	9f e3       	ldi	r25, 0x3F	; 63
     8a2:	08 95       	ret
     8a4:	26 f0       	brts	.+8      	; 0x8ae <ceil+0x26>
     8a6:	1b 16       	cp	r1, r27
     8a8:	61 1d       	adc	r22, r1
     8aa:	71 1d       	adc	r23, r1
     8ac:	81 1d       	adc	r24, r1
     8ae:	0c 94 6f 05 	jmp	0xade	; 0xade <__fp_mintl>
     8b2:	0c 94 8a 05 	jmp	0xb14	; 0xb14 <__fp_mpack>

000008b6 <__cmpsf2>:
     8b6:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_cmp>
     8ba:	08 f4       	brcc	.+2      	; 0x8be <__cmpsf2+0x8>
     8bc:	81 e0       	ldi	r24, 0x01	; 1
     8be:	08 95       	ret

000008c0 <__divsf3>:
     8c0:	0e 94 74 04 	call	0x8e8	; 0x8e8 <__divsf3x>
     8c4:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_round>
     8c8:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscB>
     8cc:	58 f0       	brcs	.+22     	; 0x8e4 <__divsf3+0x24>
     8ce:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_pscA>
     8d2:	40 f0       	brcs	.+16     	; 0x8e4 <__divsf3+0x24>
     8d4:	29 f4       	brne	.+10     	; 0x8e0 <__divsf3+0x20>
     8d6:	5f 3f       	cpi	r21, 0xFF	; 255
     8d8:	29 f0       	breq	.+10     	; 0x8e4 <__divsf3+0x24>
     8da:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     8de:	51 11       	cpse	r21, r1
     8e0:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>
     8e4:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__fp_nan>

000008e8 <__divsf3x>:
     8e8:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fp_split3>
     8ec:	68 f3       	brcs	.-38     	; 0x8c8 <__divsf3+0x8>

000008ee <__divsf3_pse>:
     8ee:	99 23       	and	r25, r25
     8f0:	b1 f3       	breq	.-20     	; 0x8de <__divsf3+0x1e>
     8f2:	55 23       	and	r21, r21
     8f4:	91 f3       	breq	.-28     	; 0x8da <__divsf3+0x1a>
     8f6:	95 1b       	sub	r25, r21
     8f8:	55 0b       	sbc	r21, r21
     8fa:	bb 27       	eor	r27, r27
     8fc:	aa 27       	eor	r26, r26
     8fe:	62 17       	cp	r22, r18
     900:	73 07       	cpc	r23, r19
     902:	84 07       	cpc	r24, r20
     904:	38 f0       	brcs	.+14     	; 0x914 <__divsf3_pse+0x26>
     906:	9f 5f       	subi	r25, 0xFF	; 255
     908:	5f 4f       	sbci	r21, 0xFF	; 255
     90a:	22 0f       	add	r18, r18
     90c:	33 1f       	adc	r19, r19
     90e:	44 1f       	adc	r20, r20
     910:	aa 1f       	adc	r26, r26
     912:	a9 f3       	breq	.-22     	; 0x8fe <__divsf3_pse+0x10>
     914:	35 d0       	rcall	.+106    	; 0x980 <__divsf3_pse+0x92>
     916:	0e 2e       	mov	r0, r30
     918:	3a f0       	brmi	.+14     	; 0x928 <__divsf3_pse+0x3a>
     91a:	e0 e8       	ldi	r30, 0x80	; 128
     91c:	32 d0       	rcall	.+100    	; 0x982 <__divsf3_pse+0x94>
     91e:	91 50       	subi	r25, 0x01	; 1
     920:	50 40       	sbci	r21, 0x00	; 0
     922:	e6 95       	lsr	r30
     924:	00 1c       	adc	r0, r0
     926:	ca f7       	brpl	.-14     	; 0x91a <__divsf3_pse+0x2c>
     928:	2b d0       	rcall	.+86     	; 0x980 <__divsf3_pse+0x92>
     92a:	fe 2f       	mov	r31, r30
     92c:	29 d0       	rcall	.+82     	; 0x980 <__divsf3_pse+0x92>
     92e:	66 0f       	add	r22, r22
     930:	77 1f       	adc	r23, r23
     932:	88 1f       	adc	r24, r24
     934:	bb 1f       	adc	r27, r27
     936:	26 17       	cp	r18, r22
     938:	37 07       	cpc	r19, r23
     93a:	48 07       	cpc	r20, r24
     93c:	ab 07       	cpc	r26, r27
     93e:	b0 e8       	ldi	r27, 0x80	; 128
     940:	09 f0       	breq	.+2      	; 0x944 <__divsf3_pse+0x56>
     942:	bb 0b       	sbc	r27, r27
     944:	80 2d       	mov	r24, r0
     946:	bf 01       	movw	r22, r30
     948:	ff 27       	eor	r31, r31
     94a:	93 58       	subi	r25, 0x83	; 131
     94c:	5f 4f       	sbci	r21, 0xFF	; 255
     94e:	3a f0       	brmi	.+14     	; 0x95e <__divsf3_pse+0x70>
     950:	9e 3f       	cpi	r25, 0xFE	; 254
     952:	51 05       	cpc	r21, r1
     954:	78 f0       	brcs	.+30     	; 0x974 <__divsf3_pse+0x86>
     956:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     95a:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>
     95e:	5f 3f       	cpi	r21, 0xFF	; 255
     960:	e4 f3       	brlt	.-8      	; 0x95a <__divsf3_pse+0x6c>
     962:	98 3e       	cpi	r25, 0xE8	; 232
     964:	d4 f3       	brlt	.-12     	; 0x95a <__divsf3_pse+0x6c>
     966:	86 95       	lsr	r24
     968:	77 95       	ror	r23
     96a:	67 95       	ror	r22
     96c:	b7 95       	ror	r27
     96e:	f7 95       	ror	r31
     970:	9f 5f       	subi	r25, 0xFF	; 255
     972:	c9 f7       	brne	.-14     	; 0x966 <__divsf3_pse+0x78>
     974:	88 0f       	add	r24, r24
     976:	91 1d       	adc	r25, r1
     978:	96 95       	lsr	r25
     97a:	87 95       	ror	r24
     97c:	97 f9       	bld	r25, 7
     97e:	08 95       	ret
     980:	e1 e0       	ldi	r30, 0x01	; 1
     982:	66 0f       	add	r22, r22
     984:	77 1f       	adc	r23, r23
     986:	88 1f       	adc	r24, r24
     988:	bb 1f       	adc	r27, r27
     98a:	62 17       	cp	r22, r18
     98c:	73 07       	cpc	r23, r19
     98e:	84 07       	cpc	r24, r20
     990:	ba 07       	cpc	r27, r26
     992:	20 f0       	brcs	.+8      	; 0x99c <__divsf3_pse+0xae>
     994:	62 1b       	sub	r22, r18
     996:	73 0b       	sbc	r23, r19
     998:	84 0b       	sbc	r24, r20
     99a:	ba 0b       	sbc	r27, r26
     99c:	ee 1f       	adc	r30, r30
     99e:	88 f7       	brcc	.-30     	; 0x982 <__divsf3_pse+0x94>
     9a0:	e0 95       	com	r30
     9a2:	08 95       	ret

000009a4 <__fixsfsi>:
     9a4:	0e 94 d9 04 	call	0x9b2	; 0x9b2 <__fixunssfsi>
     9a8:	68 94       	set
     9aa:	b1 11       	cpse	r27, r1
     9ac:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>
     9b0:	08 95       	ret

000009b2 <__fixunssfsi>:
     9b2:	0e 94 c2 05 	call	0xb84	; 0xb84 <__fp_splitA>
     9b6:	88 f0       	brcs	.+34     	; 0x9da <__fixunssfsi+0x28>
     9b8:	9f 57       	subi	r25, 0x7F	; 127
     9ba:	98 f0       	brcs	.+38     	; 0x9e2 <__fixunssfsi+0x30>
     9bc:	b9 2f       	mov	r27, r25
     9be:	99 27       	eor	r25, r25
     9c0:	b7 51       	subi	r27, 0x17	; 23
     9c2:	b0 f0       	brcs	.+44     	; 0x9f0 <__fixunssfsi+0x3e>
     9c4:	e1 f0       	breq	.+56     	; 0x9fe <__fixunssfsi+0x4c>
     9c6:	66 0f       	add	r22, r22
     9c8:	77 1f       	adc	r23, r23
     9ca:	88 1f       	adc	r24, r24
     9cc:	99 1f       	adc	r25, r25
     9ce:	1a f0       	brmi	.+6      	; 0x9d6 <__fixunssfsi+0x24>
     9d0:	ba 95       	dec	r27
     9d2:	c9 f7       	brne	.-14     	; 0x9c6 <__fixunssfsi+0x14>
     9d4:	14 c0       	rjmp	.+40     	; 0x9fe <__fixunssfsi+0x4c>
     9d6:	b1 30       	cpi	r27, 0x01	; 1
     9d8:	91 f0       	breq	.+36     	; 0x9fe <__fixunssfsi+0x4c>
     9da:	0e 94 f4 05 	call	0xbe8	; 0xbe8 <__fp_zero>
     9de:	b1 e0       	ldi	r27, 0x01	; 1
     9e0:	08 95       	ret
     9e2:	0c 94 f4 05 	jmp	0xbe8	; 0xbe8 <__fp_zero>
     9e6:	67 2f       	mov	r22, r23
     9e8:	78 2f       	mov	r23, r24
     9ea:	88 27       	eor	r24, r24
     9ec:	b8 5f       	subi	r27, 0xF8	; 248
     9ee:	39 f0       	breq	.+14     	; 0x9fe <__fixunssfsi+0x4c>
     9f0:	b9 3f       	cpi	r27, 0xF9	; 249
     9f2:	cc f3       	brlt	.-14     	; 0x9e6 <__fixunssfsi+0x34>
     9f4:	86 95       	lsr	r24
     9f6:	77 95       	ror	r23
     9f8:	67 95       	ror	r22
     9fa:	b3 95       	inc	r27
     9fc:	d9 f7       	brne	.-10     	; 0x9f4 <__fixunssfsi+0x42>
     9fe:	3e f4       	brtc	.+14     	; 0xa0e <__fixunssfsi+0x5c>
     a00:	90 95       	com	r25
     a02:	80 95       	com	r24
     a04:	70 95       	com	r23
     a06:	61 95       	neg	r22
     a08:	7f 4f       	sbci	r23, 0xFF	; 255
     a0a:	8f 4f       	sbci	r24, 0xFF	; 255
     a0c:	9f 4f       	sbci	r25, 0xFF	; 255
     a0e:	08 95       	ret

00000a10 <__floatunsisf>:
     a10:	e8 94       	clt
     a12:	09 c0       	rjmp	.+18     	; 0xa26 <__floatsisf+0x12>

00000a14 <__floatsisf>:
     a14:	97 fb       	bst	r25, 7
     a16:	3e f4       	brtc	.+14     	; 0xa26 <__floatsisf+0x12>
     a18:	90 95       	com	r25
     a1a:	80 95       	com	r24
     a1c:	70 95       	com	r23
     a1e:	61 95       	neg	r22
     a20:	7f 4f       	sbci	r23, 0xFF	; 255
     a22:	8f 4f       	sbci	r24, 0xFF	; 255
     a24:	9f 4f       	sbci	r25, 0xFF	; 255
     a26:	99 23       	and	r25, r25
     a28:	a9 f0       	breq	.+42     	; 0xa54 <__floatsisf+0x40>
     a2a:	f9 2f       	mov	r31, r25
     a2c:	96 e9       	ldi	r25, 0x96	; 150
     a2e:	bb 27       	eor	r27, r27
     a30:	93 95       	inc	r25
     a32:	f6 95       	lsr	r31
     a34:	87 95       	ror	r24
     a36:	77 95       	ror	r23
     a38:	67 95       	ror	r22
     a3a:	b7 95       	ror	r27
     a3c:	f1 11       	cpse	r31, r1
     a3e:	f8 cf       	rjmp	.-16     	; 0xa30 <__floatsisf+0x1c>
     a40:	fa f4       	brpl	.+62     	; 0xa80 <__floatsisf+0x6c>
     a42:	bb 0f       	add	r27, r27
     a44:	11 f4       	brne	.+4      	; 0xa4a <__floatsisf+0x36>
     a46:	60 ff       	sbrs	r22, 0
     a48:	1b c0       	rjmp	.+54     	; 0xa80 <__floatsisf+0x6c>
     a4a:	6f 5f       	subi	r22, 0xFF	; 255
     a4c:	7f 4f       	sbci	r23, 0xFF	; 255
     a4e:	8f 4f       	sbci	r24, 0xFF	; 255
     a50:	9f 4f       	sbci	r25, 0xFF	; 255
     a52:	16 c0       	rjmp	.+44     	; 0xa80 <__floatsisf+0x6c>
     a54:	88 23       	and	r24, r24
     a56:	11 f0       	breq	.+4      	; 0xa5c <__floatsisf+0x48>
     a58:	96 e9       	ldi	r25, 0x96	; 150
     a5a:	11 c0       	rjmp	.+34     	; 0xa7e <__floatsisf+0x6a>
     a5c:	77 23       	and	r23, r23
     a5e:	21 f0       	breq	.+8      	; 0xa68 <__floatsisf+0x54>
     a60:	9e e8       	ldi	r25, 0x8E	; 142
     a62:	87 2f       	mov	r24, r23
     a64:	76 2f       	mov	r23, r22
     a66:	05 c0       	rjmp	.+10     	; 0xa72 <__floatsisf+0x5e>
     a68:	66 23       	and	r22, r22
     a6a:	71 f0       	breq	.+28     	; 0xa88 <__floatsisf+0x74>
     a6c:	96 e8       	ldi	r25, 0x86	; 134
     a6e:	86 2f       	mov	r24, r22
     a70:	70 e0       	ldi	r23, 0x00	; 0
     a72:	60 e0       	ldi	r22, 0x00	; 0
     a74:	2a f0       	brmi	.+10     	; 0xa80 <__floatsisf+0x6c>
     a76:	9a 95       	dec	r25
     a78:	66 0f       	add	r22, r22
     a7a:	77 1f       	adc	r23, r23
     a7c:	88 1f       	adc	r24, r24
     a7e:	da f7       	brpl	.-10     	; 0xa76 <__floatsisf+0x62>
     a80:	88 0f       	add	r24, r24
     a82:	96 95       	lsr	r25
     a84:	87 95       	ror	r24
     a86:	97 f9       	bld	r25, 7
     a88:	08 95       	ret

00000a8a <__fp_cmp>:
     a8a:	99 0f       	add	r25, r25
     a8c:	00 08       	sbc	r0, r0
     a8e:	55 0f       	add	r21, r21
     a90:	aa 0b       	sbc	r26, r26
     a92:	e0 e8       	ldi	r30, 0x80	; 128
     a94:	fe ef       	ldi	r31, 0xFE	; 254
     a96:	16 16       	cp	r1, r22
     a98:	17 06       	cpc	r1, r23
     a9a:	e8 07       	cpc	r30, r24
     a9c:	f9 07       	cpc	r31, r25
     a9e:	c0 f0       	brcs	.+48     	; 0xad0 <__fp_cmp+0x46>
     aa0:	12 16       	cp	r1, r18
     aa2:	13 06       	cpc	r1, r19
     aa4:	e4 07       	cpc	r30, r20
     aa6:	f5 07       	cpc	r31, r21
     aa8:	98 f0       	brcs	.+38     	; 0xad0 <__fp_cmp+0x46>
     aaa:	62 1b       	sub	r22, r18
     aac:	73 0b       	sbc	r23, r19
     aae:	84 0b       	sbc	r24, r20
     ab0:	95 0b       	sbc	r25, r21
     ab2:	39 f4       	brne	.+14     	; 0xac2 <__fp_cmp+0x38>
     ab4:	0a 26       	eor	r0, r26
     ab6:	61 f0       	breq	.+24     	; 0xad0 <__fp_cmp+0x46>
     ab8:	23 2b       	or	r18, r19
     aba:	24 2b       	or	r18, r20
     abc:	25 2b       	or	r18, r21
     abe:	21 f4       	brne	.+8      	; 0xac8 <__fp_cmp+0x3e>
     ac0:	08 95       	ret
     ac2:	0a 26       	eor	r0, r26
     ac4:	09 f4       	brne	.+2      	; 0xac8 <__fp_cmp+0x3e>
     ac6:	a1 40       	sbci	r26, 0x01	; 1
     ac8:	a6 95       	lsr	r26
     aca:	8f ef       	ldi	r24, 0xFF	; 255
     acc:	81 1d       	adc	r24, r1
     ace:	81 1d       	adc	r24, r1
     ad0:	08 95       	ret

00000ad2 <__fp_inf>:
     ad2:	97 f9       	bld	r25, 7
     ad4:	9f 67       	ori	r25, 0x7F	; 127
     ad6:	80 e8       	ldi	r24, 0x80	; 128
     ad8:	70 e0       	ldi	r23, 0x00	; 0
     ada:	60 e0       	ldi	r22, 0x00	; 0
     adc:	08 95       	ret

00000ade <__fp_mintl>:
     ade:	88 23       	and	r24, r24
     ae0:	71 f4       	brne	.+28     	; 0xafe <__fp_mintl+0x20>
     ae2:	77 23       	and	r23, r23
     ae4:	21 f0       	breq	.+8      	; 0xaee <__fp_mintl+0x10>
     ae6:	98 50       	subi	r25, 0x08	; 8
     ae8:	87 2b       	or	r24, r23
     aea:	76 2f       	mov	r23, r22
     aec:	07 c0       	rjmp	.+14     	; 0xafc <__fp_mintl+0x1e>
     aee:	66 23       	and	r22, r22
     af0:	11 f4       	brne	.+4      	; 0xaf6 <__fp_mintl+0x18>
     af2:	99 27       	eor	r25, r25
     af4:	0d c0       	rjmp	.+26     	; 0xb10 <__fp_mintl+0x32>
     af6:	90 51       	subi	r25, 0x10	; 16
     af8:	86 2b       	or	r24, r22
     afa:	70 e0       	ldi	r23, 0x00	; 0
     afc:	60 e0       	ldi	r22, 0x00	; 0
     afe:	2a f0       	brmi	.+10     	; 0xb0a <__fp_mintl+0x2c>
     b00:	9a 95       	dec	r25
     b02:	66 0f       	add	r22, r22
     b04:	77 1f       	adc	r23, r23
     b06:	88 1f       	adc	r24, r24
     b08:	da f7       	brpl	.-10     	; 0xb00 <__fp_mintl+0x22>
     b0a:	88 0f       	add	r24, r24
     b0c:	96 95       	lsr	r25
     b0e:	87 95       	ror	r24
     b10:	97 f9       	bld	r25, 7
     b12:	08 95       	ret

00000b14 <__fp_mpack>:
     b14:	9f 3f       	cpi	r25, 0xFF	; 255
     b16:	31 f0       	breq	.+12     	; 0xb24 <__fp_mpack_finite+0xc>

00000b18 <__fp_mpack_finite>:
     b18:	91 50       	subi	r25, 0x01	; 1
     b1a:	20 f4       	brcc	.+8      	; 0xb24 <__fp_mpack_finite+0xc>
     b1c:	87 95       	ror	r24
     b1e:	77 95       	ror	r23
     b20:	67 95       	ror	r22
     b22:	b7 95       	ror	r27
     b24:	88 0f       	add	r24, r24
     b26:	91 1d       	adc	r25, r1
     b28:	96 95       	lsr	r25
     b2a:	87 95       	ror	r24
     b2c:	97 f9       	bld	r25, 7
     b2e:	08 95       	ret

00000b30 <__fp_nan>:
     b30:	9f ef       	ldi	r25, 0xFF	; 255
     b32:	80 ec       	ldi	r24, 0xC0	; 192
     b34:	08 95       	ret

00000b36 <__fp_pscA>:
     b36:	00 24       	eor	r0, r0
     b38:	0a 94       	dec	r0
     b3a:	16 16       	cp	r1, r22
     b3c:	17 06       	cpc	r1, r23
     b3e:	18 06       	cpc	r1, r24
     b40:	09 06       	cpc	r0, r25
     b42:	08 95       	ret

00000b44 <__fp_pscB>:
     b44:	00 24       	eor	r0, r0
     b46:	0a 94       	dec	r0
     b48:	12 16       	cp	r1, r18
     b4a:	13 06       	cpc	r1, r19
     b4c:	14 06       	cpc	r1, r20
     b4e:	05 06       	cpc	r0, r21
     b50:	08 95       	ret

00000b52 <__fp_round>:
     b52:	09 2e       	mov	r0, r25
     b54:	03 94       	inc	r0
     b56:	00 0c       	add	r0, r0
     b58:	11 f4       	brne	.+4      	; 0xb5e <__fp_round+0xc>
     b5a:	88 23       	and	r24, r24
     b5c:	52 f0       	brmi	.+20     	; 0xb72 <__fp_round+0x20>
     b5e:	bb 0f       	add	r27, r27
     b60:	40 f4       	brcc	.+16     	; 0xb72 <__fp_round+0x20>
     b62:	bf 2b       	or	r27, r31
     b64:	11 f4       	brne	.+4      	; 0xb6a <__fp_round+0x18>
     b66:	60 ff       	sbrs	r22, 0
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <__fp_round+0x20>
     b6a:	6f 5f       	subi	r22, 0xFF	; 255
     b6c:	7f 4f       	sbci	r23, 0xFF	; 255
     b6e:	8f 4f       	sbci	r24, 0xFF	; 255
     b70:	9f 4f       	sbci	r25, 0xFF	; 255
     b72:	08 95       	ret

00000b74 <__fp_split3>:
     b74:	57 fd       	sbrc	r21, 7
     b76:	90 58       	subi	r25, 0x80	; 128
     b78:	44 0f       	add	r20, r20
     b7a:	55 1f       	adc	r21, r21
     b7c:	59 f0       	breq	.+22     	; 0xb94 <__fp_splitA+0x10>
     b7e:	5f 3f       	cpi	r21, 0xFF	; 255
     b80:	71 f0       	breq	.+28     	; 0xb9e <__fp_splitA+0x1a>
     b82:	47 95       	ror	r20

00000b84 <__fp_splitA>:
     b84:	88 0f       	add	r24, r24
     b86:	97 fb       	bst	r25, 7
     b88:	99 1f       	adc	r25, r25
     b8a:	61 f0       	breq	.+24     	; 0xba4 <__fp_splitA+0x20>
     b8c:	9f 3f       	cpi	r25, 0xFF	; 255
     b8e:	79 f0       	breq	.+30     	; 0xbae <__fp_splitA+0x2a>
     b90:	87 95       	ror	r24
     b92:	08 95       	ret
     b94:	12 16       	cp	r1, r18
     b96:	13 06       	cpc	r1, r19
     b98:	14 06       	cpc	r1, r20
     b9a:	55 1f       	adc	r21, r21
     b9c:	f2 cf       	rjmp	.-28     	; 0xb82 <__fp_split3+0xe>
     b9e:	46 95       	lsr	r20
     ba0:	f1 df       	rcall	.-30     	; 0xb84 <__fp_splitA>
     ba2:	08 c0       	rjmp	.+16     	; 0xbb4 <__fp_splitA+0x30>
     ba4:	16 16       	cp	r1, r22
     ba6:	17 06       	cpc	r1, r23
     ba8:	18 06       	cpc	r1, r24
     baa:	99 1f       	adc	r25, r25
     bac:	f1 cf       	rjmp	.-30     	; 0xb90 <__fp_splitA+0xc>
     bae:	86 95       	lsr	r24
     bb0:	71 05       	cpc	r23, r1
     bb2:	61 05       	cpc	r22, r1
     bb4:	08 94       	sec
     bb6:	08 95       	ret

00000bb8 <__fp_trunc>:
     bb8:	0e 94 c2 05 	call	0xb84	; 0xb84 <__fp_splitA>
     bbc:	a0 f0       	brcs	.+40     	; 0xbe6 <__fp_trunc+0x2e>
     bbe:	be e7       	ldi	r27, 0x7E	; 126
     bc0:	b9 17       	cp	r27, r25
     bc2:	88 f4       	brcc	.+34     	; 0xbe6 <__fp_trunc+0x2e>
     bc4:	bb 27       	eor	r27, r27
     bc6:	9f 38       	cpi	r25, 0x8F	; 143
     bc8:	60 f4       	brcc	.+24     	; 0xbe2 <__fp_trunc+0x2a>
     bca:	16 16       	cp	r1, r22
     bcc:	b1 1d       	adc	r27, r1
     bce:	67 2f       	mov	r22, r23
     bd0:	78 2f       	mov	r23, r24
     bd2:	88 27       	eor	r24, r24
     bd4:	98 5f       	subi	r25, 0xF8	; 248
     bd6:	f7 cf       	rjmp	.-18     	; 0xbc6 <__fp_trunc+0xe>
     bd8:	86 95       	lsr	r24
     bda:	77 95       	ror	r23
     bdc:	67 95       	ror	r22
     bde:	b1 1d       	adc	r27, r1
     be0:	93 95       	inc	r25
     be2:	96 39       	cpi	r25, 0x96	; 150
     be4:	c8 f3       	brcs	.-14     	; 0xbd8 <__fp_trunc+0x20>
     be6:	08 95       	ret

00000be8 <__fp_zero>:
     be8:	e8 94       	clt

00000bea <__fp_szero>:
     bea:	bb 27       	eor	r27, r27
     bec:	66 27       	eor	r22, r22
     bee:	77 27       	eor	r23, r23
     bf0:	cb 01       	movw	r24, r22
     bf2:	97 f9       	bld	r25, 7
     bf4:	08 95       	ret

00000bf6 <__gesf2>:
     bf6:	0e 94 45 05 	call	0xa8a	; 0xa8a <__fp_cmp>
     bfa:	08 f4       	brcc	.+2      	; 0xbfe <__gesf2+0x8>
     bfc:	8f ef       	ldi	r24, 0xFF	; 255
     bfe:	08 95       	ret

00000c00 <__mulsf3>:
     c00:	0e 94 13 06 	call	0xc26	; 0xc26 <__mulsf3x>
     c04:	0c 94 a9 05 	jmp	0xb52	; 0xb52 <__fp_round>
     c08:	0e 94 9b 05 	call	0xb36	; 0xb36 <__fp_pscA>
     c0c:	38 f0       	brcs	.+14     	; 0xc1c <__mulsf3+0x1c>
     c0e:	0e 94 a2 05 	call	0xb44	; 0xb44 <__fp_pscB>
     c12:	20 f0       	brcs	.+8      	; 0xc1c <__mulsf3+0x1c>
     c14:	95 23       	and	r25, r21
     c16:	11 f0       	breq	.+4      	; 0xc1c <__mulsf3+0x1c>
     c18:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     c1c:	0c 94 98 05 	jmp	0xb30	; 0xb30 <__fp_nan>
     c20:	11 24       	eor	r1, r1
     c22:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>

00000c26 <__mulsf3x>:
     c26:	0e 94 ba 05 	call	0xb74	; 0xb74 <__fp_split3>
     c2a:	70 f3       	brcs	.-36     	; 0xc08 <__mulsf3+0x8>

00000c2c <__mulsf3_pse>:
     c2c:	95 9f       	mul	r25, r21
     c2e:	c1 f3       	breq	.-16     	; 0xc20 <__mulsf3+0x20>
     c30:	95 0f       	add	r25, r21
     c32:	50 e0       	ldi	r21, 0x00	; 0
     c34:	55 1f       	adc	r21, r21
     c36:	62 9f       	mul	r22, r18
     c38:	f0 01       	movw	r30, r0
     c3a:	72 9f       	mul	r23, r18
     c3c:	bb 27       	eor	r27, r27
     c3e:	f0 0d       	add	r31, r0
     c40:	b1 1d       	adc	r27, r1
     c42:	63 9f       	mul	r22, r19
     c44:	aa 27       	eor	r26, r26
     c46:	f0 0d       	add	r31, r0
     c48:	b1 1d       	adc	r27, r1
     c4a:	aa 1f       	adc	r26, r26
     c4c:	64 9f       	mul	r22, r20
     c4e:	66 27       	eor	r22, r22
     c50:	b0 0d       	add	r27, r0
     c52:	a1 1d       	adc	r26, r1
     c54:	66 1f       	adc	r22, r22
     c56:	82 9f       	mul	r24, r18
     c58:	22 27       	eor	r18, r18
     c5a:	b0 0d       	add	r27, r0
     c5c:	a1 1d       	adc	r26, r1
     c5e:	62 1f       	adc	r22, r18
     c60:	73 9f       	mul	r23, r19
     c62:	b0 0d       	add	r27, r0
     c64:	a1 1d       	adc	r26, r1
     c66:	62 1f       	adc	r22, r18
     c68:	83 9f       	mul	r24, r19
     c6a:	a0 0d       	add	r26, r0
     c6c:	61 1d       	adc	r22, r1
     c6e:	22 1f       	adc	r18, r18
     c70:	74 9f       	mul	r23, r20
     c72:	33 27       	eor	r19, r19
     c74:	a0 0d       	add	r26, r0
     c76:	61 1d       	adc	r22, r1
     c78:	23 1f       	adc	r18, r19
     c7a:	84 9f       	mul	r24, r20
     c7c:	60 0d       	add	r22, r0
     c7e:	21 1d       	adc	r18, r1
     c80:	82 2f       	mov	r24, r18
     c82:	76 2f       	mov	r23, r22
     c84:	6a 2f       	mov	r22, r26
     c86:	11 24       	eor	r1, r1
     c88:	9f 57       	subi	r25, 0x7F	; 127
     c8a:	50 40       	sbci	r21, 0x00	; 0
     c8c:	9a f0       	brmi	.+38     	; 0xcb4 <__mulsf3_pse+0x88>
     c8e:	f1 f0       	breq	.+60     	; 0xccc <__mulsf3_pse+0xa0>
     c90:	88 23       	and	r24, r24
     c92:	4a f0       	brmi	.+18     	; 0xca6 <__mulsf3_pse+0x7a>
     c94:	ee 0f       	add	r30, r30
     c96:	ff 1f       	adc	r31, r31
     c98:	bb 1f       	adc	r27, r27
     c9a:	66 1f       	adc	r22, r22
     c9c:	77 1f       	adc	r23, r23
     c9e:	88 1f       	adc	r24, r24
     ca0:	91 50       	subi	r25, 0x01	; 1
     ca2:	50 40       	sbci	r21, 0x00	; 0
     ca4:	a9 f7       	brne	.-22     	; 0xc90 <__mulsf3_pse+0x64>
     ca6:	9e 3f       	cpi	r25, 0xFE	; 254
     ca8:	51 05       	cpc	r21, r1
     caa:	80 f0       	brcs	.+32     	; 0xccc <__mulsf3_pse+0xa0>
     cac:	0c 94 69 05 	jmp	0xad2	; 0xad2 <__fp_inf>
     cb0:	0c 94 f5 05 	jmp	0xbea	; 0xbea <__fp_szero>
     cb4:	5f 3f       	cpi	r21, 0xFF	; 255
     cb6:	e4 f3       	brlt	.-8      	; 0xcb0 <__mulsf3_pse+0x84>
     cb8:	98 3e       	cpi	r25, 0xE8	; 232
     cba:	d4 f3       	brlt	.-12     	; 0xcb0 <__mulsf3_pse+0x84>
     cbc:	86 95       	lsr	r24
     cbe:	77 95       	ror	r23
     cc0:	67 95       	ror	r22
     cc2:	b7 95       	ror	r27
     cc4:	f7 95       	ror	r31
     cc6:	e7 95       	ror	r30
     cc8:	9f 5f       	subi	r25, 0xFF	; 255
     cca:	c1 f7       	brne	.-16     	; 0xcbc <__mulsf3_pse+0x90>
     ccc:	fe 2b       	or	r31, r30
     cce:	88 0f       	add	r24, r24
     cd0:	91 1d       	adc	r25, r1
     cd2:	96 95       	lsr	r25
     cd4:	87 95       	ror	r24
     cd6:	97 f9       	bld	r25, 7
     cd8:	08 95       	ret

00000cda <__divmodhi4>:
     cda:	97 fb       	bst	r25, 7
     cdc:	07 2e       	mov	r0, r23
     cde:	16 f4       	brtc	.+4      	; 0xce4 <__divmodhi4+0xa>
     ce0:	00 94       	com	r0
     ce2:	07 d0       	rcall	.+14     	; 0xcf2 <__divmodhi4_neg1>
     ce4:	77 fd       	sbrc	r23, 7
     ce6:	09 d0       	rcall	.+18     	; 0xcfa <__divmodhi4_neg2>
     ce8:	0e 94 a0 06 	call	0xd40	; 0xd40 <__udivmodhi4>
     cec:	07 fc       	sbrc	r0, 7
     cee:	05 d0       	rcall	.+10     	; 0xcfa <__divmodhi4_neg2>
     cf0:	3e f4       	brtc	.+14     	; 0xd00 <__divmodhi4_exit>

00000cf2 <__divmodhi4_neg1>:
     cf2:	90 95       	com	r25
     cf4:	81 95       	neg	r24
     cf6:	9f 4f       	sbci	r25, 0xFF	; 255
     cf8:	08 95       	ret

00000cfa <__divmodhi4_neg2>:
     cfa:	70 95       	com	r23
     cfc:	61 95       	neg	r22
     cfe:	7f 4f       	sbci	r23, 0xFF	; 255

00000d00 <__divmodhi4_exit>:
     d00:	08 95       	ret

00000d02 <__divmodsi4>:
     d02:	05 2e       	mov	r0, r21
     d04:	97 fb       	bst	r25, 7
     d06:	1e f4       	brtc	.+6      	; 0xd0e <__divmodsi4+0xc>
     d08:	00 94       	com	r0
     d0a:	0e 94 98 06 	call	0xd30	; 0xd30 <__negsi2>
     d0e:	57 fd       	sbrc	r21, 7
     d10:	07 d0       	rcall	.+14     	; 0xd20 <__divmodsi4_neg2>
     d12:	0e 94 b4 06 	call	0xd68	; 0xd68 <__udivmodsi4>
     d16:	07 fc       	sbrc	r0, 7
     d18:	03 d0       	rcall	.+6      	; 0xd20 <__divmodsi4_neg2>
     d1a:	4e f4       	brtc	.+18     	; 0xd2e <__divmodsi4_exit>
     d1c:	0c 94 98 06 	jmp	0xd30	; 0xd30 <__negsi2>

00000d20 <__divmodsi4_neg2>:
     d20:	50 95       	com	r21
     d22:	40 95       	com	r20
     d24:	30 95       	com	r19
     d26:	21 95       	neg	r18
     d28:	3f 4f       	sbci	r19, 0xFF	; 255
     d2a:	4f 4f       	sbci	r20, 0xFF	; 255
     d2c:	5f 4f       	sbci	r21, 0xFF	; 255

00000d2e <__divmodsi4_exit>:
     d2e:	08 95       	ret

00000d30 <__negsi2>:
     d30:	90 95       	com	r25
     d32:	80 95       	com	r24
     d34:	70 95       	com	r23
     d36:	61 95       	neg	r22
     d38:	7f 4f       	sbci	r23, 0xFF	; 255
     d3a:	8f 4f       	sbci	r24, 0xFF	; 255
     d3c:	9f 4f       	sbci	r25, 0xFF	; 255
     d3e:	08 95       	ret

00000d40 <__udivmodhi4>:
     d40:	aa 1b       	sub	r26, r26
     d42:	bb 1b       	sub	r27, r27
     d44:	51 e1       	ldi	r21, 0x11	; 17
     d46:	07 c0       	rjmp	.+14     	; 0xd56 <__udivmodhi4_ep>

00000d48 <__udivmodhi4_loop>:
     d48:	aa 1f       	adc	r26, r26
     d4a:	bb 1f       	adc	r27, r27
     d4c:	a6 17       	cp	r26, r22
     d4e:	b7 07       	cpc	r27, r23
     d50:	10 f0       	brcs	.+4      	; 0xd56 <__udivmodhi4_ep>
     d52:	a6 1b       	sub	r26, r22
     d54:	b7 0b       	sbc	r27, r23

00000d56 <__udivmodhi4_ep>:
     d56:	88 1f       	adc	r24, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	5a 95       	dec	r21
     d5c:	a9 f7       	brne	.-22     	; 0xd48 <__udivmodhi4_loop>
     d5e:	80 95       	com	r24
     d60:	90 95       	com	r25
     d62:	bc 01       	movw	r22, r24
     d64:	cd 01       	movw	r24, r26
     d66:	08 95       	ret

00000d68 <__udivmodsi4>:
     d68:	a1 e2       	ldi	r26, 0x21	; 33
     d6a:	1a 2e       	mov	r1, r26
     d6c:	aa 1b       	sub	r26, r26
     d6e:	bb 1b       	sub	r27, r27
     d70:	fd 01       	movw	r30, r26
     d72:	0d c0       	rjmp	.+26     	; 0xd8e <__udivmodsi4_ep>

00000d74 <__udivmodsi4_loop>:
     d74:	aa 1f       	adc	r26, r26
     d76:	bb 1f       	adc	r27, r27
     d78:	ee 1f       	adc	r30, r30
     d7a:	ff 1f       	adc	r31, r31
     d7c:	a2 17       	cp	r26, r18
     d7e:	b3 07       	cpc	r27, r19
     d80:	e4 07       	cpc	r30, r20
     d82:	f5 07       	cpc	r31, r21
     d84:	20 f0       	brcs	.+8      	; 0xd8e <__udivmodsi4_ep>
     d86:	a2 1b       	sub	r26, r18
     d88:	b3 0b       	sbc	r27, r19
     d8a:	e4 0b       	sbc	r30, r20
     d8c:	f5 0b       	sbc	r31, r21

00000d8e <__udivmodsi4_ep>:
     d8e:	66 1f       	adc	r22, r22
     d90:	77 1f       	adc	r23, r23
     d92:	88 1f       	adc	r24, r24
     d94:	99 1f       	adc	r25, r25
     d96:	1a 94       	dec	r1
     d98:	69 f7       	brne	.-38     	; 0xd74 <__udivmodsi4_loop>
     d9a:	60 95       	com	r22
     d9c:	70 95       	com	r23
     d9e:	80 95       	com	r24
     da0:	90 95       	com	r25
     da2:	9b 01       	movw	r18, r22
     da4:	ac 01       	movw	r20, r24
     da6:	bd 01       	movw	r22, r26
     da8:	cf 01       	movw	r24, r30
     daa:	08 95       	ret

00000dac <sprintf>:
     dac:	ae e0       	ldi	r26, 0x0E	; 14
     dae:	b0 e0       	ldi	r27, 0x00	; 0
     db0:	ec ed       	ldi	r30, 0xDC	; 220
     db2:	f6 e0       	ldi	r31, 0x06	; 6
     db4:	0c 94 97 09 	jmp	0x132e	; 0x132e <__prologue_saves__+0x1c>
     db8:	0d 89       	ldd	r16, Y+21	; 0x15
     dba:	1e 89       	ldd	r17, Y+22	; 0x16
     dbc:	86 e0       	ldi	r24, 0x06	; 6
     dbe:	8c 83       	std	Y+4, r24	; 0x04
     dc0:	1a 83       	std	Y+2, r17	; 0x02
     dc2:	09 83       	std	Y+1, r16	; 0x01
     dc4:	8f ef       	ldi	r24, 0xFF	; 255
     dc6:	9f e7       	ldi	r25, 0x7F	; 127
     dc8:	9e 83       	std	Y+6, r25	; 0x06
     dca:	8d 83       	std	Y+5, r24	; 0x05
     dcc:	ae 01       	movw	r20, r28
     dce:	47 5e       	subi	r20, 0xE7	; 231
     dd0:	5f 4f       	sbci	r21, 0xFF	; 255
     dd2:	6f 89       	ldd	r22, Y+23	; 0x17
     dd4:	78 8d       	ldd	r23, Y+24	; 0x18
     dd6:	ce 01       	movw	r24, r28
     dd8:	01 96       	adiw	r24, 0x01	; 1
     dda:	0e 94 f8 06 	call	0xdf0	; 0xdf0 <vfprintf>
     dde:	ef 81       	ldd	r30, Y+7	; 0x07
     de0:	f8 85       	ldd	r31, Y+8	; 0x08
     de2:	e0 0f       	add	r30, r16
     de4:	f1 1f       	adc	r31, r17
     de6:	10 82       	st	Z, r1
     de8:	2e 96       	adiw	r28, 0x0e	; 14
     dea:	e4 e0       	ldi	r30, 0x04	; 4
     dec:	0c 94 b3 09 	jmp	0x1366	; 0x1366 <__epilogue_restores__+0x1c>

00000df0 <vfprintf>:
     df0:	ab e0       	ldi	r26, 0x0B	; 11
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	ee ef       	ldi	r30, 0xFE	; 254
     df6:	f6 e0       	ldi	r31, 0x06	; 6
     df8:	0c 94 89 09 	jmp	0x1312	; 0x1312 <__prologue_saves__>
     dfc:	6c 01       	movw	r12, r24
     dfe:	7b 01       	movw	r14, r22
     e00:	8a 01       	movw	r16, r20
     e02:	fc 01       	movw	r30, r24
     e04:	17 82       	std	Z+7, r1	; 0x07
     e06:	16 82       	std	Z+6, r1	; 0x06
     e08:	83 81       	ldd	r24, Z+3	; 0x03
     e0a:	81 ff       	sbrs	r24, 1
     e0c:	cc c1       	rjmp	.+920    	; 0x11a6 <vfprintf+0x3b6>
     e0e:	ce 01       	movw	r24, r28
     e10:	01 96       	adiw	r24, 0x01	; 1
     e12:	3c 01       	movw	r6, r24
     e14:	f6 01       	movw	r30, r12
     e16:	93 81       	ldd	r25, Z+3	; 0x03
     e18:	f7 01       	movw	r30, r14
     e1a:	93 fd       	sbrc	r25, 3
     e1c:	85 91       	lpm	r24, Z+
     e1e:	93 ff       	sbrs	r25, 3
     e20:	81 91       	ld	r24, Z+
     e22:	7f 01       	movw	r14, r30
     e24:	88 23       	and	r24, r24
     e26:	09 f4       	brne	.+2      	; 0xe2a <vfprintf+0x3a>
     e28:	ba c1       	rjmp	.+884    	; 0x119e <vfprintf+0x3ae>
     e2a:	85 32       	cpi	r24, 0x25	; 37
     e2c:	39 f4       	brne	.+14     	; 0xe3c <vfprintf+0x4c>
     e2e:	93 fd       	sbrc	r25, 3
     e30:	85 91       	lpm	r24, Z+
     e32:	93 ff       	sbrs	r25, 3
     e34:	81 91       	ld	r24, Z+
     e36:	7f 01       	movw	r14, r30
     e38:	85 32       	cpi	r24, 0x25	; 37
     e3a:	29 f4       	brne	.+10     	; 0xe46 <vfprintf+0x56>
     e3c:	b6 01       	movw	r22, r12
     e3e:	90 e0       	ldi	r25, 0x00	; 0
     e40:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     e44:	e7 cf       	rjmp	.-50     	; 0xe14 <vfprintf+0x24>
     e46:	91 2c       	mov	r9, r1
     e48:	21 2c       	mov	r2, r1
     e4a:	31 2c       	mov	r3, r1
     e4c:	ff e1       	ldi	r31, 0x1F	; 31
     e4e:	f3 15       	cp	r31, r3
     e50:	d8 f0       	brcs	.+54     	; 0xe88 <vfprintf+0x98>
     e52:	8b 32       	cpi	r24, 0x2B	; 43
     e54:	79 f0       	breq	.+30     	; 0xe74 <vfprintf+0x84>
     e56:	38 f4       	brcc	.+14     	; 0xe66 <vfprintf+0x76>
     e58:	80 32       	cpi	r24, 0x20	; 32
     e5a:	79 f0       	breq	.+30     	; 0xe7a <vfprintf+0x8a>
     e5c:	83 32       	cpi	r24, 0x23	; 35
     e5e:	a1 f4       	brne	.+40     	; 0xe88 <vfprintf+0x98>
     e60:	23 2d       	mov	r18, r3
     e62:	20 61       	ori	r18, 0x10	; 16
     e64:	1d c0       	rjmp	.+58     	; 0xea0 <vfprintf+0xb0>
     e66:	8d 32       	cpi	r24, 0x2D	; 45
     e68:	61 f0       	breq	.+24     	; 0xe82 <vfprintf+0x92>
     e6a:	80 33       	cpi	r24, 0x30	; 48
     e6c:	69 f4       	brne	.+26     	; 0xe88 <vfprintf+0x98>
     e6e:	23 2d       	mov	r18, r3
     e70:	21 60       	ori	r18, 0x01	; 1
     e72:	16 c0       	rjmp	.+44     	; 0xea0 <vfprintf+0xb0>
     e74:	83 2d       	mov	r24, r3
     e76:	82 60       	ori	r24, 0x02	; 2
     e78:	38 2e       	mov	r3, r24
     e7a:	e3 2d       	mov	r30, r3
     e7c:	e4 60       	ori	r30, 0x04	; 4
     e7e:	3e 2e       	mov	r3, r30
     e80:	2a c0       	rjmp	.+84     	; 0xed6 <vfprintf+0xe6>
     e82:	f3 2d       	mov	r31, r3
     e84:	f8 60       	ori	r31, 0x08	; 8
     e86:	1d c0       	rjmp	.+58     	; 0xec2 <vfprintf+0xd2>
     e88:	37 fc       	sbrc	r3, 7
     e8a:	2d c0       	rjmp	.+90     	; 0xee6 <vfprintf+0xf6>
     e8c:	20 ed       	ldi	r18, 0xD0	; 208
     e8e:	28 0f       	add	r18, r24
     e90:	2a 30       	cpi	r18, 0x0A	; 10
     e92:	40 f0       	brcs	.+16     	; 0xea4 <vfprintf+0xb4>
     e94:	8e 32       	cpi	r24, 0x2E	; 46
     e96:	b9 f4       	brne	.+46     	; 0xec6 <vfprintf+0xd6>
     e98:	36 fc       	sbrc	r3, 6
     e9a:	81 c1       	rjmp	.+770    	; 0x119e <vfprintf+0x3ae>
     e9c:	23 2d       	mov	r18, r3
     e9e:	20 64       	ori	r18, 0x40	; 64
     ea0:	32 2e       	mov	r3, r18
     ea2:	19 c0       	rjmp	.+50     	; 0xed6 <vfprintf+0xe6>
     ea4:	36 fe       	sbrs	r3, 6
     ea6:	06 c0       	rjmp	.+12     	; 0xeb4 <vfprintf+0xc4>
     ea8:	8a e0       	ldi	r24, 0x0A	; 10
     eaa:	98 9e       	mul	r9, r24
     eac:	20 0d       	add	r18, r0
     eae:	11 24       	eor	r1, r1
     eb0:	92 2e       	mov	r9, r18
     eb2:	11 c0       	rjmp	.+34     	; 0xed6 <vfprintf+0xe6>
     eb4:	ea e0       	ldi	r30, 0x0A	; 10
     eb6:	2e 9e       	mul	r2, r30
     eb8:	20 0d       	add	r18, r0
     eba:	11 24       	eor	r1, r1
     ebc:	22 2e       	mov	r2, r18
     ebe:	f3 2d       	mov	r31, r3
     ec0:	f0 62       	ori	r31, 0x20	; 32
     ec2:	3f 2e       	mov	r3, r31
     ec4:	08 c0       	rjmp	.+16     	; 0xed6 <vfprintf+0xe6>
     ec6:	8c 36       	cpi	r24, 0x6C	; 108
     ec8:	21 f4       	brne	.+8      	; 0xed2 <vfprintf+0xe2>
     eca:	83 2d       	mov	r24, r3
     ecc:	80 68       	ori	r24, 0x80	; 128
     ece:	38 2e       	mov	r3, r24
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <vfprintf+0xe6>
     ed2:	88 36       	cpi	r24, 0x68	; 104
     ed4:	41 f4       	brne	.+16     	; 0xee6 <vfprintf+0xf6>
     ed6:	f7 01       	movw	r30, r14
     ed8:	93 fd       	sbrc	r25, 3
     eda:	85 91       	lpm	r24, Z+
     edc:	93 ff       	sbrs	r25, 3
     ede:	81 91       	ld	r24, Z+
     ee0:	7f 01       	movw	r14, r30
     ee2:	81 11       	cpse	r24, r1
     ee4:	b3 cf       	rjmp	.-154    	; 0xe4c <vfprintf+0x5c>
     ee6:	98 2f       	mov	r25, r24
     ee8:	9f 7d       	andi	r25, 0xDF	; 223
     eea:	95 54       	subi	r25, 0x45	; 69
     eec:	93 30       	cpi	r25, 0x03	; 3
     eee:	28 f4       	brcc	.+10     	; 0xefa <vfprintf+0x10a>
     ef0:	0c 5f       	subi	r16, 0xFC	; 252
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	9f e3       	ldi	r25, 0x3F	; 63
     ef6:	99 83       	std	Y+1, r25	; 0x01
     ef8:	0d c0       	rjmp	.+26     	; 0xf14 <vfprintf+0x124>
     efa:	83 36       	cpi	r24, 0x63	; 99
     efc:	31 f0       	breq	.+12     	; 0xf0a <vfprintf+0x11a>
     efe:	83 37       	cpi	r24, 0x73	; 115
     f00:	71 f0       	breq	.+28     	; 0xf1e <vfprintf+0x12e>
     f02:	83 35       	cpi	r24, 0x53	; 83
     f04:	09 f0       	breq	.+2      	; 0xf08 <vfprintf+0x118>
     f06:	59 c0       	rjmp	.+178    	; 0xfba <vfprintf+0x1ca>
     f08:	21 c0       	rjmp	.+66     	; 0xf4c <vfprintf+0x15c>
     f0a:	f8 01       	movw	r30, r16
     f0c:	80 81       	ld	r24, Z
     f0e:	89 83       	std	Y+1, r24	; 0x01
     f10:	0e 5f       	subi	r16, 0xFE	; 254
     f12:	1f 4f       	sbci	r17, 0xFF	; 255
     f14:	88 24       	eor	r8, r8
     f16:	83 94       	inc	r8
     f18:	91 2c       	mov	r9, r1
     f1a:	53 01       	movw	r10, r6
     f1c:	13 c0       	rjmp	.+38     	; 0xf44 <vfprintf+0x154>
     f1e:	28 01       	movw	r4, r16
     f20:	f2 e0       	ldi	r31, 0x02	; 2
     f22:	4f 0e       	add	r4, r31
     f24:	51 1c       	adc	r5, r1
     f26:	f8 01       	movw	r30, r16
     f28:	a0 80       	ld	r10, Z
     f2a:	b1 80       	ldd	r11, Z+1	; 0x01
     f2c:	36 fe       	sbrs	r3, 6
     f2e:	03 c0       	rjmp	.+6      	; 0xf36 <vfprintf+0x146>
     f30:	69 2d       	mov	r22, r9
     f32:	70 e0       	ldi	r23, 0x00	; 0
     f34:	02 c0       	rjmp	.+4      	; 0xf3a <vfprintf+0x14a>
     f36:	6f ef       	ldi	r22, 0xFF	; 255
     f38:	7f ef       	ldi	r23, 0xFF	; 255
     f3a:	c5 01       	movw	r24, r10
     f3c:	0e 94 e4 08 	call	0x11c8	; 0x11c8 <strnlen>
     f40:	4c 01       	movw	r8, r24
     f42:	82 01       	movw	r16, r4
     f44:	f3 2d       	mov	r31, r3
     f46:	ff 77       	andi	r31, 0x7F	; 127
     f48:	3f 2e       	mov	r3, r31
     f4a:	16 c0       	rjmp	.+44     	; 0xf78 <vfprintf+0x188>
     f4c:	28 01       	movw	r4, r16
     f4e:	22 e0       	ldi	r18, 0x02	; 2
     f50:	42 0e       	add	r4, r18
     f52:	51 1c       	adc	r5, r1
     f54:	f8 01       	movw	r30, r16
     f56:	a0 80       	ld	r10, Z
     f58:	b1 80       	ldd	r11, Z+1	; 0x01
     f5a:	36 fe       	sbrs	r3, 6
     f5c:	03 c0       	rjmp	.+6      	; 0xf64 <vfprintf+0x174>
     f5e:	69 2d       	mov	r22, r9
     f60:	70 e0       	ldi	r23, 0x00	; 0
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x178>
     f64:	6f ef       	ldi	r22, 0xFF	; 255
     f66:	7f ef       	ldi	r23, 0xFF	; 255
     f68:	c5 01       	movw	r24, r10
     f6a:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <strnlen_P>
     f6e:	4c 01       	movw	r8, r24
     f70:	f3 2d       	mov	r31, r3
     f72:	f0 68       	ori	r31, 0x80	; 128
     f74:	3f 2e       	mov	r3, r31
     f76:	82 01       	movw	r16, r4
     f78:	33 fc       	sbrc	r3, 3
     f7a:	1b c0       	rjmp	.+54     	; 0xfb2 <vfprintf+0x1c2>
     f7c:	82 2d       	mov	r24, r2
     f7e:	90 e0       	ldi	r25, 0x00	; 0
     f80:	88 16       	cp	r8, r24
     f82:	99 06       	cpc	r9, r25
     f84:	b0 f4       	brcc	.+44     	; 0xfb2 <vfprintf+0x1c2>
     f86:	b6 01       	movw	r22, r12
     f88:	80 e2       	ldi	r24, 0x20	; 32
     f8a:	90 e0       	ldi	r25, 0x00	; 0
     f8c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     f90:	2a 94       	dec	r2
     f92:	f4 cf       	rjmp	.-24     	; 0xf7c <vfprintf+0x18c>
     f94:	f5 01       	movw	r30, r10
     f96:	37 fc       	sbrc	r3, 7
     f98:	85 91       	lpm	r24, Z+
     f9a:	37 fe       	sbrs	r3, 7
     f9c:	81 91       	ld	r24, Z+
     f9e:	5f 01       	movw	r10, r30
     fa0:	b6 01       	movw	r22, r12
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
     fa8:	21 10       	cpse	r2, r1
     faa:	2a 94       	dec	r2
     fac:	21 e0       	ldi	r18, 0x01	; 1
     fae:	82 1a       	sub	r8, r18
     fb0:	91 08       	sbc	r9, r1
     fb2:	81 14       	cp	r8, r1
     fb4:	91 04       	cpc	r9, r1
     fb6:	71 f7       	brne	.-36     	; 0xf94 <vfprintf+0x1a4>
     fb8:	e8 c0       	rjmp	.+464    	; 0x118a <vfprintf+0x39a>
     fba:	84 36       	cpi	r24, 0x64	; 100
     fbc:	11 f0       	breq	.+4      	; 0xfc2 <vfprintf+0x1d2>
     fbe:	89 36       	cpi	r24, 0x69	; 105
     fc0:	41 f5       	brne	.+80     	; 0x1012 <vfprintf+0x222>
     fc2:	f8 01       	movw	r30, r16
     fc4:	37 fe       	sbrs	r3, 7
     fc6:	07 c0       	rjmp	.+14     	; 0xfd6 <vfprintf+0x1e6>
     fc8:	60 81       	ld	r22, Z
     fca:	71 81       	ldd	r23, Z+1	; 0x01
     fcc:	82 81       	ldd	r24, Z+2	; 0x02
     fce:	93 81       	ldd	r25, Z+3	; 0x03
     fd0:	0c 5f       	subi	r16, 0xFC	; 252
     fd2:	1f 4f       	sbci	r17, 0xFF	; 255
     fd4:	08 c0       	rjmp	.+16     	; 0xfe6 <vfprintf+0x1f6>
     fd6:	60 81       	ld	r22, Z
     fd8:	71 81       	ldd	r23, Z+1	; 0x01
     fda:	07 2e       	mov	r0, r23
     fdc:	00 0c       	add	r0, r0
     fde:	88 0b       	sbc	r24, r24
     fe0:	99 0b       	sbc	r25, r25
     fe2:	0e 5f       	subi	r16, 0xFE	; 254
     fe4:	1f 4f       	sbci	r17, 0xFF	; 255
     fe6:	f3 2d       	mov	r31, r3
     fe8:	ff 76       	andi	r31, 0x6F	; 111
     fea:	3f 2e       	mov	r3, r31
     fec:	97 ff       	sbrs	r25, 7
     fee:	09 c0       	rjmp	.+18     	; 0x1002 <vfprintf+0x212>
     ff0:	90 95       	com	r25
     ff2:	80 95       	com	r24
     ff4:	70 95       	com	r23
     ff6:	61 95       	neg	r22
     ff8:	7f 4f       	sbci	r23, 0xFF	; 255
     ffa:	8f 4f       	sbci	r24, 0xFF	; 255
     ffc:	9f 4f       	sbci	r25, 0xFF	; 255
     ffe:	f0 68       	ori	r31, 0x80	; 128
    1000:	3f 2e       	mov	r3, r31
    1002:	2a e0       	ldi	r18, 0x0A	; 10
    1004:	30 e0       	ldi	r19, 0x00	; 0
    1006:	a3 01       	movw	r20, r6
    1008:	0e 94 2b 09 	call	0x1256	; 0x1256 <__ultoa_invert>
    100c:	88 2e       	mov	r8, r24
    100e:	86 18       	sub	r8, r6
    1010:	45 c0       	rjmp	.+138    	; 0x109c <vfprintf+0x2ac>
    1012:	85 37       	cpi	r24, 0x75	; 117
    1014:	31 f4       	brne	.+12     	; 0x1022 <vfprintf+0x232>
    1016:	23 2d       	mov	r18, r3
    1018:	2f 7e       	andi	r18, 0xEF	; 239
    101a:	b2 2e       	mov	r11, r18
    101c:	2a e0       	ldi	r18, 0x0A	; 10
    101e:	30 e0       	ldi	r19, 0x00	; 0
    1020:	25 c0       	rjmp	.+74     	; 0x106c <vfprintf+0x27c>
    1022:	93 2d       	mov	r25, r3
    1024:	99 7f       	andi	r25, 0xF9	; 249
    1026:	b9 2e       	mov	r11, r25
    1028:	8f 36       	cpi	r24, 0x6F	; 111
    102a:	c1 f0       	breq	.+48     	; 0x105c <vfprintf+0x26c>
    102c:	18 f4       	brcc	.+6      	; 0x1034 <vfprintf+0x244>
    102e:	88 35       	cpi	r24, 0x58	; 88
    1030:	79 f0       	breq	.+30     	; 0x1050 <vfprintf+0x260>
    1032:	b5 c0       	rjmp	.+362    	; 0x119e <vfprintf+0x3ae>
    1034:	80 37       	cpi	r24, 0x70	; 112
    1036:	19 f0       	breq	.+6      	; 0x103e <vfprintf+0x24e>
    1038:	88 37       	cpi	r24, 0x78	; 120
    103a:	21 f0       	breq	.+8      	; 0x1044 <vfprintf+0x254>
    103c:	b0 c0       	rjmp	.+352    	; 0x119e <vfprintf+0x3ae>
    103e:	e9 2f       	mov	r30, r25
    1040:	e0 61       	ori	r30, 0x10	; 16
    1042:	be 2e       	mov	r11, r30
    1044:	b4 fe       	sbrs	r11, 4
    1046:	0d c0       	rjmp	.+26     	; 0x1062 <vfprintf+0x272>
    1048:	fb 2d       	mov	r31, r11
    104a:	f4 60       	ori	r31, 0x04	; 4
    104c:	bf 2e       	mov	r11, r31
    104e:	09 c0       	rjmp	.+18     	; 0x1062 <vfprintf+0x272>
    1050:	34 fe       	sbrs	r3, 4
    1052:	0a c0       	rjmp	.+20     	; 0x1068 <vfprintf+0x278>
    1054:	29 2f       	mov	r18, r25
    1056:	26 60       	ori	r18, 0x06	; 6
    1058:	b2 2e       	mov	r11, r18
    105a:	06 c0       	rjmp	.+12     	; 0x1068 <vfprintf+0x278>
    105c:	28 e0       	ldi	r18, 0x08	; 8
    105e:	30 e0       	ldi	r19, 0x00	; 0
    1060:	05 c0       	rjmp	.+10     	; 0x106c <vfprintf+0x27c>
    1062:	20 e1       	ldi	r18, 0x10	; 16
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	02 c0       	rjmp	.+4      	; 0x106c <vfprintf+0x27c>
    1068:	20 e1       	ldi	r18, 0x10	; 16
    106a:	32 e0       	ldi	r19, 0x02	; 2
    106c:	f8 01       	movw	r30, r16
    106e:	b7 fe       	sbrs	r11, 7
    1070:	07 c0       	rjmp	.+14     	; 0x1080 <vfprintf+0x290>
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	0c 5f       	subi	r16, 0xFC	; 252
    107c:	1f 4f       	sbci	r17, 0xFF	; 255
    107e:	06 c0       	rjmp	.+12     	; 0x108c <vfprintf+0x29c>
    1080:	60 81       	ld	r22, Z
    1082:	71 81       	ldd	r23, Z+1	; 0x01
    1084:	80 e0       	ldi	r24, 0x00	; 0
    1086:	90 e0       	ldi	r25, 0x00	; 0
    1088:	0e 5f       	subi	r16, 0xFE	; 254
    108a:	1f 4f       	sbci	r17, 0xFF	; 255
    108c:	a3 01       	movw	r20, r6
    108e:	0e 94 2b 09 	call	0x1256	; 0x1256 <__ultoa_invert>
    1092:	88 2e       	mov	r8, r24
    1094:	86 18       	sub	r8, r6
    1096:	fb 2d       	mov	r31, r11
    1098:	ff 77       	andi	r31, 0x7F	; 127
    109a:	3f 2e       	mov	r3, r31
    109c:	36 fe       	sbrs	r3, 6
    109e:	0d c0       	rjmp	.+26     	; 0x10ba <vfprintf+0x2ca>
    10a0:	23 2d       	mov	r18, r3
    10a2:	2e 7f       	andi	r18, 0xFE	; 254
    10a4:	a2 2e       	mov	r10, r18
    10a6:	89 14       	cp	r8, r9
    10a8:	58 f4       	brcc	.+22     	; 0x10c0 <vfprintf+0x2d0>
    10aa:	34 fe       	sbrs	r3, 4
    10ac:	0b c0       	rjmp	.+22     	; 0x10c4 <vfprintf+0x2d4>
    10ae:	32 fc       	sbrc	r3, 2
    10b0:	09 c0       	rjmp	.+18     	; 0x10c4 <vfprintf+0x2d4>
    10b2:	83 2d       	mov	r24, r3
    10b4:	8e 7e       	andi	r24, 0xEE	; 238
    10b6:	a8 2e       	mov	r10, r24
    10b8:	05 c0       	rjmp	.+10     	; 0x10c4 <vfprintf+0x2d4>
    10ba:	b8 2c       	mov	r11, r8
    10bc:	a3 2c       	mov	r10, r3
    10be:	03 c0       	rjmp	.+6      	; 0x10c6 <vfprintf+0x2d6>
    10c0:	b8 2c       	mov	r11, r8
    10c2:	01 c0       	rjmp	.+2      	; 0x10c6 <vfprintf+0x2d6>
    10c4:	b9 2c       	mov	r11, r9
    10c6:	a4 fe       	sbrs	r10, 4
    10c8:	0f c0       	rjmp	.+30     	; 0x10e8 <vfprintf+0x2f8>
    10ca:	fe 01       	movw	r30, r28
    10cc:	e8 0d       	add	r30, r8
    10ce:	f1 1d       	adc	r31, r1
    10d0:	80 81       	ld	r24, Z
    10d2:	80 33       	cpi	r24, 0x30	; 48
    10d4:	21 f4       	brne	.+8      	; 0x10de <vfprintf+0x2ee>
    10d6:	9a 2d       	mov	r25, r10
    10d8:	99 7e       	andi	r25, 0xE9	; 233
    10da:	a9 2e       	mov	r10, r25
    10dc:	09 c0       	rjmp	.+18     	; 0x10f0 <vfprintf+0x300>
    10de:	a2 fe       	sbrs	r10, 2
    10e0:	06 c0       	rjmp	.+12     	; 0x10ee <vfprintf+0x2fe>
    10e2:	b3 94       	inc	r11
    10e4:	b3 94       	inc	r11
    10e6:	04 c0       	rjmp	.+8      	; 0x10f0 <vfprintf+0x300>
    10e8:	8a 2d       	mov	r24, r10
    10ea:	86 78       	andi	r24, 0x86	; 134
    10ec:	09 f0       	breq	.+2      	; 0x10f0 <vfprintf+0x300>
    10ee:	b3 94       	inc	r11
    10f0:	a3 fc       	sbrc	r10, 3
    10f2:	11 c0       	rjmp	.+34     	; 0x1116 <vfprintf+0x326>
    10f4:	a0 fe       	sbrs	r10, 0
    10f6:	06 c0       	rjmp	.+12     	; 0x1104 <vfprintf+0x314>
    10f8:	b2 14       	cp	r11, r2
    10fa:	88 f4       	brcc	.+34     	; 0x111e <vfprintf+0x32e>
    10fc:	28 0c       	add	r2, r8
    10fe:	92 2c       	mov	r9, r2
    1100:	9b 18       	sub	r9, r11
    1102:	0e c0       	rjmp	.+28     	; 0x1120 <vfprintf+0x330>
    1104:	b2 14       	cp	r11, r2
    1106:	60 f4       	brcc	.+24     	; 0x1120 <vfprintf+0x330>
    1108:	b6 01       	movw	r22, r12
    110a:	80 e2       	ldi	r24, 0x20	; 32
    110c:	90 e0       	ldi	r25, 0x00	; 0
    110e:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1112:	b3 94       	inc	r11
    1114:	f7 cf       	rjmp	.-18     	; 0x1104 <vfprintf+0x314>
    1116:	b2 14       	cp	r11, r2
    1118:	18 f4       	brcc	.+6      	; 0x1120 <vfprintf+0x330>
    111a:	2b 18       	sub	r2, r11
    111c:	02 c0       	rjmp	.+4      	; 0x1122 <vfprintf+0x332>
    111e:	98 2c       	mov	r9, r8
    1120:	21 2c       	mov	r2, r1
    1122:	a4 fe       	sbrs	r10, 4
    1124:	10 c0       	rjmp	.+32     	; 0x1146 <vfprintf+0x356>
    1126:	b6 01       	movw	r22, r12
    1128:	80 e3       	ldi	r24, 0x30	; 48
    112a:	90 e0       	ldi	r25, 0x00	; 0
    112c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1130:	a2 fe       	sbrs	r10, 2
    1132:	17 c0       	rjmp	.+46     	; 0x1162 <vfprintf+0x372>
    1134:	a1 fc       	sbrc	r10, 1
    1136:	03 c0       	rjmp	.+6      	; 0x113e <vfprintf+0x34e>
    1138:	88 e7       	ldi	r24, 0x78	; 120
    113a:	90 e0       	ldi	r25, 0x00	; 0
    113c:	02 c0       	rjmp	.+4      	; 0x1142 <vfprintf+0x352>
    113e:	88 e5       	ldi	r24, 0x58	; 88
    1140:	90 e0       	ldi	r25, 0x00	; 0
    1142:	b6 01       	movw	r22, r12
    1144:	0c c0       	rjmp	.+24     	; 0x115e <vfprintf+0x36e>
    1146:	8a 2d       	mov	r24, r10
    1148:	86 78       	andi	r24, 0x86	; 134
    114a:	59 f0       	breq	.+22     	; 0x1162 <vfprintf+0x372>
    114c:	a1 fe       	sbrs	r10, 1
    114e:	02 c0       	rjmp	.+4      	; 0x1154 <vfprintf+0x364>
    1150:	8b e2       	ldi	r24, 0x2B	; 43
    1152:	01 c0       	rjmp	.+2      	; 0x1156 <vfprintf+0x366>
    1154:	80 e2       	ldi	r24, 0x20	; 32
    1156:	a7 fc       	sbrc	r10, 7
    1158:	8d e2       	ldi	r24, 0x2D	; 45
    115a:	b6 01       	movw	r22, r12
    115c:	90 e0       	ldi	r25, 0x00	; 0
    115e:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1162:	89 14       	cp	r8, r9
    1164:	38 f4       	brcc	.+14     	; 0x1174 <vfprintf+0x384>
    1166:	b6 01       	movw	r22, r12
    1168:	80 e3       	ldi	r24, 0x30	; 48
    116a:	90 e0       	ldi	r25, 0x00	; 0
    116c:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1170:	9a 94       	dec	r9
    1172:	f7 cf       	rjmp	.-18     	; 0x1162 <vfprintf+0x372>
    1174:	8a 94       	dec	r8
    1176:	f3 01       	movw	r30, r6
    1178:	e8 0d       	add	r30, r8
    117a:	f1 1d       	adc	r31, r1
    117c:	80 81       	ld	r24, Z
    117e:	b6 01       	movw	r22, r12
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    1186:	81 10       	cpse	r8, r1
    1188:	f5 cf       	rjmp	.-22     	; 0x1174 <vfprintf+0x384>
    118a:	22 20       	and	r2, r2
    118c:	09 f4       	brne	.+2      	; 0x1190 <vfprintf+0x3a0>
    118e:	42 ce       	rjmp	.-892    	; 0xe14 <vfprintf+0x24>
    1190:	b6 01       	movw	r22, r12
    1192:	80 e2       	ldi	r24, 0x20	; 32
    1194:	90 e0       	ldi	r25, 0x00	; 0
    1196:	0e 94 ef 08 	call	0x11de	; 0x11de <fputc>
    119a:	2a 94       	dec	r2
    119c:	f6 cf       	rjmp	.-20     	; 0x118a <vfprintf+0x39a>
    119e:	f6 01       	movw	r30, r12
    11a0:	86 81       	ldd	r24, Z+6	; 0x06
    11a2:	97 81       	ldd	r25, Z+7	; 0x07
    11a4:	02 c0       	rjmp	.+4      	; 0x11aa <vfprintf+0x3ba>
    11a6:	8f ef       	ldi	r24, 0xFF	; 255
    11a8:	9f ef       	ldi	r25, 0xFF	; 255
    11aa:	2b 96       	adiw	r28, 0x0b	; 11
    11ac:	e2 e1       	ldi	r30, 0x12	; 18
    11ae:	0c 94 a5 09 	jmp	0x134a	; 0x134a <__epilogue_restores__>

000011b2 <strnlen_P>:
    11b2:	fc 01       	movw	r30, r24
    11b4:	05 90       	lpm	r0, Z+
    11b6:	61 50       	subi	r22, 0x01	; 1
    11b8:	70 40       	sbci	r23, 0x00	; 0
    11ba:	01 10       	cpse	r0, r1
    11bc:	d8 f7       	brcc	.-10     	; 0x11b4 <strnlen_P+0x2>
    11be:	80 95       	com	r24
    11c0:	90 95       	com	r25
    11c2:	8e 0f       	add	r24, r30
    11c4:	9f 1f       	adc	r25, r31
    11c6:	08 95       	ret

000011c8 <strnlen>:
    11c8:	fc 01       	movw	r30, r24
    11ca:	61 50       	subi	r22, 0x01	; 1
    11cc:	70 40       	sbci	r23, 0x00	; 0
    11ce:	01 90       	ld	r0, Z+
    11d0:	01 10       	cpse	r0, r1
    11d2:	d8 f7       	brcc	.-10     	; 0x11ca <strnlen+0x2>
    11d4:	80 95       	com	r24
    11d6:	90 95       	com	r25
    11d8:	8e 0f       	add	r24, r30
    11da:	9f 1f       	adc	r25, r31
    11dc:	08 95       	ret

000011de <fputc>:
    11de:	0f 93       	push	r16
    11e0:	1f 93       	push	r17
    11e2:	cf 93       	push	r28
    11e4:	df 93       	push	r29
    11e6:	fb 01       	movw	r30, r22
    11e8:	23 81       	ldd	r18, Z+3	; 0x03
    11ea:	21 fd       	sbrc	r18, 1
    11ec:	03 c0       	rjmp	.+6      	; 0x11f4 <fputc+0x16>
    11ee:	8f ef       	ldi	r24, 0xFF	; 255
    11f0:	9f ef       	ldi	r25, 0xFF	; 255
    11f2:	2c c0       	rjmp	.+88     	; 0x124c <fputc+0x6e>
    11f4:	22 ff       	sbrs	r18, 2
    11f6:	16 c0       	rjmp	.+44     	; 0x1224 <fputc+0x46>
    11f8:	46 81       	ldd	r20, Z+6	; 0x06
    11fa:	57 81       	ldd	r21, Z+7	; 0x07
    11fc:	24 81       	ldd	r18, Z+4	; 0x04
    11fe:	35 81       	ldd	r19, Z+5	; 0x05
    1200:	42 17       	cp	r20, r18
    1202:	53 07       	cpc	r21, r19
    1204:	44 f4       	brge	.+16     	; 0x1216 <fputc+0x38>
    1206:	a0 81       	ld	r26, Z
    1208:	b1 81       	ldd	r27, Z+1	; 0x01
    120a:	9d 01       	movw	r18, r26
    120c:	2f 5f       	subi	r18, 0xFF	; 255
    120e:	3f 4f       	sbci	r19, 0xFF	; 255
    1210:	31 83       	std	Z+1, r19	; 0x01
    1212:	20 83       	st	Z, r18
    1214:	8c 93       	st	X, r24
    1216:	26 81       	ldd	r18, Z+6	; 0x06
    1218:	37 81       	ldd	r19, Z+7	; 0x07
    121a:	2f 5f       	subi	r18, 0xFF	; 255
    121c:	3f 4f       	sbci	r19, 0xFF	; 255
    121e:	37 83       	std	Z+7, r19	; 0x07
    1220:	26 83       	std	Z+6, r18	; 0x06
    1222:	14 c0       	rjmp	.+40     	; 0x124c <fputc+0x6e>
    1224:	8b 01       	movw	r16, r22
    1226:	ec 01       	movw	r28, r24
    1228:	fb 01       	movw	r30, r22
    122a:	00 84       	ldd	r0, Z+8	; 0x08
    122c:	f1 85       	ldd	r31, Z+9	; 0x09
    122e:	e0 2d       	mov	r30, r0
    1230:	09 95       	icall
    1232:	89 2b       	or	r24, r25
    1234:	e1 f6       	brne	.-72     	; 0x11ee <fputc+0x10>
    1236:	d8 01       	movw	r26, r16
    1238:	16 96       	adiw	r26, 0x06	; 6
    123a:	8d 91       	ld	r24, X+
    123c:	9c 91       	ld	r25, X
    123e:	17 97       	sbiw	r26, 0x07	; 7
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	17 96       	adiw	r26, 0x07	; 7
    1244:	9c 93       	st	X, r25
    1246:	8e 93       	st	-X, r24
    1248:	16 97       	sbiw	r26, 0x06	; 6
    124a:	ce 01       	movw	r24, r28
    124c:	df 91       	pop	r29
    124e:	cf 91       	pop	r28
    1250:	1f 91       	pop	r17
    1252:	0f 91       	pop	r16
    1254:	08 95       	ret

00001256 <__ultoa_invert>:
    1256:	fa 01       	movw	r30, r20
    1258:	aa 27       	eor	r26, r26
    125a:	28 30       	cpi	r18, 0x08	; 8
    125c:	51 f1       	breq	.+84     	; 0x12b2 <__ultoa_invert+0x5c>
    125e:	20 31       	cpi	r18, 0x10	; 16
    1260:	81 f1       	breq	.+96     	; 0x12c2 <__ultoa_invert+0x6c>
    1262:	e8 94       	clt
    1264:	6f 93       	push	r22
    1266:	6e 7f       	andi	r22, 0xFE	; 254
    1268:	6e 5f       	subi	r22, 0xFE	; 254
    126a:	7f 4f       	sbci	r23, 0xFF	; 255
    126c:	8f 4f       	sbci	r24, 0xFF	; 255
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	af 4f       	sbci	r26, 0xFF	; 255
    1272:	b1 e0       	ldi	r27, 0x01	; 1
    1274:	3e d0       	rcall	.+124    	; 0x12f2 <__ultoa_invert+0x9c>
    1276:	b4 e0       	ldi	r27, 0x04	; 4
    1278:	3c d0       	rcall	.+120    	; 0x12f2 <__ultoa_invert+0x9c>
    127a:	67 0f       	add	r22, r23
    127c:	78 1f       	adc	r23, r24
    127e:	89 1f       	adc	r24, r25
    1280:	9a 1f       	adc	r25, r26
    1282:	a1 1d       	adc	r26, r1
    1284:	68 0f       	add	r22, r24
    1286:	79 1f       	adc	r23, r25
    1288:	8a 1f       	adc	r24, r26
    128a:	91 1d       	adc	r25, r1
    128c:	a1 1d       	adc	r26, r1
    128e:	6a 0f       	add	r22, r26
    1290:	71 1d       	adc	r23, r1
    1292:	81 1d       	adc	r24, r1
    1294:	91 1d       	adc	r25, r1
    1296:	a1 1d       	adc	r26, r1
    1298:	20 d0       	rcall	.+64     	; 0x12da <__ultoa_invert+0x84>
    129a:	09 f4       	brne	.+2      	; 0x129e <__ultoa_invert+0x48>
    129c:	68 94       	set
    129e:	3f 91       	pop	r19
    12a0:	2a e0       	ldi	r18, 0x0A	; 10
    12a2:	26 9f       	mul	r18, r22
    12a4:	11 24       	eor	r1, r1
    12a6:	30 19       	sub	r19, r0
    12a8:	30 5d       	subi	r19, 0xD0	; 208
    12aa:	31 93       	st	Z+, r19
    12ac:	de f6       	brtc	.-74     	; 0x1264 <__ultoa_invert+0xe>
    12ae:	cf 01       	movw	r24, r30
    12b0:	08 95       	ret
    12b2:	46 2f       	mov	r20, r22
    12b4:	47 70       	andi	r20, 0x07	; 7
    12b6:	40 5d       	subi	r20, 0xD0	; 208
    12b8:	41 93       	st	Z+, r20
    12ba:	b3 e0       	ldi	r27, 0x03	; 3
    12bc:	0f d0       	rcall	.+30     	; 0x12dc <__ultoa_invert+0x86>
    12be:	c9 f7       	brne	.-14     	; 0x12b2 <__ultoa_invert+0x5c>
    12c0:	f6 cf       	rjmp	.-20     	; 0x12ae <__ultoa_invert+0x58>
    12c2:	46 2f       	mov	r20, r22
    12c4:	4f 70       	andi	r20, 0x0F	; 15
    12c6:	40 5d       	subi	r20, 0xD0	; 208
    12c8:	4a 33       	cpi	r20, 0x3A	; 58
    12ca:	18 f0       	brcs	.+6      	; 0x12d2 <__ultoa_invert+0x7c>
    12cc:	49 5d       	subi	r20, 0xD9	; 217
    12ce:	31 fd       	sbrc	r19, 1
    12d0:	40 52       	subi	r20, 0x20	; 32
    12d2:	41 93       	st	Z+, r20
    12d4:	02 d0       	rcall	.+4      	; 0x12da <__ultoa_invert+0x84>
    12d6:	a9 f7       	brne	.-22     	; 0x12c2 <__ultoa_invert+0x6c>
    12d8:	ea cf       	rjmp	.-44     	; 0x12ae <__ultoa_invert+0x58>
    12da:	b4 e0       	ldi	r27, 0x04	; 4
    12dc:	a6 95       	lsr	r26
    12de:	97 95       	ror	r25
    12e0:	87 95       	ror	r24
    12e2:	77 95       	ror	r23
    12e4:	67 95       	ror	r22
    12e6:	ba 95       	dec	r27
    12e8:	c9 f7       	brne	.-14     	; 0x12dc <__ultoa_invert+0x86>
    12ea:	00 97       	sbiw	r24, 0x00	; 0
    12ec:	61 05       	cpc	r22, r1
    12ee:	71 05       	cpc	r23, r1
    12f0:	08 95       	ret
    12f2:	9b 01       	movw	r18, r22
    12f4:	ac 01       	movw	r20, r24
    12f6:	0a 2e       	mov	r0, r26
    12f8:	06 94       	lsr	r0
    12fa:	57 95       	ror	r21
    12fc:	47 95       	ror	r20
    12fe:	37 95       	ror	r19
    1300:	27 95       	ror	r18
    1302:	ba 95       	dec	r27
    1304:	c9 f7       	brne	.-14     	; 0x12f8 <__ultoa_invert+0xa2>
    1306:	62 0f       	add	r22, r18
    1308:	73 1f       	adc	r23, r19
    130a:	84 1f       	adc	r24, r20
    130c:	95 1f       	adc	r25, r21
    130e:	a0 1d       	adc	r26, r0
    1310:	08 95       	ret

00001312 <__prologue_saves__>:
    1312:	2f 92       	push	r2
    1314:	3f 92       	push	r3
    1316:	4f 92       	push	r4
    1318:	5f 92       	push	r5
    131a:	6f 92       	push	r6
    131c:	7f 92       	push	r7
    131e:	8f 92       	push	r8
    1320:	9f 92       	push	r9
    1322:	af 92       	push	r10
    1324:	bf 92       	push	r11
    1326:	cf 92       	push	r12
    1328:	df 92       	push	r13
    132a:	ef 92       	push	r14
    132c:	ff 92       	push	r15
    132e:	0f 93       	push	r16
    1330:	1f 93       	push	r17
    1332:	cf 93       	push	r28
    1334:	df 93       	push	r29
    1336:	cd b7       	in	r28, 0x3d	; 61
    1338:	de b7       	in	r29, 0x3e	; 62
    133a:	ca 1b       	sub	r28, r26
    133c:	db 0b       	sbc	r29, r27
    133e:	0f b6       	in	r0, 0x3f	; 63
    1340:	f8 94       	cli
    1342:	de bf       	out	0x3e, r29	; 62
    1344:	0f be       	out	0x3f, r0	; 63
    1346:	cd bf       	out	0x3d, r28	; 61
    1348:	09 94       	ijmp

0000134a <__epilogue_restores__>:
    134a:	2a 88       	ldd	r2, Y+18	; 0x12
    134c:	39 88       	ldd	r3, Y+17	; 0x11
    134e:	48 88       	ldd	r4, Y+16	; 0x10
    1350:	5f 84       	ldd	r5, Y+15	; 0x0f
    1352:	6e 84       	ldd	r6, Y+14	; 0x0e
    1354:	7d 84       	ldd	r7, Y+13	; 0x0d
    1356:	8c 84       	ldd	r8, Y+12	; 0x0c
    1358:	9b 84       	ldd	r9, Y+11	; 0x0b
    135a:	aa 84       	ldd	r10, Y+10	; 0x0a
    135c:	b9 84       	ldd	r11, Y+9	; 0x09
    135e:	c8 84       	ldd	r12, Y+8	; 0x08
    1360:	df 80       	ldd	r13, Y+7	; 0x07
    1362:	ee 80       	ldd	r14, Y+6	; 0x06
    1364:	fd 80       	ldd	r15, Y+5	; 0x05
    1366:	0c 81       	ldd	r16, Y+4	; 0x04
    1368:	1b 81       	ldd	r17, Y+3	; 0x03
    136a:	aa 81       	ldd	r26, Y+2	; 0x02
    136c:	b9 81       	ldd	r27, Y+1	; 0x01
    136e:	ce 0f       	add	r28, r30
    1370:	d1 1d       	adc	r29, r1
    1372:	0f b6       	in	r0, 0x3f	; 63
    1374:	f8 94       	cli
    1376:	de bf       	out	0x3e, r29	; 62
    1378:	0f be       	out	0x3f, r0	; 63
    137a:	cd bf       	out	0x3d, r28	; 61
    137c:	ed 01       	movw	r28, r26
    137e:	08 95       	ret

00001380 <_exit>:
    1380:	f8 94       	cli

00001382 <__stop_program>:
    1382:	ff cf       	rjmp	.-2      	; 0x1382 <__stop_program>
